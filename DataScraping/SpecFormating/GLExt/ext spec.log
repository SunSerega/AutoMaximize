3DFX_multisample [ source: 3DFX\3DFX_multisample.txt ]
	- Strings = [ GL_3DFX_multisample GLX_3DFX_multisample WGL_3DFX_multisample ]
3DFX_tbuffer [ source: 3DFX\3DFX_tbuffer.txt ]
	- Strings = [ GL_3DFX_tbuffer ]
	- Funcs:
		- glTbufferMask3DFX [ void TbufferMask3DFX(uint mask) ]
3DFX_texture_compression_FXT1 [ source: 3DFX\3DFX_texture_compression_FXT1.txt ]
	- Strings = [ GL_3DFX_texture_compression_FXT1 ]
WGL_3DL_stereo_control [ source: 3DL\WGL_3DL_stereo_control.txt ]
	- Strings = [ WGL_3DL_stereo_control ]
	- Funcs:
		- wglSetStereoEmitterState3DL [ BOOL wglSetStereoEmitterState3DL(HDC hDC, UINT uState) ]
AMD_blend_minmax_factor [ source: AMD\AMD_blend_minmax_factor.txt ]
	- Strings = [ GL_AMD_blend_minmax_factor ]
AMD_compressed_3DC_texture [ source: AMD\AMD_compressed_3DC_texture.txt ]
	- Strings = [ GL_AMD_compressed_3DC_texture ]
AMD_compressed_ATC_texture [ source: AMD\AMD_compressed_ATC_texture.txt ]
	- Strings = [ GL_AMD_compressed_ATC_texture ]
AMD_conservative_depth [ source: AMD\AMD_conservative_depth.txt ]
	- Strings = [ GL_AMD_conservative_depth ]
AMD_debug_output [ source: AMD\AMD_debug_output.txt ]
	- Strings = [ GL_AMD_debug_output ]
	- Funcs:
		- glDebugMessageEnableAMD [ void DebugMessageEnableAMD(enum category, enum severity, sizei count, const uint* ids, boolean enabled) ]
		- glDebugMessageInsertAMD [ void DebugMessageInsertAMD(enum category, enum severity, uint id, sizei length, const char* buf) ]
		- glDebugMessageCallbackAMD [ void DebugMessageCallbackAMD(DEBUGPROCAMD callback, void* userParam) ]
		- glGetDebugMessageLogAMD [ uint GetDebugMessageLogAMD(uint count, sizei bufsize, enum* categories, uint* severities, uint* ids, sizei* lengths, char* message) ]
AMD_depth_clamp_separate [ source: AMD\AMD_depth_clamp_separate.txt ]
	- Strings = [ GL_AMD_depth_clamp_separate ]
AMD_draw_buffers_blend [ source: AMD\AMD_draw_buffers_blend.txt ]
	- Strings = [ GL_AMD_draw_buffers_blend ]
	- Funcs:
		- glBlendFuncIndexedAMD [ void BlendFuncIndexedAMD(uint buf, enum src, enum dst) ]
		- glBlendFuncSeparateIndexedAMD [ void BlendFuncSeparateIndexedAMD(uint buf, enum srcRGB, enum dstRGB, enum srcAlpha, enum dstAlpha) ]
		- glBlendEquationIndexedAMD [ void BlendEquationIndexedAMD(uint buf, enum mode) ]
		- glBlendEquationSeparateIndexedAMD [ void BlendEquationSeparateIndexedAMD(uint buf, enum modeRGB, enum modeAlpha) ]
AMD_framebuffer_multisample_advanced [ source: AMD\AMD_framebuffer_multisample_advanced.txt ]
	- Strings = [ GL_AMD_framebuffer_multisample_advanced ]
	- Funcs:
		- glRenderbufferStorageMultisampleAdvancedAMD [ void RenderbufferStorageMultisampleAdvancedAMD( enum target, sizei samples, sizei storageSamples, enum internalformat, sizei width, sizei height ) ]
		- glNamedRenderbufferStorageMultisampleAdvancedAMD [ void NamedRenderbufferStorageMultisampleAdvancedAMD( uint renderbuffer, sizei samples, sizei storageSamples, enum internalformat, sizei width, sizei height ) ]
AMD_framebuffer_sample_positions [ source: AMD\AMD_framebuffer_sample_positions.txt ]
	- Strings = [ GL_AMD_framebuffer_sample_positions ]
	- Funcs:
		- glFramebufferSamplePositionsfvAMD [ void FramebufferSamplePositionsfvAMD(enum target, uint numsamples, uint pixelindex, const float *values) ]
		- glNamedFramebufferSamplePositionsfvAMD [ void NamedFramebufferSamplePositionsfvAMD(uint framebuffer, uint numsamples, uint pixelindex, const float *values) ]
		- glGetFramebufferParameterfvAMD [ void GetFramebufferParameterfvAMD(enum target, enum pname, uint numsamples, uint pixelindex, sizei size, float *values) ]
		- glGetNamedFramebufferParameterfvAMD [ void GetNamedFramebufferParameterfvAMD(uint framebuffer, enum pname, uint numsamples, uint pixelindex, sizei size, float *values) ]
AMD_gcn_shader [ source: AMD\AMD_gcn_shader.txt ]
	- Strings = [ GL_AMD_gcn_shader ]
AMD_gpu_shader_half_float [ source: AMD\AMD_gpu_shader_half_float.txt ]
	- Strings = [ GL_AMD_gpu_shader_half_float ]
AMD_gpu_shader_half_float_fetch [ source: AMD\AMD_gpu_shader_half_float_fetch.txt ]
	- Strings = [ GL_AMD_gpu_shader_half_float_fetch ]
AMD_gpu_shader_int16 [ source: AMD\AMD_gpu_shader_int16.txt ]
	- Strings = [ GL_AMD_gpu_shader_int16 ]
AMD_gpu_shader_int64 [ source: AMD\AMD_gpu_shader_int64.txt ]
	- Strings = [ GL_AMD_gpu_shader_int64 ]
	- Funcs:
		- glUniform1i64NV [ void Uniform1i64NV(int location, int64EXT x) ]
		- glUniform2i64NV [ void Uniform2i64NV(int location, int64EXT x, int64EXT y) ]
		- glUniform3i64NV [ void Uniform3i64NV(int location, int64EXT x, int64EXT y, int64EXT z) ]
		- glUniform4i64NV [ void Uniform4i64NV(int location, int64EXT x, int64EXT y, int64EXT z, int64EXT w) ]
		- glUniform1i64vNV [ void Uniform1i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform2i64vNV [ void Uniform2i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform3i64vNV [ void Uniform3i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform4i64vNV [ void Uniform4i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform1ui64NV [ void Uniform1ui64NV(int location, uint64EXT x) ]
		- glUniform2ui64NV [ void Uniform2ui64NV(int location, uint64EXT x, uint64EXT y) ]
		- glUniform3ui64NV [ void Uniform3ui64NV(int location, uint64EXT x, uint64EXT y, uint64EXT z) ]
		- glUniform4ui64NV [ void Uniform4ui64NV(int location, uint64EXT x, uint64EXT y, uint64EXT z, uint64EXT w) ]
		- glUniform1ui64vNV [ void Uniform1ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform2ui64vNV [ void Uniform2ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform3ui64vNV [ void Uniform3ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform4ui64vNV [ void Uniform4ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glGetUniformi64vNV [ void GetUniformi64vNV(uint program, int location, int64EXT *params) ]
		- glGetUniformui64vNV [ void GetUniformui64vNV(uint program, int location, uint64EXT *params) ]
		- glProgramUniform1i64NV [ void ProgramUniform1i64NV(uint program, int location, int64EXT x) ]
		- glProgramUniform2i64NV [ void ProgramUniform2i64NV(uint program, int location, int64EXT x, int64EXT y) ]
		- glProgramUniform3i64NV [ void ProgramUniform3i64NV(uint program, int location, int64EXT x, int64EXT y, int64EXT z) ]
		- glProgramUniform4i64NV [ void ProgramUniform4i64NV(uint program, int location, int64EXT x, int64EXT y, int64EXT z, int64EXT w) ]
		- glProgramUniform1i64vNV [ void ProgramUniform1i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform2i64vNV [ void ProgramUniform2i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform3i64vNV [ void ProgramUniform3i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform4i64vNV [ void ProgramUniform4i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform1ui64NV [ void ProgramUniform1ui64NV(uint program, int location, uint64EXT x) ]
		- glProgramUniform2ui64NV [ void ProgramUniform2ui64NV(uint program, int location, uint64EXT x, uint64EXT y) ]
		- glProgramUniform3ui64NV [ void ProgramUniform3ui64NV(uint program, int location, uint64EXT x, uint64EXT y, uint64EXT z) ]
		- glProgramUniform4ui64NV [ void ProgramUniform4ui64NV(uint program, int location, uint64EXT x, uint64EXT y, uint64EXT z, uint64EXT w) ]
		- glProgramUniform1ui64vNV [ void ProgramUniform1ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform2ui64vNV [ void ProgramUniform2ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform3ui64vNV [ void ProgramUniform3ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform4ui64vNV [ void ProgramUniform4ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
AMD_interleaved_elements [ source: AMD\AMD_interleaved_elements.txt ]
	- Strings = [ GL_AMD_interleaved_elements ]
	- Funcs:
		- glVertexAttribParameteriAMD [ void VertexAttribParameteriAMD(uint index, enum pname, int param) ]
AMD_multi_draw_indirect [ source: AMD\AMD_multi_draw_indirect.txt ]
	- Strings = [ GL_AMD_multi_draw_indirect ]
	- Funcs:
		- glMultiDrawArraysIndirectAMD [ void MultiDrawArraysIndirectAMD(enum mode, const void *indirect, sizei primcount, sizei stride) ]
		- glMultiDrawElementsIndirectAMD [ void MultiDrawElementsIndirectAMD(enum mode, enum type, const void *indirect, sizei primcount, sizei stride) ]
AMD_name_gen_delete [ source: AMD\AMD_name_gen_delete.txt ]
	- Strings = [ GL_AMD_name_gen_delete ]
	- Funcs:
		- glGenNamesAMD [ void GenNamesAMD(enum identifier, uint num, uint *names) ]
		- glDeleteNamesAMD [ void DeleteNamesAMD(enum identifier, uint num, const uint *names) ]
		- glIsNameAMD [ boolean IsNameAMD(enum identifier, uint name) ]
AMD_occlusion_query_event [ source: AMD\AMD_occlusion_query_event.txt ]
	- Strings = [ GL_AMD_occlusion_query_event ]
	- Funcs:
		- glQueryObjectParameteruiAMD [ void QueryObjectParameteruiAMD(enum target, uint id, enum pname, uint param) ]
AMD_performance_monitor [ source: AMD\AMD_performance_monitor.txt ]
	- Strings = [ GL_AMD_performance_monitor ]
	- Funcs:
		- glGetPerfMonitorGroupsAMD [ void GetPerfMonitorGroupsAMD(int *numGroups, sizei groupsSize, uint *groups) ]
		- glGetPerfMonitorCountersAMD [ void GetPerfMonitorCountersAMD(uint group, int *numCounters, int *maxActiveCounters, sizei countersSize, uint *counters) ]
		- glGetPerfMonitorGroupStringAMD [ void GetPerfMonitorGroupStringAMD(uint group, sizei bufSize, sizei *length, char *groupString) ]
		- glGetPerfMonitorCounterStringAMD [ void GetPerfMonitorCounterStringAMD(uint group, uint counter, sizei bufSize, sizei *length, char *counterString) ]
		- glGetPerfMonitorCounterInfoAMD [ void GetPerfMonitorCounterInfoAMD(uint group, uint counter, enum pname, void *data) ]
		- glGenPerfMonitorsAMD [ void GenPerfMonitorsAMD(sizei n, uint *monitors) ]
		- glDeletePerfMonitorsAMD [ void DeletePerfMonitorsAMD(sizei n, uint *monitors) ]
		- glSelectPerfMonitorCountersAMD [ void SelectPerfMonitorCountersAMD(uint monitor, boolean enable, uint group, int numCounters, uint *counterList) ]
		- glBeginPerfMonitorAMD [ void BeginPerfMonitorAMD(uint monitor) ]
		- glEndPerfMonitorAMD [ void EndPerfMonitorAMD(uint monitor) ]
		- glGetPerfMonitorCounterDataAMD [ void GetPerfMonitorCounterDataAMD(uint monitor, enum pname, sizei dataSize, uint *data, int *bytesWritten) ]
AMD_pinned_memory [ source: AMD\AMD_pinned_memory.txt ]
	- Strings = [ GL_AMD_pinned_memory ]
AMD_program_binary_Z400 [ source: AMD\AMD_program_binary_Z400.txt ]
	- Strings = [ GL_AMD_program_binary_Z400 ]
AMD_query_buffer_object [ source: AMD\AMD_query_buffer_object.txt ]
	- Strings = [ GL_AMD_query_buffer_object ]
AMD_sample_positions [ source: AMD\AMD_sample_positions.txt ]
	- Strings = [ GL_AMD_sample_positions ]
	- Funcs:
		- glSetMultisamplefvAMD [ void SetMultisamplefvAMD(enum pname, uint index, const float *val) ]
AMD_seamless_cubemap_per_texture [ source: AMD\AMD_seamless_cubemap_per_texture.txt ]
	- Strings = [ GL_AMD_seamless_cubemap_per_texture ]
AMD_shader_atomic_counter_ops [ source: AMD\AMD_shader_atomic_counter_ops.txt ]
	- Strings = [ GL_AMD_shader_atomic_counter_ops ]
AMD_shader_ballot [ source: AMD\AMD_shader_ballot.txt ]
	- Strings = [ GL_AMD_shader_ballot ]
AMD_shader_explicit_vertex_parameter [ source: AMD\AMD_shader_explicit_vertex_parameter.txt ]
	- Strings = [ GL_AMD_shader_explicit_vertex_parameter ]
AMD_shader_image_load_store_lod [ source: AMD\AMD_shader_image_load_store_lod.txt ]
	- Strings = [ GL_AMD_shader_image_load_store_lod ]
AMD_shader_stencil_export [ source: AMD\AMD_shader_stencil_export.txt ]
	- Strings = [ GL_AMD_shader_stencil_export ]
AMD_shader_stencil_value_export [ source: AMD\AMD_shader_stencil_value_export.txt ]
	- Strings = [ GL_AMD_shader_stencil_value_export ]
AMD_shader_trinary_minmax [ source: AMD\AMD_shader_trinary_minmax.txt ]
	- Strings = [ GL_AMD_shader_trinary_minmax ]
AMD_sparse_texture [ source: AMD\AMD_sparse_texture.txt ]
	- Strings = [ GL_AMD_sparse_texture ]
	- Funcs:
		- glTexStorageSparseAMD [ void TexStorageSparseAMD(enum target, enum internalFormat, sizei width, sizei height, sizei depth, sizei layers, bitfield flags) ]
		- glTextureStorageSparseAMD [ void TextureStorageSparseAMD(uint texture, enum target, enum internalFormat, sizei width, sizei height, sizei depth, sizei layers, bitfield flags) ]
AMD_stencil_operation_extended [ source: AMD\AMD_stencil_operation_extended.txt ]
	- Strings = [ GL_AMD_stencil_operation_extended ]
	- Funcs:
		- glStencilOpValueAMD [ void StencilOpValueAMD(enum face, uint value) ]
AMD_texture_gather_bias_lod [ source: AMD\AMD_texture_gather_bias_lod.txt ]
	- Strings = [ GL_AMD_texture_gather_bias_lod ]
AMD_texture_texture4 [ source: AMD\AMD_texture_texture4.txt ]
	- Strings = [ GL_AMD_texture_texture4 ]
AMD_transform_feedback3_lines_triangles [ source: AMD\AMD_transform_feedback3_lines_triangles.txt ]
	- Strings = [ GL_AMD_transform_feedback3_lines_triangles ]
AMD_transform_feedback4 [ source: AMD\AMD_transform_feedback4.txt ]
	- Strings = [ GL_AMD_transform_feedback4 ]
AMD_vertex_shader_layer [ source: AMD\AMD_vertex_shader_layer.txt ]
	- Strings = [ GL_AMD_vertex_shader_layer ]
AMD_vertex_shader_tessellator [ source: AMD\AMD_vertex_shader_tessellator.txt ]
	- Strings = [ GL_AMD_vertex_shader_tessellator ]
	- Funcs:
		- glTessellationFactorAMD [ void TessellationFactorAMD( float factor ) ]
		- glTessellationModeAMD [ void TessellationModeAMD( enum mode ) ]
AMD_vertex_shader_viewport_index [ source: AMD\AMD_vertex_shader_viewport_index.txt ]
	- Strings = [ GL_AMD_vertex_shader_viewport_index ]
AMD_gpu_association [ source: AMD\GLX_AMD_gpu_association.txt ]
	- Strings = [ GLX_AMD_gpu_association ]
	- Funcs:
		- glXGetGPUIDsAMD [ int glXGetGPUIDsAMD(unsigned int maxCount, unsigned int *ids) ]
		- glXGetGPUInfoAMD [ int glXGetGPUInfoAMD(unsigned int id, int property, GLenum dataType, unsigned int size, void *data) ]
		- glXGetContextGPUIDAMD [ int glXGetContextGPUIDAMD(GLXContext ctx) ]
		- glXCreateAssociatedContextAMD [ GLXContext glXCreateAssociatedContextAMD(unsigned int id, GLXContext share_list) ]
		- glXCreateAssociatedContextAttribsAMD [ GLXContext glXCreateAssociatedContextAttribsAMD(unsigned int id, GLXContext share_context, const int *attribList) ]
		- glXDeleteAssociatedContextAMD [ Bool glXDeleteAssociatedContextAMD(GLXContext ctx) ]
		- glXMakeAssociatedContextCurrentAMD [ Bool glXMakeAssociatedContextCurrentAMD(GLXContext ctx) ]
		- glXGetCurrentAssociatedContextAMD [ GLXContext glXGetCurrentAssociatedContextAMD(void) ]
		- glXBlitContextFramebufferAMD [ void glXBlitContextFramebufferAMD(GLXContext dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) ]
AMD_gpu_association [ source: AMD\WGL_AMD_gpu_association.txt ]
	- Strings = [ WGL_AMD_gpu_association ]
	- Funcs:
		- wglGetGPUIDsAMD [ UINT wglGetGPUIDsAMD(UINT maxCount, UINT *ids) ]
		- wglGetGPUInfoAMD [ INT wglGetGPUInfoAMD(UINT id, INT property, GLenum dataType, UINT size, void *data) ]
		- wglGetContextGPUIDAMD [ UINT wglGetContextGPUIDAMD(HGLRC hglrc) ]
		- wglCreateAssociatedContextAMD [ HGLRC wglCreateAssociatedContextAMD(UINT id) ]
		- wglCreateAssociatedContextAttribsAMD [ HGLRC wglCreateAssociatedContextAttribsAMD(UINT id, HGLRC hShareContext, const int *attribList) ]
		- wglDeleteAssociatedContextAMD [ BOOL wglDeleteAssociatedContextAMD(HGLRC hglrc) ]
		- wglMakeAssociatedContextCurrentAMD [ BOOL wglMakeAssociatedContextCurrentAMD(HGLRC hglrc) ]
		- wglGetCurrentAssociatedContextAMD [ HGLRC wglGetCurrentAssociatedContextAMD(void) ]
		- wglBlitContextFramebufferAMD [ VOID wglBlitContextFramebufferAMD(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) ]
ANDROID_extension_pack_es31a [ source: ANDROID\ANDROID_extension_pack_es31a.txt ]
	- Strings = [ GL_ANDROID_extension_pack_es31a ]
ANGLE_depth_texture [ source: ANGLE\ANGLE_depth_texture.txt ]
	- Strings = [ GL_ANGLE_depth_texture ]
ANGLE_framebuffer_blit [ source: ANGLE\ANGLE_framebuffer_blit.txt ]
	- Strings = [ GL_ANGLE_framebuffer_blit ]
	- Funcs:
		- glBlitFramebufferANGLE [ void BlitFramebufferANGLE(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
ANGLE_framebuffer_multisample [ source: ANGLE\ANGLE_framebuffer_multisample.txt ]
	- Strings = [ GL_ANGLE_framebuffer_multisample ]
	- Funcs:
		- glRenderbufferStorageMultisampleANGLE [ void RenderbufferStorageMultisampleANGLE( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
ANGLE_instanced_arrays [ source: ANGLE\ANGLE_instanced_arrays.txt ]
	- Strings = [ GL_ANGLE_instanced_arrays ]
	- Funcs:
		- glDrawArraysInstancedANGLE [ void DrawArraysInstancedANGLE(enum mode, int first, sizei count, sizei primcount) ]
		- glDrawElementsInstancedANGLE [ void DrawElementsInstancedANGLE(enum mode, sizei count, enum type, const void *indices, sizei primcount) ]
		- glVertexAttribDivisorANGLE [ void VertexAttribDivisorANGLE(uint index, uint divisor) ]
ANGLE_pack_reverse_row_order [ source: ANGLE\ANGLE_pack_reverse_row_order.txt ]
	- Strings = [ GL_ANGLE_pack_reverse_row_order ]
ANGLE_program_binary [ source: ANGLE\ANGLE_program_binary.txt ]
	- Strings = [ GL_ANGLE_program_binary ]
ANGLE_texture_compression_dxt [ source: ANGLE\ANGLE_texture_compression_dxt.txt ]
	- Strings = [ GL_ANGLE_texture_compression_dxt1 GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 ]
ANGLE_texture_usage [ source: ANGLE\ANGLE_texture_usage.txt ]
	- Strings = [ GL_ANGLE_texture_usage ]
ANGLE_translated_shader_source [ source: ANGLE\ANGLE_translated_shader_source.txt ]
	- Strings = [ GL_ANGLE_translated_shader_source ]
	- Funcs:
		- glGetTranslatedShaderSourceANGLE [ void GetTranslatedShaderSourceANGLE(uint shader, sizei bufsize, sizei* length, char* source) ]
APPLE_aux_depth_stencil [ source: APPLE\APPLE_aux_depth_stencil.txt ]
	- Strings = [ GL_APPLE_aux_depth_stencil ]
APPLE_client_storage [ source: APPLE\APPLE_client_storage.txt ]
	- Strings = [ GL_APPLE_client_storage ]
APPLE_clip_distance [ source: APPLE\APPLE_clip_distance.txt ]
	- Strings = [ GL_APPLE_clip_distance ]
APPLE_color_buffer_packed_float [ source: APPLE\APPLE_color_buffer_packed_float.txt ]
	- Strings = [ GL_APPLE_color_buffer_packed_float ]
APPLE_copy_texture_levels [ source: APPLE\APPLE_copy_texture_levels.txt ]
	- Strings = [ GL_APPLE_copy_texture_levels ]
	- Funcs:
		- glCopyTextureLevelsAPPLE [ void CopyTextureLevelsAPPLE(uint destinationTexture, uint sourceTexture, int sourceBaseLevel, sizei sourceLevelCount) ]
APPLE_element_array [ source: APPLE\APPLE_element_array.txt ]
	- Strings = [ GL_APPLE_element_array ]
	- Funcs:
		- glElementPointerAPPLE [ void ElementPointerAPPLE(enum type, const void *pointer) ]
		- glDrawElementArrayAPPLE [ void DrawElementArrayAPPLE(enum mode, int first, sizei count) ]
		- glDrawRangeElementArrayAPPLE [ void DrawRangeElementArrayAPPLE(enum mode, uint start, uint end, int first, sizei count) ]
		- glMultiDrawElementArrayAPPLE [ void MultiDrawElementArrayAPPLE(enum mode, const int *first, const sizei *count, sizei primcount) ]
		- glMultiDrawRangeElementArrayAPPLE [ void MultiDrawRangeElementArrayAPPLE(enum mode, uint start, uint end, const int *first, const sizei *count, sizei primcount) ]
APPLE_fence [ source: APPLE\APPLE_fence.txt ]
	- Strings = [ GL_APPLE_fence ]
	- Funcs:
		- glGenFencesAPPLE [ void GenFencesAPPLE(sizei n, uint *fences) ]
		- glDeleteFencesAPPLE [ void DeleteFencesAPPLE(sizei n, const uint *fences) ]
		- glSetFenceAPPLE [ void SetFenceAPPLE(uint fence) ]
		- glIsFenceAPPLE [ boolean IsFenceAPPLE(uint fence) ]
		- glTestFenceAPPLE [ boolean TestFenceAPPLE(uint fence) ]
		- glFinishFenceAPPLE [ void FinishFenceAPPLE(uint fence) ]
		- glTestObjectAPPLE [ boolean TestObjectAPPLE(enum object, uint name) ]
		- glFinishObjectAPPLE [ void FinishObjectAPPLE(enum object, int name) ]
APPLE_float_pixels [ source: APPLE\APPLE_float_pixels.txt ]
	- Strings = [ GL_APPLE_float_pixels ]
APPLE_flush_buffer_range [ source: APPLE\APPLE_flush_buffer_range.txt ]
	- Strings = [ GL_APPLE_flush_buffer_range ]
	- Funcs:
		- glBufferParameteriAPPLE [ void BufferParameteriAPPLE(enum target, enum pname, int param) ]
		- glFlushMappedBufferRangeAPPLE [ void FlushMappedBufferRangeAPPLE(enum target, intptr offset, sizeiptr size) ]
APPLE_framebuffer_multisample [ source: APPLE\APPLE_framebuffer_multisample.txt ]
	- Strings = [ GL_APPLE_framebuffer_multisample ]
	- Funcs:
		- glRenderbufferStorageMultisampleAPPLE [ void RenderbufferStorageMultisampleAPPLE( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glResolveMultisampleFramebufferAPPLE [ void ResolveMultisampleFramebufferAPPLE(void) ]
APPLE_object_purgeable [ source: APPLE\APPLE_object_purgeable.txt ]
	- Strings = [ GL_APPLE_object_purgeable ]
	- Funcs:
		- glObjectPurgeableAPPLE [ enum ObjectPurgeableAPPLE(enum objectType, uint name, enum option) ]
		- glObjectUnpurgeableAPPLE [ enum ObjectUnpurgeableAPPLE(enum objectType, uint name, enum option) ]
		- glGetObjectParameterivAPPLE [ void GetObjectParameterivAPPLE(enum objectType, uint name, enum pname, int* params) ]
APPLE_rgb_422 [ source: APPLE\APPLE_rgb_422.txt ]
	- Strings = [ GL_APPLE_rgb_422 ]
APPLE_row_bytes [ source: APPLE\APPLE_row_bytes.txt ]
	- Strings = [ GL_APPLE_row_bytes ]
APPLE_specular_vector [ UNDONE_SPECsource: APPLE\APPLE_specular_vector.txt ]
	- Strings = [ GL_APPLE_specular_vector ]
APPLE_sync [ source: APPLE\APPLE_sync.txt ]
	- Strings = [ GL_APPLE_sync ]
	- Funcs:
		- glFenceSyncAPPLE [ sync FenceSyncAPPLE(enum condition, bitfield flags) ]
		- glIsSyncAPPLE [ boolean IsSyncAPPLE(sync sync) ]
		- glDeleteSyncAPPLE [ void DeleteSyncAPPLE(sync sync) ]
		- glClientWaitSyncAPPLE [ enum ClientWaitSyncAPPLE(sync sync, bitfield flags, uint64 timeout) ]
		- glWaitSyncAPPLE [ void WaitSyncAPPLE(sync sync, bitfield flags, uint64 timeout) ]
		- glGetInteger64vAPPLE [ void GetInteger64vAPPLE(enum pname, int64 *params) ]
		- glGetSyncivAPPLE [ void GetSyncivAPPLE(sync sync, enum pname, sizei bufSize, sizei *length, int *values) ]
APPLE_texture_2D_limited_npot [ source: APPLE\APPLE_texture_2D_limited_npot.txt ]
	- Strings = [ GL_APPLE_texture_2D_limited_npot ]
APPLE_texture_format_BGRA8888 [ source: APPLE\APPLE_texture_format_BGRA8888.txt ]
	- Strings = [ GL_APPLE_texture_format_BGRA8888 ]
APPLE_texture_max_level [ source: APPLE\APPLE_texture_max_level.txt ]
	- Strings = [ GL_APPLE_texture_max_level ]
APPLE_texture_packed_float [ source: APPLE\APPLE_texture_packed_float.txt ]
	- Strings = [ GL_APPLE_texture_packed_float ]
APPLE_texture_range [ source: APPLE\APPLE_texture_range.txt ]
	- Strings = [ GL_APPLE_texture_range ]
	- Funcs:
		- glTextureRangeAPPLE [ void TextureRangeAPPLE(enum target, sizei length, void *pointer) ]
		- glGetTexParameterPointervAPPLE [ void GetTexParameterPointervAPPLE(enum target, enum pname, void **params) ]
APPLE_transform_hint [ UNDONE_SPECsource: APPLE\APPLE_transform_hint.txt ]
	- Strings = [ GL_APPLE_transform_hint ]
APPLE_vertex_array_object [ source: APPLE\APPLE_vertex_array_object.txt ]
	- Strings = [ GL_APPLE_vertex_array_object ]
	- Funcs:
		- glBindVertexArrayAPPLE [ void BindVertexArrayAPPLE(uint array) ]
		- glDeleteVertexArraysAPPLE [ void DeleteVertexArraysAPPLE(sizei n, const uint *arrays) ]
		- glGenVertexArraysAPPLE [ void GenVertexArraysAPPLE(sizei n, const uint *arrays) ]
		- glIsVertexArrayAPPLE [ boolean IsVertexArrayAPPLE(uint array) ]
APPLE_vertex_array_range [ source: APPLE\APPLE_vertex_array_range.txt ]
	- Strings = [ GL_APPLE_vertex_array_range ]
	- Funcs:
		- glVertexArrayRangeAPPLE [ void VertexArrayRangeAPPLE(sizei length, void *pointer) ]
		- glFlushVertexArrayRangeAPPLE [ void FlushVertexArrayRangeAPPLE(sizei length, void *pointer) ]
		- glVertexArrayParameteriAPPLE [ void VertexArrayParameteriAPPLE(enum pname, int param) ]
APPLE_vertex_program_evaluators [ source: APPLE\APPLE_vertex_program_evaluators.txt ]
	- Strings = [ GL_APPLE_vertex_program_evaluators ]
	- Funcs:
		- glEnableVertexAttribAPPLE [ void EnableVertexAttribAPPLE(uint index, enum pname) ]
		- glDisableVertexAttribAPPLE [ void DisableVertexAttribAPPLE(uint index, enum pname) ]
		- glIsVertexAttribEnabledAPPLE [ boolean IsVertexAttribEnabledAPPLE(uint index, enum pname) ]
		- glMapVertexAttrib1dAPPLE [ void MapVertexAttrib1dAPPLE(uint index, uint size, double u1, double u2, int stride, int order, const double *points) ]
		- glMapVertexAttrib1fAPPLE [ void MapVertexAttrib1fAPPLE(uint index, uint size, float u1, float u2, int stride, int order, const float *points) ]
		- glMapVertexAttrib2dAPPLE [ void MapVertexAttrib2dAPPLE(uint index, uint size, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, const double *points) ]
		- glMapVertexAttrib2fAPPLE [ void MapVertexAttrib2fAPPLE(uint index, uint size, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, const float *points) ]
APPLE_ycbcr_422 [ source: APPLE\APPLE_ycbcr_422.txt ]
	- Strings = [ GL_APPLE_ycbcr_422 ]
ARB_arrays_of_arrays [ source: ARB\ARB_arrays_of_arrays.txt ]
	- Strings = [ GL_ARB_arrays_of_arrays ]
ARB_base_instance [ source: ARB\ARB_base_instance.txt ]
	- Strings = [ GL_ARB_base_instance ]
	- Funcs:
		- glDrawArraysInstancedBaseInstance [ void DrawArraysInstancedBaseInstance(enum mode, int first, sizei count, sizei primcount, uint baseinstance) ]
		- glDrawElementsInstancedBaseInstance [ void DrawElementsInstancedBaseInstance(enum mode, sizei count, enum type, const void *indices, sizei primcount, uint baseinstance) ]
		- glDrawElementsInstancedBaseVertexBaseInstance [ void DrawElementsInstancedBaseVertexBaseInstance(enum mode, sizei count, enum type, const void *indices, sizei primcount, int basevertex, uint baseinstance) ]
ARB_bindless_texture [ source: ARB\ARB_bindless_texture.txt ]
	- Strings = [ GL_ARB_bindless_texture ]
	- Funcs:
		- glGetTextureHandleARB [ uint64 GetTextureHandleARB(uint texture) ]
		- glGetTextureSamplerHandleARB [ uint64 GetTextureSamplerHandleARB(uint texture, uint sampler) ]
		- glMakeTextureHandleResidentARB [ void MakeTextureHandleResidentARB(uint64 handle) ]
		- glMakeTextureHandleNonResidentARB [ void MakeTextureHandleNonResidentARB(uint64 handle) ]
		- glGetImageHandleARB [ uint64 GetImageHandleARB(uint texture, int level, boolean layered, int layer, enum format) ]
		- glMakeImageHandleResidentARB [ void MakeImageHandleResidentARB(uint64 handle, enum access) ]
		- glMakeImageHandleNonResidentARB [ void MakeImageHandleNonResidentARB(uint64 handle) ]
		- glUniformHandleui64ARB [ void UniformHandleui64ARB(int location, uint64 value) ]
		- glUniformHandleui64vARB [ void UniformHandleui64vARB(int location, sizei count, const uint64 *value) ]
		- glProgramUniformHandleui64ARB [ void ProgramUniformHandleui64ARB(uint program, int location, uint64 value) ]
		- glProgramUniformHandleui64vARB [ void ProgramUniformHandleui64vARB(uint program, int location, sizei count, const uint64 *values) ]
		- glIsTextureHandleResidentARB [ boolean IsTextureHandleResidentARB(uint64 handle) ]
		- glIsImageHandleResidentARB [ boolean IsImageHandleResidentARB(uint64 handle) ]
		- glVertexAttribL1ui64ARB [ void VertexAttribL1ui64ARB(uint index, uint64EXT x) ]
		- glVertexAttribL1ui64vARB [ void VertexAttribL1ui64vARB(uint index, const uint64EXT *v) ]
		- glGetVertexAttribLui64vARB [ void GetVertexAttribLui64vARB(uint index, enum pname, uint64EXT *params) ]
ARB_blend_func_extended [ source: ARB\ARB_blend_func_extended.txt ]
	- Strings = [ GL_ARB_blend_func_extended ]
	- Funcs:
		- glBindFragDataLocationIndexed [ void BindFragDataLocationIndexed(uint program, uint colorNumber, uint index, const char * name) ]
		- glGetFragDataIndex [ int GetFragDataIndex(uint program, const char * name) ]
ARB_buffer_storage [ source: ARB\ARB_buffer_storage.txt ]
	- Strings = [ GL_ARB_buffer_storage ]
	- Funcs:
		- glBufferStorage [ void BufferStorage(enum target, sizeiptr size, const void * data, bitfield flags) ]
		- glNamedBufferStorageEXT [ void NamedBufferStorageEXT(uint buffer, sizeiptr size, const void * data, bitfield flags) ]
ARB_clear_buffer_object [ source: ARB\ARB_clear_buffer_object.txt ]
	- Strings = [ GL_ARB_clear_buffer_object ]
	- Funcs:
		- glClearBufferData [ void ClearBufferData(enum target, enum internalformat, enum format, enum type, const void * data) ]
		- glClearBufferSubData [ void ClearBufferSubData(enum target, enum internalformat, intptr offset, sizeiptr size, enum format, enum type, const void * data) ]
		- glClearNamedBufferDataEXT [ void ClearNamedBufferDataEXT(uint buffer, enum internalformat, enum format, enum type, const void * data) ]
		- glClearNamedBufferSubDataEXT [ void ClearNamedBufferSubDataEXT(uint buffer, enum internalformat, intptr offset, sizeiptr size, enum format, enum type, const void * data) ]
ARB_clear_texture [ source: ARB\ARB_clear_texture.txt ]
	- Strings = [ GL_ARB_clear_texture ]
	- Funcs:
		- glClearTexImage [ void ClearTexImage(uint texture, int level, enum format, enum type, const void * data) ]
		- glClearTexSubImage [ void ClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void * data) ]
ARB_clip_control [ source: ARB\ARB_clip_control.txt ]
	- Strings = [ GL_ARB_clip_control ]
	- Funcs:
		- glClipControl [ void ClipControl(enum origin, enum depth) ]
ARB_cl_event [ source: ARB\ARB_cl_event.txt ]
	- Strings = [ GL_ARB_cl_event ]
	- Funcs:
		- glCreateSyncFromCLeventARB [ sync CreateSyncFromCLeventARB(cl_context context, cl_event event, bitfield flags) ]
ARB_color_buffer_float [ source: ARB\ARB_color_buffer_float.txt ]
	- Strings = [ GL_ARB_color_buffer_float WGL_ARB_pixel_format_float GLX_ARB_fbconfig_float ]
	- Funcs:
		- glClampColorARB [ void ClampColorARB(enum target, enum clamp) ]
ARB_compatibility [ source: ARB\ARB_compatibility.txt ]
	- Strings = [ GL_ARB_compatibility ]
ARB_compressed_texture_pixel_storage [ source: ARB\ARB_compressed_texture_pixel_storage.txt ]
	- Strings = [ GL_ARB_compressed_texture_pixel_storage ]
ARB_compute_shader [ source: ARB\ARB_compute_shader.txt ]
	- Strings = [ GL_ARB_compute_shader ]
	- Funcs:
		- glDispatchCompute [ void DispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z) ]
		- glDispatchComputeIndirect [ void DispatchComputeIndirect(intptr indirect) ]
ARB_compute_variable_group_size [ source: ARB\ARB_compute_variable_group_size.txt ]
	- Strings = [ GL_ARB_compute_variable_group_size ]
	- Funcs:
		- glDispatchComputeGroupSizeARB [ void DispatchComputeGroupSizeARB(uint num_groups_x, uint num_groups_y, uint num_groups_z, uint group_size_x, uint group_size_y, uint group_size_z) ]
ARB_conditional_render_inverted [ source: ARB\ARB_conditional_render_inverted.txt ]
	- Strings = [ GL_ARB_conditional_render_inverted ]
ARB_conservative_depth [ source: ARB\ARB_conservative_depth.txt ]
	- Strings = [ GL_ARB_conservative_depth ]
ARB_copy_buffer [ source: ARB\ARB_copy_buffer.txt ]
	- Strings = [ GL_ARB_copy_buffer ]
	- Funcs:
		- glCopyBufferSubData [ void CopyBufferSubData(enum readtarget, enum writetarget, intptr readoffset, intptr writeoffset, sizeiptr size) ]
ARB_copy_image [ source: ARB\ARB_copy_image.txt ]
	- Strings = [ GL_ARB_copy_image ]
	- Funcs:
		- glCopyImageSubData [ void CopyImageSubData( uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei srcWidth, sizei srcHeight, sizei srcDepth) ]
ARB_create_context_no_error [ source: ARB\ARB_create_context_no_error.txt ]
	- Strings = [ WGL_ARB_create_context_no_error GLX_ARB_create_context_no_error ]
ARB_cull_distance [ source: ARB\ARB_cull_distance.txt ]
	- Strings = [ GL_ARB_cull_distance ]
ARB_debug_output [ source: ARB\ARB_debug_output.txt ]
	- Strings = [ GL_ARB_debug_output ]
	- Funcs:
		- glDebugMessageControlARB [ void DebugMessageControlARB(enum source, enum type, enum severity, sizei count, const uint* ids, boolean enabled) ]
		- glDebugMessageInsertARB [ void DebugMessageInsertARB(enum source, enum type, uint id, enum severity, sizei length, const char* buf) ]
		- glDebugMessageCallbackARB [ void DebugMessageCallbackARB(DEBUGPROCARB callback, const void* userParam) ]
		- glGetDebugMessageLogARB [ uint GetDebugMessageLogARB(uint count, sizei bufSize, enum* sources, enum* types, uint* ids, enum* severities, sizei* lengths, char* messageLog) ]
		- glGetPointerv [ void GetPointerv(enum pname, void** params) ]
ARB_depth_buffer_float [ source: ARB\ARB_depth_buffer_float.txt ]
	- Strings = [ GL_ARB_depth_buffer_float ]
ARB_depth_clamp [ source: ARB\ARB_depth_clamp.txt ]
	- Strings = [ GL_ARB_depth_clamp ]
ARB_depth_texture [ source: ARB\ARB_depth_texture.txt ]
	- Strings = [ GL_ARB_depth_texture ]
ARB_derivative_control [ source: ARB\ARB_derivative_control.txt ]
	- Strings = [ GL_ARB_derivative_control ]
ARB_direct_state_access [ source: ARB\ARB_direct_state_access.txt ]
	- Strings = [ GL_ARB_direct_state_access ]
	- Funcs:
		- glCreateTransformFeedbacks [ void CreateTransformFeedbacks(sizei n, uint *ids) ]
		- glTransformFeedbackBufferBase [ void TransformFeedbackBufferBase(uint xfb, uint index, uint buffer) ]
		- glTransformFeedbackBufferRange [ void TransformFeedbackBufferRange(uint xfb, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glGetTransformFeedbackiv [ void GetTransformFeedbackiv(uint xfb, enum pname, int *param) ]
		- glGetTransformFeedbacki_v [ void GetTransformFeedbacki_v(uint xfb, enum pname, uint index, int *param) ]
		- glGetTransformFeedbacki64_v [ void GetTransformFeedbacki64_v(uint xfb, enum pname, uint index, int64 *param) ]
		- glCreateBuffers [ void CreateBuffers(sizei n, uint *buffers) ]
		- glNamedBufferStorage [ void NamedBufferStorage(uint buffer, sizeiptr size, const void *data, bitfield flags) ]
		- glNamedBufferData [ void NamedBufferData(uint buffer, sizeiptr size, const void *data, enum usage) ]
		- glNamedBufferSubData [ void NamedBufferSubData(uint buffer, intptr offset, sizeiptr size, const void *data) ]
		- glCopyNamedBufferSubData [ void CopyNamedBufferSubData(uint readBuffer, uint writeBuffer, intptr readOffset, intptr writeOffset, sizeiptr size) ]
		- glClearNamedBufferData [ void ClearNamedBufferData(uint buffer, enum internalformat, enum format, enum type, const void *data) ]
		- glClearNamedBufferSubData [ void ClearNamedBufferSubData(uint buffer, enum internalformat, intptr offset, sizeiptr size, enum format, enum type, const void *data) ]
		- glMapNamedBuffer [ void *MapNamedBuffer(uint buffer, enum access) ]
		- glMapNamedBufferRange [ void *MapNamedBufferRange(uint buffer, intptr offset, sizeiptr length, bitfield access) ]
		- glUnmapNamedBuffer [ boolean UnmapNamedBuffer(uint buffer) ]
		- glFlushMappedNamedBufferRange [ void FlushMappedNamedBufferRange(uint buffer, intptr offset, sizeiptr length) ]
		- glGetNamedBufferParameteriv [ void GetNamedBufferParameteriv(uint buffer, enum pname, int *params) ]
		- glGetNamedBufferParameteri64v [ void GetNamedBufferParameteri64v(uint buffer, enum pname, int64 *params) ]
		- glGetNamedBufferPointerv [ void GetNamedBufferPointerv(uint buffer, enum pname, void **params) ]
		- glGetNamedBufferSubData [ void GetNamedBufferSubData(uint buffer, intptr offset, sizeiptr size, void *data) ]
		- glCreateFramebuffers [ void CreateFramebuffers(sizei n, uint *framebuffers) ]
		- glNamedFramebufferRenderbuffer [ void NamedFramebufferRenderbuffer(uint framebuffer, enum attachment, enum renderbuffertarget, uint renderbuffer) ]
		- glNamedFramebufferParameteri [ void NamedFramebufferParameteri(uint framebuffer, enum pname, int param) ]
		- glNamedFramebufferTexture [ void NamedFramebufferTexture(uint framebuffer, enum attachment, uint texture, int level) ]
		- glNamedFramebufferTextureLayer [ void NamedFramebufferTextureLayer(uint framebuffer, enum attachment, uint texture, int level, int layer) ]
		- glNamedFramebufferDrawBuffer [ void NamedFramebufferDrawBuffer(uint framebuffer, enum mode) ]
		- glNamedFramebufferDrawBuffers [ void NamedFramebufferDrawBuffers(uint framebuffer, sizei n, const enum *bufs) ]
		- glNamedFramebufferReadBuffer [ void NamedFramebufferReadBuffer(uint framebuffer, enum mode) ]
		- glInvalidateNamedFramebufferData [ void InvalidateNamedFramebufferData(uint framebuffer, sizei numAttachments, const enum *attachments) ]
		- glInvalidateNamedFramebufferSubData [ void InvalidateNamedFramebufferSubData(uint framebuffer, sizei numAttachments, const enum *attachments, int x, int y, sizei width, sizei height) ]
		- glClearNamedFramebufferiv [ void ClearNamedFramebufferiv(uint framebuffer, enum buffer, int drawbuffer, const int *value) ]
		- glClearNamedFramebufferuiv [ void ClearNamedFramebufferuiv(uint framebuffer, enum buffer, int drawbuffer, const uint *value) ]
		- glClearNamedFramebufferfv [ void ClearNamedFramebufferfv(uint framebuffer, enum buffer, int drawbuffer, const float *value) ]
		- glClearNamedFramebufferfi [ void ClearNamedFramebufferfi(uint framebuffer, enum buffer, int drawbuffer, float depth, int stencil) ]
		- glBlitNamedFramebuffer [ void BlitNamedFramebuffer(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
		- glCheckNamedFramebufferStatus [ enum CheckNamedFramebufferStatus(uint framebuffer, enum target) ]
		- glGetNamedFramebufferParameteriv [ void GetNamedFramebufferParameteriv(uint framebuffer, enum pname, int *param) ]
		- glGetNamedFramebufferAttachmentParameteriv [ void GetNamedFramebufferAttachmentParameteriv(uint framebuffer, enum attachment, enum pname, int *params) ]
		- glCreateRenderbuffers [ void CreateRenderbuffers(sizei n, uint *renderbuffers) ]
		- glNamedRenderbufferStorage [ void NamedRenderbufferStorage(uint renderbuffer, enum internalformat, sizei width, sizei height) ]
		- glNamedRenderbufferStorageMultisample [ void NamedRenderbufferStorageMultisample(uint renderbuffer, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glGetNamedRenderbufferParameteriv [ void GetNamedRenderbufferParameteriv(uint renderbuffer, enum pname, int *params) ]
		- glCreateTextures [ void CreateTextures(enum target, sizei n, uint *textures) ]
		- glTextureBuffer [ void TextureBuffer(uint texture, enum internalformat, uint buffer) ]
		- glTextureBufferRange [ void TextureBufferRange(uint texture, enum internalformat, uint buffer, intptr offset, sizeiptr size) ]
		- glTextureStorage1D [ void TextureStorage1D(uint texture, sizei levels, enum internalformat, sizei width) ]
		- glTextureStorage2D [ void TextureStorage2D(uint texture, sizei levels, enum internalformat, sizei width, sizei height) ]
		- glTextureStorage3D [ void TextureStorage3D(uint texture, sizei levels, enum internalformat, sizei width, sizei height, sizei depth) ]
		- glTextureStorage2DMultisample [ void TextureStorage2DMultisample(uint texture, sizei samples, enum internalformat, sizei width, sizei height, boolean fixedsamplelocations) ]
		- glTextureStorage3DMultisample [ void TextureStorage3DMultisample(uint texture, sizei samples, enum internalformat, sizei width, sizei height, sizei depth, boolean fixedsamplelocations) ]
		- glTextureSubImage1D [ void TextureSubImage1D(uint texture, int level, int xoffset, sizei width, enum format, enum type, const void *pixels) ]
		- glTextureSubImage2D [ void TextureSubImage2D(uint texture, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, enum type, const void *pixels) ]
		- glTextureSubImage3D [ void TextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void *pixels) ]
		- glCompressedTextureSubImage1D [ void CompressedTextureSubImage1D(uint texture, int level, int xoffset, sizei width, enum format, sizei imageSize, const void *data) ]
		- glCompressedTextureSubImage2D [ void CompressedTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, sizei imageSize, const void *data) ]
		- glCompressedTextureSubImage3D [ void CompressedTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glCopyTextureSubImage1D [ void CopyTextureSubImage1D(uint texture, int level, int xoffset, int x, int y, sizei width) ]
		- glCopyTextureSubImage2D [ void CopyTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int x, int y, sizei width, sizei height) ]
		- glCopyTextureSubImage3D [ void CopyTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
		- glTextureParameterf [ void TextureParameterf(uint texture, enum pname, float param) ]
		- glTextureParameterfv [ void TextureParameterfv(uint texture, enum pname, const float *param) ]
		- glTextureParameteri [ void TextureParameteri(uint texture, enum pname, int param) ]
		- glTextureParameterIiv [ void TextureParameterIiv(uint texture, enum pname, const int *params) ]
		- glTextureParameterIuiv [ void TextureParameterIuiv(uint texture, enum pname, const uint *params) ]
		- glTextureParameteriv [ void TextureParameteriv(uint texture, enum pname, const int *param) ]
		- glGenerateTextureMipmap [ void GenerateTextureMipmap(uint texture) ]
		- glBindTextureUnit [ void BindTextureUnit(uint unit, uint texture) ]
		- glGetTextureImage [ void GetTextureImage(uint texture, int level, enum format, enum type, sizei bufSize, void *pixels) ]
		- glGetCompressedTextureImage [ void GetCompressedTextureImage(uint texture, int level, sizei bufSize, void *pixels) ]
		- glGetTextureLevelParameterfv [ void GetTextureLevelParameterfv(uint texture, int level, enum pname, float *params) ]
		- glGetTextureLevelParameteriv [ void GetTextureLevelParameteriv(uint texture, int level, enum pname, int *params) ]
		- glGetTextureParameterfv [ void GetTextureParameterfv(uint texture, enum pname, float *params) ]
		- glGetTextureParameterIiv [ void GetTextureParameterIiv(uint texture, enum pname, int *params) ]
		- glGetTextureParameterIuiv [ void GetTextureParameterIuiv(uint texture, enum pname, uint *params) ]
		- glGetTextureParameteriv [ void GetTextureParameteriv(uint texture, enum pname, int *params) ]
		- glCreateVertexArrays [ void CreateVertexArrays(sizei n, uint *arrays) ]
		- glDisableVertexArrayAttrib [ void DisableVertexArrayAttrib(uint vaobj, uint index) ]
		- glEnableVertexArrayAttrib [ void EnableVertexArrayAttrib(uint vaobj, uint index) ]
		- glVertexArrayElementBuffer [ void VertexArrayElementBuffer(uint vaobj, uint buffer) ]
		- glVertexArrayVertexBuffer [ void VertexArrayVertexBuffer(uint vaobj, uint bindingindex, uint buffer, intptr offset, sizei stride) ]
		- glVertexArrayVertexBuffers [ void VertexArrayVertexBuffers(uint vaobj, uint first, sizei count, const uint *buffers, const intptr *offsets, const sizei *strides) ]
		- glVertexArrayAttribFormat [ void VertexArrayAttribFormat(uint vaobj, uint attribindex, int size, enum type, boolean normalized, uint relativeoffset) ]
		- glVertexArrayAttribIFormat [ void VertexArrayAttribIFormat(uint vaobj, uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexArrayAttribLFormat [ void VertexArrayAttribLFormat(uint vaobj, uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexArrayAttribBinding [ void VertexArrayAttribBinding(uint vaobj, uint attribindex, uint bindingindex) ]
		- glVertexArrayBindingDivisor [ void VertexArrayBindingDivisor(uint vaobj, uint bindingindex, uint divisor) ]
		- glGetVertexArrayiv [ void GetVertexArrayiv(uint vaobj, enum pname, int *param) ]
		- glGetVertexArrayIndexediv [ void GetVertexArrayIndexediv(uint vaobj, uint index, enum pname, int *param) ]
		- glGetVertexArrayIndexed64iv [ void GetVertexArrayIndexed64iv(uint vaobj, uint index, enum pname, int64 *param) ]
		- glCreateSamplers [ void CreateSamplers(sizei n, uint *samplers) ]
		- glCreateProgramPipelines [ void CreateProgramPipelines(sizei n, uint *pipelines) ]
		- glCreateQueries [ void CreateQueries(enum target, sizei n, uint *ids) ]
		- glGetQueryBufferObjectiv [ void GetQueryBufferObjectiv(uint id, uint buffer, enum pname, intptr offset) ]
		- glGetQueryBufferObjectuiv [ void GetQueryBufferObjectuiv(uint id, uint buffer, enum pname, intptr offset) ]
		- glGetQueryBufferObjecti64v [ void GetQueryBufferObjecti64v(uint id, uint buffer, enum pname, intptr offset) ]
		- glGetQueryBufferObjectui64v [ void GetQueryBufferObjectui64v(uint id, uint buffer, enum pname, intptr offset) ]
ARB_draw_buffers [ source: ARB\ARB_draw_buffers.txt ]
	- Strings = [ GL_ARB_draw_buffers ]
	- Funcs:
		- glDrawBuffersARB [ void DrawBuffersARB(sizei n, const enum *bufs) ]
ARB_draw_buffers_blend [ source: ARB\ARB_draw_buffers_blend.txt ]
	- Strings = [ GL_ARB_draw_buffers_blend ]
	- Funcs:
		- glBlendEquationiARB [ void BlendEquationiARB(uint buf, enum mode) ]
		- glBlendEquationSeparateiARB [ void BlendEquationSeparateiARB(uint buf, enum modeRGB, enum modeAlpha) ]
		- glBlendFunciARB [ void BlendFunciARB(uint buf, enum src, enum dst) ]
		- glBlendFuncSeparateiARB [ void BlendFuncSeparateiARB(uint buf, enum srcRGB, enum dstRGB, enum srcAlpha, enum dstAlpha) ]
ARB_draw_elements_base_vertex [ source: ARB\ARB_draw_elements_base_vertex.txt ]
	- Strings = [ GL_ARB_draw_elements_base_vertex ]
	- Funcs:
		- glDrawElementsBaseVertex [ void DrawElementsBaseVertex(enum mode, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawRangeElementsBaseVertex [ void DrawRangeElementsBaseVertex(enum mode, uint start, uint end, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawElementsInstancedBaseVertex [ void DrawElementsInstancedBaseVertex(enum mode, sizei count, enum type, const void *indices, sizei instancecount, int basevertex) ]
		- glMultiDrawElementsBaseVertex [ void MultiDrawElementsBaseVertex(enum mode, const sizei *count, enum type, const void *const *indices, sizei drawcount, const int *basevertex) ]
ARB_draw_indirect [ source: ARB\ARB_draw_indirect.txt ]
	- Strings = [ GL_ARB_draw_indirect ]
	- Funcs:
		- glDrawArraysIndirect [ void DrawArraysIndirect(enum mode, const void *indirect) ]
		- glDrawElementsIndirect [ void DrawElementsIndirect(enum mode, enum type, const void *indirect) ]
ARB_draw_instanced [ source: ARB\ARB_draw_instanced.txt ]
	- Strings = [ GL_ARB_draw_instanced ]
	- Funcs:
		- glDrawArraysInstancedARB [ void DrawArraysInstancedARB(enum mode, int first, sizei count, sizei primcount) ]
		- glDrawElementsInstancedARB [ void DrawElementsInstancedARB(enum mode, sizei count, enum type, const void *indices, sizei primcount) ]
ARB_enhanced_layouts [ source: ARB\ARB_enhanced_layouts.txt ]
	- Strings = [ GL_ARB_enhanced_layouts ]
ARB_ES2_compatibility [ source: ARB\ARB_ES2_compatibility.txt ]
	- Strings = [ GL_ARB_ES2_compatibility ]
	- Funcs:
		- glReleaseShaderCompiler [ void ReleaseShaderCompiler(void) ]
		- glShaderBinary [ void ShaderBinary(sizei count, const uint *shaders, enum binaryformat, const void *binary, sizei length) ]
		- glGetShaderPrecisionFormat [ void GetShaderPrecisionFormat(enum shadertype, enum precisiontype, int *range, int *precision) ]
		- glDepthRangef [ void DepthRangef(clampf n, clampf f) ]
		- glClearDepthf [ void ClearDepthf(clampf d) ]
ARB_ES3_1_compatibility [ source: ARB\ARB_ES3_1_compatibility.txt ]
	- Strings = [ GL_ARB_ES3_1_compatibility ]
	- Funcs:
		- glMemoryBarrierByRegion [ void MemoryBarrierByRegion(bitfield barriers) ]
ARB_ES3_2_compatibility [ source: ARB\ARB_ES3_2_compatibility.txt ]
	- Strings = [ GL_ARB_ES3_2_compatibility ]
	- Funcs:
		- glPrimitiveBoundingBoxARB [ void PrimitiveBoundingBoxARB(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW) ]
ARB_ES3_compatibility [ source: ARB\ARB_ES3_compatibility.txt ]
	- Strings = [ GL_ARB_ES3_compatibility ]
ARB_explicit_attrib_location [ source: ARB\ARB_explicit_attrib_location.txt ]
	- Strings = [ GL_ARB_explicit_attrib_location ]
ARB_explicit_uniform_location [ source: ARB\ARB_explicit_uniform_location.txt ]
	- Strings = [ GL_ARB_explicit_uniform_location ]
ARB_fragment_coord_conventions [ source: ARB\ARB_fragment_coord_conventions.txt ]
	- Strings = [ GL_ARB_fragment_coord_conventions ]
ARB_fragment_layer_viewport [ source: ARB\ARB_fragment_layer_viewport.txt ]
	- Strings = [ GL_ARB_fragment_layer_viewport ]
ARB_fragment_program [ source: ARB\ARB_fragment_program.txt ]
	- Strings = [ GL_ARB_fragment_program ]
	- Funcs:
		- glProgramStringARB [ void ProgramStringARB(enum target, enum format, sizei len, const void *string) ]
		- glBindProgramARB [ void BindProgramARB(enum target, uint program) ]
		- glDeleteProgramsARB [ void DeleteProgramsARB(sizei n, const uint *programs) ]
		- glGenProgramsARB [ void GenProgramsARB(sizei n, uint *programs) ]
		- glProgramEnvParameter4dARB [ void ProgramEnvParameter4dARB(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramEnvParameter4dvARB [ void ProgramEnvParameter4dvARB(enum target, uint index, const double *params) ]
		- glProgramEnvParameter4fARB [ void ProgramEnvParameter4fARB(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramEnvParameter4fvARB [ void ProgramEnvParameter4fvARB(enum target, uint index, const float *params) ]
		- glProgramLocalParameter4dARB [ void ProgramLocalParameter4dARB(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramLocalParameter4dvARB [ void ProgramLocalParameter4dvARB(enum target, uint index, const double *params) ]
		- glProgramLocalParameter4fARB [ void ProgramLocalParameter4fARB(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramLocalParameter4fvARB [ void ProgramLocalParameter4fvARB(enum target, uint index, const float *params) ]
		- glGetProgramEnvParameterdvARB [ void GetProgramEnvParameterdvARB(enum target, uint index, double *params) ]
		- glGetProgramEnvParameterfvARB [ void GetProgramEnvParameterfvARB(enum target, uint index, float *params) ]
		- glGetProgramLocalParameterdvARB [ void GetProgramLocalParameterdvARB(enum target, uint index, double *params) ]
		- glGetProgramLocalParameterfvARB [ void GetProgramLocalParameterfvARB(enum target, uint index, float *params) ]
		- glGetProgramivARB [ void GetProgramivARB(enum target, enum pname, int *params) ]
		- glGetProgramStringARB [ void GetProgramStringARB(enum target, enum pname, void *string) ]
		- glIsProgramARB [ boolean IsProgramARB(uint program) ]
ARB_fragment_program_shadow [ source: ARB\ARB_fragment_program_shadow.txt ]
	- Strings = [ GL_ARB_fragment_program_shadow ]
ARB_fragment_shader [ source: ARB\ARB_fragment_shader.txt ]
	- Strings = [ GL_ARB_fragment_shader ]
ARB_fragment_shader_interlock [ source: ARB\ARB_fragment_shader_interlock.txt ]
	- Strings = [ GL_ARB_fragment_shader_interlock ]
ARB_framebuffer_no_attachments [ source: ARB\ARB_framebuffer_no_attachments.txt ]
	- Strings = [ GL_ARB_framebuffer_no_attachments ]
	- Funcs:
		- glFramebufferParameteri [ void FramebufferParameteri(enum target, enum pname, int param) ]
		- glGetFramebufferParameteriv [ void GetFramebufferParameteriv(enum target, enum pname, int *params) ]
		- glNamedFramebufferParameteriEXT [ void NamedFramebufferParameteriEXT(uint framebuffer, enum pname, int param) ]
		- glGetNamedFramebufferParameterivEXT [ void GetNamedFramebufferParameterivEXT(uint framebuffer, enum pname, int *params) ]
ARB_framebuffer_object [ source: ARB\ARB_framebuffer_object.txt ]
	- Strings = [ GL_ARB_framebuffer_object ]
	- Funcs:
		- glIsRenderbuffer [ boolean IsRenderbuffer(uint renderbuffer) ]
		- glBindRenderbuffer [ void BindRenderbuffer(enum target, uint renderbuffer) ]
		- glDeleteRenderbuffers [ void DeleteRenderbuffers(sizei n, const uint *renderbuffers) ]
		- glGenRenderbuffers [ void GenRenderbuffers(sizei n, uint *renderbuffers) ]
		- glRenderbufferStorage [ void RenderbufferStorage(enum target, enum internalformat, sizei width, sizei height) ]
		- glRenderbufferStorageMultisample [ void RenderbufferStorageMultisample(enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glGetRenderbufferParameteriv [ void GetRenderbufferParameteriv(enum target, enum pname, int *params) ]
		- glIsFramebuffer [ boolean IsFramebuffer(uint framebuffer) ]
		- glBindFramebuffer [ void BindFramebuffer(enum target, uint framebuffer) ]
		- glDeleteFramebuffers [ void DeleteFramebuffers(sizei n, const uint *framebuffers) ]
		- glGenFramebuffers [ void GenFramebuffers(sizei n, uint *framebuffers) ]
		- glCheckFramebufferStatus [ enum CheckFramebufferStatus(enum target) ]
		- glFramebufferTexture1D [ void FramebufferTexture1D(enum target, enum attachment, enum textarget, uint texture, int level) ]
		- glFramebufferTexture2D [ void FramebufferTexture2D(enum target, enum attachment, enum textarget, uint texture, int level) ]
		- glFramebufferTexture3D [ void FramebufferTexture3D(enum target, enum attachment, enum textarget, uint texture, int level, int layer) ]
		- glFramebufferTextureLayer [ void FramebufferTextureLayer(enum target,enum attachment, uint texture,int level,int layer) ]
		- glFramebufferRenderbuffer [ void FramebufferRenderbuffer(enum target, enum attachment, enum renderbuffertarget, uint renderbuffer) ]
		- glGetFramebufferAttachmentParameteriv [ void GetFramebufferAttachmentParameteriv(enum target, enum attachment, enum pname, int *params) ]
		- glBlitFramebuffer [ void BlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
		- glGenerateMipmap [ void GenerateMipmap(enum target) ]
ARB_framebuffer_sRGB [ source: ARB\ARB_framebuffer_sRGB.txt ]
	- Strings = [ GL_ARB_framebuffer_sRGB GLX_ARB_framebuffer_sRGB WGL_ARB_framebuffer_sRGB ]
ARB_geometry_shader4 [ source: ARB\ARB_geometry_shader4.txt ]
	- Strings = [ GL_ARB_geometry_shader4 ]
	- Funcs:
		- glProgramParameteriARB [ void ProgramParameteriARB(uint program, enum pname, int value) ]
		- glFramebufferTextureARB [ void FramebufferTextureARB(enum target, enum attachment, uint texture, int level) ]
		- glFramebufferTextureLayerARB [ void FramebufferTextureLayerARB(enum target, enum attachment, uint texture, int level, int layer) ]
		- glFramebufferTextureFaceARB [ void FramebufferTextureFaceARB(enum target, enum attachment, uint texture, int level, enum face) ]
ARB_get_program_binary [ source: ARB\ARB_get_program_binary.txt ]
	- Strings = [ GL_ARB_get_program_binary ]
	- Funcs:
		- glGetProgramBinary [ void GetProgramBinary(uint program, sizei bufSize, sizei *length, enum *binaryFormat, void *binary) ]
		- glProgramBinary [ void ProgramBinary(uint program, enum binaryFormat, const void *binary, sizei length) ]
		- glProgramParameteri [ void ProgramParameteri(uint program, enum pname, int value) ]
ARB_get_texture_sub_image [ source: ARB\ARB_get_texture_sub_image.txt ]
	- Strings = [ GL_ARB_get_texture_sub_image ]
	- Funcs:
		- glGetTextureSubImage [ void GetTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, sizei bufSize, void *pixels) ]
		- glGetCompressedTextureSubImage [ void GetCompressedTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, sizei bufSize, void *pixels) ]
ARB_gl_spirv [ source: ARB\ARB_gl_spirv.txt ]
	- Strings = [ GL_ARB_gl_spirv ]
	- Funcs:
		- glSpecializeShaderARB [ void SpecializeShaderARB(uint shader, const char* pEntryPoint, uint numSpecializationConstants, const uint* pConstantIndex, const uint* pConstantValue) ]
ARB_gpu_shader5 [ source: ARB\ARB_gpu_shader5.txt ]
	- Strings = [ GL_ARB_gpu_shader5 ]
ARB_gpu_shader_fp64 [ source: ARB\ARB_gpu_shader_fp64.txt ]
	- Strings = [ GL_ARB_gpu_shader_fp64 ]
	- Funcs:
		- glUniform1d [ void Uniform1d(int location, double x) ]
		- glUniform2d [ void Uniform2d(int location, double x, double y) ]
		- glUniform3d [ void Uniform3d(int location, double x, double y, double z) ]
		- glUniform4d [ void Uniform4d(int location, double x, double y, double z, double w) ]
		- glUniform1dv [ void Uniform1dv(int location, sizei count, const double *value) ]
		- glUniform2dv [ void Uniform2dv(int location, sizei count, const double *value) ]
		- glUniform3dv [ void Uniform3dv(int location, sizei count, const double *value) ]
		- glUniform4dv [ void Uniform4dv(int location, sizei count, const double *value) ]
		- glUniformMatrix2dv [ void UniformMatrix2dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix3dv [ void UniformMatrix3dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix4dv [ void UniformMatrix4dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix2x3dv [ void UniformMatrix2x3dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix2x4dv [ void UniformMatrix2x4dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix3x2dv [ void UniformMatrix3x2dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix3x4dv [ void UniformMatrix3x4dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix4x2dv [ void UniformMatrix4x2dv(int location, sizei count, boolean transpose, const double *value) ]
		- glUniformMatrix4x3dv [ void UniformMatrix4x3dv(int location, sizei count, boolean transpose, const double *value) ]
		- glGetUniformdv [ void GetUniformdv(uint program, int location, double *params) ]
		- glProgramUniform1dEXT [ void ProgramUniform1dEXT(uint program, int location, double x) ]
		- glProgramUniform2dEXT [ void ProgramUniform2dEXT(uint program, int location, double x, double y) ]
		- glProgramUniform3dEXT [ void ProgramUniform3dEXT(uint program, int location, double x, double y, double z) ]
		- glProgramUniform4dEXT [ void ProgramUniform4dEXT(uint program, int location, double x, double y, double z, double w) ]
		- glProgramUniform1dvEXT [ void ProgramUniform1dvEXT(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform2dvEXT [ void ProgramUniform2dvEXT(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform3dvEXT [ void ProgramUniform3dvEXT(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform4dvEXT [ void ProgramUniform4dvEXT(uint program, int location, sizei count, const double *value) ]
		- glProgramUniformMatrix2dvEXT [ void ProgramUniformMatrix2dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3dvEXT [ void ProgramUniformMatrix3dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4dvEXT [ void ProgramUniformMatrix4dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix2x3dvEXT [ void ProgramUniformMatrix2x3dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix2x4dvEXT [ void ProgramUniformMatrix2x4dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3x2dvEXT [ void ProgramUniformMatrix3x2dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3x4dvEXT [ void ProgramUniformMatrix3x4dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4x2dvEXT [ void ProgramUniformMatrix4x2dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4x3dvEXT [ void ProgramUniformMatrix4x3dvEXT(uint program, int location, sizei count, boolean transpose, const double *value) ]
ARB_gpu_shader_int64 [ source: ARB\ARB_gpu_shader_int64.txt ]
	- Strings = [ GL_ARB_gpu_shader_int64 ]
	- Funcs:
		- glUniform1i64ARB [ void Uniform1i64ARB(int location, int64 x) ]
		- glUniform2i64ARB [ void Uniform2i64ARB(int location, int64 x, int64 y) ]
		- glUniform3i64ARB [ void Uniform3i64ARB(int location, int64 x, int64 y, int64 z) ]
		- glUniform4i64ARB [ void Uniform4i64ARB(int location, int64 x, int64 y, int64 z, int64 w) ]
		- glUniform1i64vARB [ void Uniform1i64vARB(int location, sizei count, const int64 *value) ]
		- glUniform2i64vARB [ void Uniform2i64vARB(int location, sizei count, const int64 *value) ]
		- glUniform3i64vARB [ void Uniform3i64vARB(int location, sizei count, const int64 *value) ]
		- glUniform4i64vARB [ void Uniform4i64vARB(int location, sizei count, const int64 *value) ]
		- glUniform1ui64ARB [ void Uniform1ui64ARB(int location, uint64 x) ]
		- glUniform2ui64ARB [ void Uniform2ui64ARB(int location, uint64 x, uint64 y) ]
		- glUniform3ui64ARB [ void Uniform3ui64ARB(int location, uint64 x, uint64 y, uint64 z) ]
		- glUniform4ui64ARB [ void Uniform4ui64ARB(int location, uint64 x, uint64 y, uint64 z, uint64 w) ]
		- glUniform1ui64vARB [ void Uniform1ui64vARB(int location, sizei count, const uint64 *value) ]
		- glUniform2ui64vARB [ void Uniform2ui64vARB(int location, sizei count, const uint64 *value) ]
		- glUniform3ui64vARB [ void Uniform3ui64vARB(int location, sizei count, const uint64 *value) ]
		- glUniform4ui64vARB [ void Uniform4ui64vARB(int location, sizei count, const uint64 *value) ]
		- glGetUniformi64vARB [ void GetUniformi64vARB(uint program, int location, int64 *params) ]
		- glGetUniformui64vARB [ void GetUniformui64vARB(uint program, int location, uint64 *params) ]
		- glGetnUniformi64vARB [ void GetnUniformi64vARB(uint program, int location, sizei bufSize, int64 *params) ]
		- glGetnUniformui64vARB [ void GetnUniformui64vARB(uint program, int location, sizei bufSize, uint64 *params) ]
		- glProgramUniform1i64ARB [ void ProgramUniform1i64ARB(uint program, int location, int64 x) ]
		- glProgramUniform2i64ARB [ void ProgramUniform2i64ARB(uint program, int location, int64 x, int64 y) ]
		- glProgramUniform3i64ARB [ void ProgramUniform3i64ARB(uint program, int location, int64 x, int64 y, int64 z) ]
		- glProgramUniform4i64ARB [ void ProgramUniform4i64ARB(uint program, int location, int64 x, int64 y, int64 z, int64 w) ]
		- glProgramUniform1i64vARB [ void ProgramUniform1i64vARB(uint program, int location, sizei count, const int64 *value) ]
		- glProgramUniform2i64vARB [ void ProgramUniform2i64vARB(uint program, int location, sizei count, const int64 *value) ]
		- glProgramUniform3i64vARB [ void ProgramUniform3i64vARB(uint program, int location, sizei count, const int64 *value) ]
		- glProgramUniform4i64vARB [ void ProgramUniform4i64vARB(uint program, int location, sizei count, const int64 *value) ]
		- glProgramUniform1ui64ARB [ void ProgramUniform1ui64ARB(uint program, int location, uint64 x) ]
		- glProgramUniform2ui64ARB [ void ProgramUniform2ui64ARB(uint program, int location, uint64 x, uint64 y) ]
		- glProgramUniform3ui64ARB [ void ProgramUniform3ui64ARB(uint program, int location, uint64 x, uint64 y, uint64 z) ]
		- glProgramUniform4ui64ARB [ void ProgramUniform4ui64ARB(uint program, int location, uint64 x, uint64 y, uint64 z, uint64 w) ]
		- glProgramUniform1ui64vARB [ void ProgramUniform1ui64vARB(uint program, int location, sizei count, const uint64 *value) ]
		- glProgramUniform2ui64vARB [ void ProgramUniform2ui64vARB(uint program, int location, sizei count, const uint64 *value) ]
		- glProgramUniform3ui64vARB [ void ProgramUniform3ui64vARB(uint program, int location, sizei count, const uint64 *value) ]
		- glProgramUniform4ui64vARB [ void ProgramUniform4ui64vARB(uint program, int location, sizei count, const uint64 *value) ]
ARB_half_float_pixel [ source: ARB\ARB_half_float_pixel.txt ]
	- Strings = [ GL_ARB_half_float_pixel ]
ARB_half_float_vertex [ source: ARB\ARB_half_float_vertex.txt ]
	- Strings = [ GL_ARB_half_float_vertex ]
ARB_indirect_parameters [ source: ARB\ARB_indirect_parameters.txt ]
	- Strings = [ GL_ARB_indirect_parameters ]
	- Funcs:
		- glMultiDrawArraysIndirectCountARB [ void MultiDrawArraysIndirectCountARB(enum mode, const void *indirect, intptr drawcount, sizei maxdrawcount, sizei stride) ]
		- glMultiDrawElementsIndirectCountARB [ void MultiDrawElementsIndirectCountARB(enum mode, enum type, const void *indirect, intptr drawcount, sizei maxdrawcount, sizei stride) ]
ARB_instanced_arrays [ source: ARB\ARB_instanced_arrays.txt ]
	- Strings = [ GL_ARB_instanced_arrays ]
	- Funcs:
		- glVertexAttribDivisorARB [ void VertexAttribDivisorARB(uint index, uint divisor) ]
		- glVertexArrayVertexAttribDivisorEXT [ void VertexArrayVertexAttribDivisorEXT(uint vaobj, uint index, uint divisor) ]
ARB_internalformat_query [ source: ARB\ARB_internalformat_query.txt ]
	- Strings = [ GL_ARB_internalformat_query ]
	- Funcs:
		- glGetInternalformativ [ void GetInternalformativ(enum target, enum internalformat, enum pname, sizei bufSize, int *params) ]
ARB_internalformat_query2 [ source: ARB\ARB_internalformat_query2.txt ]
	- Strings = [ GL_ARB_internalformat_query2 ]
	- Funcs:
		- glGetInternalformati64v [ void GetInternalformati64v(enum target, enum internalformat, enum pname, sizei bufSize, int64 *params) ]
ARB_invalidate_subdata [ source: ARB\ARB_invalidate_subdata.txt ]
	- Strings = [ GL_ARB_invalidate_subdata ]
	- Funcs:
		- glInvalidateTexSubImage [ void InvalidateTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth) ]
		- glInvalidateTexImage [ void InvalidateTexImage(uint texture, int level) ]
		- glInvalidateBufferSubData [ void InvalidateBufferSubData(uint buffer, intptr offset, sizeiptr length) ]
		- glInvalidateBufferData [ void InvalidateBufferData(uint buffer) ]
		- glInvalidateFramebuffer [ void InvalidateFramebuffer(enum target, sizei numAttachments, const enum *attachments) ]
		- glInvalidateSubFramebuffer [ void InvalidateSubFramebuffer(enum target, sizei numAttachments, const enum *attachments, int x, int y, sizei width, sizei height) ]
ARB_map_buffer_alignment [ source: ARB\ARB_map_buffer_alignment.txt ]
	- Strings = [ GL_ARB_map_buffer_alignment ]
ARB_map_buffer_range [ source: ARB\ARB_map_buffer_range.txt ]
	- Strings = [ GL_ARB_map_buffer_range ]
	- Funcs:
		- glMapBufferRange [ void *MapBufferRange( enum target, intptr offset, sizeiptr length, bitfield access ) ]
		- glFlushMappedBufferRange [ void FlushMappedBufferRange( enum target, intptr offset, sizeiptr length ) ]
ARB_matrix_palette [ source: ARB\ARB_matrix_palette.txt ]
	- Strings = [ GL_ARB_matrix_palette ]
	- Funcs:
		- glCurrentPaletteMatrixARB [ void CurrentPaletteMatrixARB(int index) ]
		- glMatrixIndexubvARB [ void MatrixIndexubvARB(int size, glubyte *indices) ]
		- glMatrixIndexusvARB [ void MatrixIndexusvARB(int size, glushort *indices) ]
		- glMatrixIndexuivARB [ void MatrixIndexuivARB(int size, gluint *indices) ]
		- glMatrixIndexPointerARB [ void MatrixIndexPointerARB(int size, enum type, sizei stride, void *pointer) ]
ARB_multisample [ source: ARB\ARB_multisample.txt ]
	- Strings = [ GL_ARB_multisample GLX_ARB_multisample WGL_ARB_multisample ]
	- Funcs:
		- glSampleCoverageARB [ void SampleCoverageARB(clampf value, boolean invert) ]
ARB_multitexture [ source: ARB\ARB_multitexture.txt ]
	- Strings = [ GL_ARB_multitexture ]
ARB_multi_bind [ source: ARB\ARB_multi_bind.txt ]
	- Strings = [ GL_ARB_multi_bind ]
	- Funcs:
		- glBindBuffersBase [ void BindBuffersBase(enum target, uint first, sizei count, const uint *buffers) ]
		- glBindBuffersRange [ void BindBuffersRange(enum target, uint first, sizei count, const uint *buffers, const intptr *offsets, const sizeiptr *sizes) ]
		- glBindTextures [ void BindTextures(uint first, sizei count, const uint *textures) ]
		- glBindSamplers [ void BindSamplers(uint first, sizei count, const uint *samplers) ]
		- glBindImageTextures [ void BindImageTextures(uint first, sizei count, const uint *textures) ]
		- glBindVertexBuffers [ void BindVertexBuffers(uint first, sizei count, const uint *buffers, const intptr *offsets, const sizei *strides) ]
ARB_multi_draw_indirect [ source: ARB\ARB_multi_draw_indirect.txt ]
	- Strings = [ GL_ARB_multi_draw_indirect ]
	- Funcs:
		- glMultiDrawArraysIndirect [ void MultiDrawArraysIndirect(enum mode, const void *indirect, sizei primcount, sizei stride) ]
		- glMultiDrawElementsIndirect [ void MultiDrawElementsIndirect(enum mode, enum type, const void *indirect, sizei primcount, sizei stride) ]
ARB_occlusion_query [ source: ARB\ARB_occlusion_query.txt ]
	- Strings = [ GL_ARB_occlusion_query ]
	- Funcs:
		- glGenQueriesARB [ void GenQueriesARB(sizei n, uint *ids) ]
		- glDeleteQueriesARB [ void DeleteQueriesARB(sizei n, const uint *ids) ]
		- glIsQueryARB [ boolean IsQueryARB(uint id) ]
		- glBeginQueryARB [ void BeginQueryARB(enum target, uint id) ]
		- glEndQueryARB [ void EndQueryARB(enum target) ]
		- glGetQueryivARB [ void GetQueryivARB(enum target, enum pname, int *params) ]
		- glGetQueryObjectivARB [ void GetQueryObjectivARB(uint id, enum pname, int *params) ]
		- glGetQueryObjectuivARB [ void GetQueryObjectuivARB(uint id, enum pname, uint *params) ]
ARB_occlusion_query2 [ source: ARB\ARB_occlusion_query2.txt ]
	- Strings = [ GL_ARB_occlusion_query2 ]
ARB_parallel_shader_compile [ source: ARB\ARB_parallel_shader_compile.txt ]
	- Strings = [ GL_ARB_parallel_shader_compile ]
	- Funcs:
		- glMaxShaderCompilerThreadsARB [ void MaxShaderCompilerThreadsARB(uint count) ]
ARB_pipeline_statistics_query [ source: ARB\ARB_pipeline_statistics_query.txt ]
	- Strings = [ GL_ARB_pipeline_statistics_query ]
ARB_pixel_buffer_object [ source: ARB\ARB_pixel_buffer_object.txt ]
	- Strings = [ GL_ARB_pixel_buffer_object ]
ARB_point_parameters [ source: ARB\ARB_point_parameters.txt ]
	- Strings = [ GL_ARB_point_parameters ]
	- Funcs:
		- glPointParameterfARB [ void PointParameterfARB(enum pname, float param) ]
		- glPointParameterfvARB [ void PointParameterfvARB(enum pname, const float *params) ]
ARB_point_sprite [ source: ARB\ARB_point_sprite.txt ]
	- Strings = [ GL_ARB_point_sprite ]
ARB_polygon_offset_clamp [ source: ARB\ARB_polygon_offset_clamp.txt ]
	- Strings = [ GL_ARB_polygon_offset_clamp ]
	- Funcs:
		- glPolygonOffsetClamp [ void PolygonOffsetClamp(float factor, float units, float clamp) ]
ARB_post_depth_coverage [ source: ARB\ARB_post_depth_coverage.txt ]
	- Strings = [ GL_ARB_post_depth_coverage ]
ARB_program_interface_query [ source: ARB\ARB_program_interface_query.txt ]
	- Strings = [ GL_ARB_program_interface_query ]
	- Funcs:
		- glGetProgramInterfaceiv [ void GetProgramInterfaceiv(uint program, enum programInterface, enum pname, int *params) ]
		- glGetProgramResourceIndex [ uint GetProgramResourceIndex(uint program, enum programInterface, const char *name) ]
		- glGetProgramResourceName [ void GetProgramResourceName(uint program, enum programInterface, uint index, sizei bufSize, sizei *length, char *name) ]
		- glGetProgramResourceiv [ void GetProgramResourceiv(uint program, enum programInterface, uint index, sizei propCount, const enum *props, sizei bufSize, sizei *length, int *params) ]
		- glGetProgramResourceLocation [ int GetProgramResourceLocation(uint program, enum programInterface, const char *name) ]
		- glGetProgramResourceLocationIndex [ int GetProgramResourceLocationIndex(uint program, enum programInterface, const char *name) ]
ARB_provoking_vertex [ source: ARB\ARB_provoking_vertex.txt ]
	- Strings = [ GL_ARB_provoking_vertex ]
	- Funcs:
		- glProvokingVertex [ void ProvokingVertex(enum mode) ]
ARB_query_buffer_object [ source: ARB\ARB_query_buffer_object.txt ]
	- Strings = [ GL_ARB_query_buffer_object ]
ARB_robustness [ source: ARB\ARB_robustness.txt ]
	- Strings = [ GL_ARB_robustness ]
	- Funcs:
		- glGetGraphicsResetStatusARB [ enum GetGraphicsResetStatusARB() ]
		- glGetnMapdvARB [ void GetnMapdvARB(enum target, enum query, sizei bufSize, double *v) ]
		- glGetnMapfvARB [ void GetnMapfvARB(enum target, enum query, sizei bufSize, float *v) ]
		- glGetnMapivARB [ void GetnMapivARB(enum target, enum query, sizei bufSize, int *v) ]
		- glGetnPixelMapfvARB [ void GetnPixelMapfvARB(enum map, sizei bufSize, float *values) ]
		- glGetnPixelMapuivARB [ void GetnPixelMapuivARB(enum map, sizei bufSize, uint *values) ]
		- glGetnPixelMapusvARB [ void GetnPixelMapusvARB(enum map, sizei bufSize, ushort *values) ]
		- glGetnPolygonStippleARB [ void GetnPolygonStippleARB(sizei bufSize, ubyte *pattern) ]
		- glGetnTexImageARB [ void GetnTexImageARB(enum target, int level, enum format, enum type, sizei bufSize, void *img) ]
		- glReadnPixelsARB [ void ReadnPixelsARB(int x, int y, sizei width, sizei height, enum format, enum type, sizei bufSize, void *data) ]
		- glGetnColorTableARB [ void GetnColorTableARB(enum target, enum format, enum type, sizei bufSize, void *table) ]
		- glGetnConvolutionFilterARB [ void GetnConvolutionFilterARB(enum target, enum format, enum type, sizei bufSize, void *image) ]
		- glGetnSeparableFilterARB [ void GetnSeparableFilterARB(enum target, enum format, enum type, sizei rowBufSize, void *row, sizei columnBufSize, void *column, void *span) ]
		- glGetnHistogramARB [ void GetnHistogramARB(enum target, boolean reset, enum format, enum type, sizei bufSize, void *values) ]
		- glGetnMinmaxARB [ void GetnMinmaxARB(enum target, boolean reset, enum format, enum type, sizei bufSize, void *values) ]
		- glGetnCompressedTexImageARB [ void GetnCompressedTexImageARB(enum target, int lod, sizei bufSize, void *img) ]
		- glGetnUniformfvARB [ void GetnUniformfvARB(uint program, int location, sizei bufSize, float *params) ]
		- glGetnUniformivARB [ void GetnUniformivARB(uint program, int location, sizei bufSize, int *params) ]
		- glGetnUniformuivARB [ void GetnUniformuivARB(uint program, int location, sizei bufSize, uint *params) ]
		- glGetnUniformdvARB [ void GetnUniformdvARB(uint program, int location, sizei bufSize, double *params) ]
GL_ARB_robustness_isolation [ source: ARB\ARB_robustness_application_isolation.txt ]
	- Strings = [ GL_ARB_robustness_application_isolation GL_ARB_robustness_share_group_isolation ]
ARB_robust_buffer_access_behavior [ source: ARB\ARB_robust_buffer_access_behavior.txt ]
	- Strings = [ GL_ARB_robust_buffer_access_behavior ]
ARB_sampler_objects [ source: ARB\ARB_sampler_objects.txt ]
	- Strings = [ GL_ARB_sampler_objects ]
	- Funcs:
		- glGenSamplers [ void GenSamplers(sizei count, uint *samplers) ]
		- glDeleteSamplers [ void DeleteSamplers(sizei count, const uint * samplers) ]
		- glIsSampler [ boolean IsSampler(uint sampler) ]
		- glBindSampler [ void BindSampler(uint unit, uint sampler) ]
		- glSamplerParameteri [ void SamplerParameteri(uint sampler, enum pname, int param) ]
		- glSamplerParameterf [ void SamplerParameterf(uint sampler, enum pname, float param) ]
		- glSamplerParameteriv [ void SamplerParameteriv(uint sampler, enum pname, const int *params) ]
		- glSamplerParameterfv [ void SamplerParameterfv(uint sampler, enum pname, const float *params) ]
		- glSamplerParameterIiv [ void SamplerParameterIiv(uint sampler, enum pname, const int *params) ]
		- glSamplerParameterIuiv [ void SamplerParameterIuiv(uint sampler, enum pname, const uint *params) ]
		- glGetSamplerParameteriv [ void GetSamplerParameteriv(uint sampler, enum pname, int *params) ]
		- glGetSamplerParameterfv [ void GetSamplerParameterfv(uint sampler, enum pname, float *params) ]
		- glGetSamplerParameterIiv [ void GetSamplerParameterIiv(uint sampler, enum pname, int *params) ]
		- glGetSamplerParameterIuiv [ void GetSamplerParameterIuiv(uint sampler, enum pname, uint *params) ]
ARB_sample_locations [ source: ARB\ARB_sample_locations.txt ]
	- Strings = [ GL_ARB_sample_locations ]
	- Funcs:
		- glFramebufferSampleLocationsfvARB [ void FramebufferSampleLocationsfvARB(enum target, uint start, sizei count, const float *v) ]
		- glNamedFramebufferSampleLocationsfvARB [ void NamedFramebufferSampleLocationsfvARB(uint framebuffer, uint start, sizei count, const float *v) ]
		- glEvaluateDepthValuesARB [ void EvaluateDepthValuesARB() ]
ARB_sample_shading [ source: ARB\ARB_sample_shading.txt ]
	- Strings = [ GL_ARB_sample_shading ]
	- Funcs:
		- glMinSampleShadingARB [ void MinSampleShadingARB(clampf value) ]
ARB_seamless_cubemap_per_texture [ source: ARB\ARB_seamless_cubemap_per_texture.txt ]
	- Strings = [ GL_ARB_seamless_cubemap_per_texture ]
ARB_seamless_cube_map [ source: ARB\ARB_seamless_cube_map.txt ]
	- Strings = [ GL_ARB_seamless_cube_map ]
ARB_separate_shader_objects [ source: ARB\ARB_separate_shader_objects.txt ]
	- Strings = [ GL_ARB_separate_shader_objects ]
	- Funcs:
		- glUseProgramStages [ void UseProgramStages(uint pipeline, bitfield stages, uint program) ]
		- glActiveShaderProgram [ void ActiveShaderProgram(uint pipeline, uint program) ]
		- glCreateShaderProgramv [ uint CreateShaderProgramv(enum type, sizei count, const char **strings) ]
		- glBindProgramPipeline [ void BindProgramPipeline(uint pipeline) ]
		- glDeleteProgramPipelines [ void DeleteProgramPipelines(sizei n, const uint *pipelines) ]
		- glGenProgramPipelines [ void GenProgramPipelines(sizei n, uint *pipelines) ]
		- glIsProgramPipeline [ boolean IsProgramPipeline(uint pipeline) ]
		- glProgramParameteri [ void ProgramParameteri(uint program, enum pname, int value) ]
		- glGetProgramPipelineiv [ void GetProgramPipelineiv(uint pipeline, enum pname, int *params) ]
		- glProgramUniform1i [ void ProgramUniform1i(uint program, int location, int x) ]
		- glProgramUniform2i [ void ProgramUniform2i(uint program, int location, int x, int y) ]
		- glProgramUniform3i [ void ProgramUniform3i(uint program, int location, int x, int y, int z) ]
		- glProgramUniform4i [ void ProgramUniform4i(uint program, int location, int x, int y, int z, int w) ]
		- glProgramUniform1ui [ void ProgramUniform1ui(uint program, int location, uint x) ]
		- glProgramUniform2ui [ void ProgramUniform2ui(uint program, int location, uint x, uint y) ]
		- glProgramUniform3ui [ void ProgramUniform3ui(uint program, int location, uint x, uint y, uint z) ]
		- glProgramUniform4ui [ void ProgramUniform4ui(uint program, int location, uint x, uint y, uint z, uint w) ]
		- glProgramUniform1f [ void ProgramUniform1f(uint program, int location, float x) ]
		- glProgramUniform2f [ void ProgramUniform2f(uint program, int location, float x, float y) ]
		- glProgramUniform3f [ void ProgramUniform3f(uint program, int location, float x, float y, float z) ]
		- glProgramUniform4f [ void ProgramUniform4f(uint program, int location, float x, float y, float z, float w) ]
		- glProgramUniform1d [ void ProgramUniform1d(uint program, int location, double x) ]
		- glProgramUniform2d [ void ProgramUniform2d(uint program, int location, double x, double y) ]
		- glProgramUniform3d [ void ProgramUniform3d(uint program, int location, double x, double y, double z) ]
		- glProgramUniform4d [ void ProgramUniform4d(uint program, int location, double x, double y, double z, double w) ]
		- glProgramUniform1iv [ void ProgramUniform1iv(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform2iv [ void ProgramUniform2iv(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform3iv [ void ProgramUniform3iv(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform4iv [ void ProgramUniform4iv(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform1uiv [ void ProgramUniform1uiv(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform2uiv [ void ProgramUniform2uiv(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform3uiv [ void ProgramUniform3uiv(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform4uiv [ void ProgramUniform4uiv(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform1fv [ void ProgramUniform1fv(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform2fv [ void ProgramUniform2fv(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform3fv [ void ProgramUniform3fv(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform4fv [ void ProgramUniform4fv(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform1dv [ void ProgramUniform1dv(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform2dv [ void ProgramUniform2dv(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform3dv [ void ProgramUniform3dv(uint program, int location, sizei count, const double *value) ]
		- glProgramUniform4dv [ void ProgramUniform4dv(uint program, int location, sizei count, const double *value) ]
		- glProgramUniformMatrix2fv [ void ProgramUniformMatrix2fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3fv [ void ProgramUniformMatrix3fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4fv [ void ProgramUniformMatrix4fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2dv [ void ProgramUniformMatrix2dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3dv [ void ProgramUniformMatrix3dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4dv [ void ProgramUniformMatrix4dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix2x3fv [ void ProgramUniformMatrix2x3fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x2fv [ void ProgramUniformMatrix3x2fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x4fv [ void ProgramUniformMatrix2x4fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x2fv [ void ProgramUniformMatrix4x2fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x4fv [ void ProgramUniformMatrix3x4fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x3fv [ void ProgramUniformMatrix4x3fv(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x3dv [ void ProgramUniformMatrix2x3dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3x2dv [ void ProgramUniformMatrix3x2dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix2x4dv [ void ProgramUniformMatrix2x4dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4x2dv [ void ProgramUniformMatrix4x2dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix3x4dv [ void ProgramUniformMatrix3x4dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glProgramUniformMatrix4x3dv [ void ProgramUniformMatrix4x3dv(uint program, int location, sizei count, boolean transpose, const double *value) ]
		- glValidateProgramPipeline [ void ValidateProgramPipeline(uint pipeline ) ]
		- glGetProgramPipelineInfoLog [ void GetProgramPipelineInfoLog(uint pipeline, sizei bufSize, sizei *length, char *infoLog) ]
ARB_shader_atomic_counters [ source: ARB\ARB_shader_atomic_counters.txt ]
	- Strings = [ GL_ARB_shader_atomic_counters ]
	- Funcs:
		- glGetActiveAtomicCounterBufferiv [ void GetActiveAtomicCounterBufferiv (uint program, uint bufferIndex, enum pname, int *params) ]
ARB_shader_atomic_counter_ops [ source: ARB\ARB_shader_atomic_counter_ops.txt ]
	- Strings = [ GL_ARB_shader_atomic_counter_ops ]
ARB_shader_ballot [ source: ARB\ARB_shader_ballot.txt ]
	- Strings = [ GL_ARB_shader_ballot ]
ARB_shader_bit_encoding [ source: ARB\ARB_shader_bit_encoding.txt ]
	- Strings = [ GL_ARB_shader_bit_encoding ]
ARB_shader_clock [ source: ARB\ARB_shader_clock.txt ]
	- Strings = [ GL_ARB_shader_clock ]
ARB_shader_draw_parameters [ source: ARB\ARB_shader_draw_parameters.txt ]
	- Strings = [ GL_ARB_shader_draw_parameters ]
ARB_shader_group_vote [ source: ARB\ARB_shader_group_vote.txt ]
	- Strings = [ GL_ARB_shader_group_vote ]
ARB_shader_image_load_store [ source: ARB\ARB_shader_image_load_store.txt ]
	- Strings = [ GL_ARB_shader_image_load_store ]
	- Funcs:
		- glBindImageTexture [ void BindImageTexture(uint unit, uint texture, int level, boolean layered, int layer, enum access, enum format) ]
		- glMemoryBarrier [ void MemoryBarrier(bitfield barriers) ]
ARB_shader_image_size [ source: ARB\ARB_shader_image_size.txt ]
	- Strings = [ GL_ARB_shader_image_size ]
ARB_shader_objects [ source: ARB\ARB_shader_objects.txt ]
	- Strings = [ GL_ARB_shader_objects ]
	- Funcs:
		- glDeleteObjectARB [ void DeleteObjectARB(handleARB obj) ]
		- glGetHandleARB [ handleARB GetHandleARB(enum pname) ]
		- glDetachObjectARB [ void DetachObjectARB(handleARB containerObj, handleARB attachedObj) ]
		- glCreateShaderObjectARB [ handleARB CreateShaderObjectARB(enum shaderType) ]
		- glShaderSourceARB [ void ShaderSourceARB(handleARB shaderObj, sizei count, const charARB **string, const int *length) ]
		- glCompileShaderARB [ void CompileShaderARB(handleARB shaderObj) ]
		- glCreateProgramObjectARB [ handleARB CreateProgramObjectARB(void) ]
		- glAttachObjectARB [ void AttachObjectARB(handleARB containerObj, handleARB obj) ]
		- glLinkProgramARB [ void LinkProgramARB(handleARB programObj) ]
		- glUseProgramObjectARB [ void UseProgramObjectARB(handleARB programObj) ]
		- glValidateProgramARB [ void ValidateProgramARB(handleARB programObj) ]
		- glUniform1fARB [ void Uniform1fARB(int location, float v0) ]
		- glUniform2fARB [ void Uniform2fARB(int location, float v0, float v1) ]
		- glUniform3fARB [ void Uniform3fARB(int location, float v0, float v1, float v2) ]
		- glUniform4fARB [ void Uniform4fARB(int location, float v0, float v1, float v2, float v3) ]
		- glUniform1iARB [ void Uniform1iARB(int location, int v0) ]
		- glUniform2iARB [ void Uniform2iARB(int location, int v0, int v1) ]
		- glUniform3iARB [ void Uniform3iARB(int location, int v0, int v1, int v2) ]
		- glUniform4iARB [ void Uniform4iARB(int location, int v0, int v1, int v2, int v3) ]
		- glUniform1fvARB [ void Uniform1fvARB(int location, sizei count, const float *value) ]
		- glUniform2fvARB [ void Uniform2fvARB(int location, sizei count, const float *value) ]
		- glUniform3fvARB [ void Uniform3fvARB(int location, sizei count, const float *value) ]
		- glUniform4fvARB [ void Uniform4fvARB(int location, sizei count, const float *value) ]
		- glUniform1ivARB [ void Uniform1ivARB(int location, sizei count, const int *value) ]
		- glUniform2ivARB [ void Uniform2ivARB(int location, sizei count, const int *value) ]
		- glUniform3ivARB [ void Uniform3ivARB(int location, sizei count, const int *value) ]
		- glUniform4ivARB [ void Uniform4ivARB(int location, sizei count, const int *value) ]
		- glUniformMatrix2fvARB [ void UniformMatrix2fvARB(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix3fvARB [ void UniformMatrix3fvARB(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix4fvARB [ void UniformMatrix4fvARB(int location, sizei count, boolean transpose, const float *value) ]
		- glGetObjectParameterfvARB [ void GetObjectParameterfvARB(handleARB obj, enum pname, float *params) ]
		- glGetObjectParameterivARB [ void GetObjectParameterivARB(handleARB obj, enum pname, int *params) ]
		- glGetInfoLogARB [ void GetInfoLogARB(handleARB obj, sizei maxLength, sizei *length, charARB *infoLog) ]
		- glGetAttachedObjectsARB [ void GetAttachedObjectsARB(handleARB containerObj, sizei maxCount, sizei *count, handleARB *obj) ]
		- glGetUniformLocationARB [ int GetUniformLocationARB(handleARB programObj, const charARB *name) ]
		- glGetActiveUniformARB [ void GetActiveUniformARB(handleARB programObj, uint index, sizei maxLength, sizei *length, int *size, enum *type, charARB *name) ]
		- glGetUniformfvARB [ void GetUniformfvARB(handleARB programObj, int location, float *params) ]
		- glGetUniformivARB [ void GetUniformivARB(handleARB programObj, int location, int *params) ]
		- glGetShaderSourceARB [ void GetShaderSourceARB(handleARB obj, sizei maxLength, sizei *length, charARB *source) ]
ARB_shader_precision [ source: ARB\ARB_shader_precision.txt ]
	- Strings = [ GL_ARB_shader_precision ]
ARB_shader_stencil_export [ source: ARB\ARB_shader_stencil_export.txt ]
	- Strings = [ GL_ARB_shader_stencil_export ]
ARB_shader_storage_buffer_object [ source: ARB\ARB_shader_storage_buffer_object.txt ]
	- Strings = [ GL_ARB_shader_storage_buffer_object ]
	- Funcs:
		- glShaderStorageBlockBinding [ void ShaderStorageBlockBinding(uint program, uint storageBlockIndex, uint storageBlockBinding) ]
ARB_shader_subroutine [ source: ARB\ARB_shader_subroutine.txt ]
	- Strings = [ GL_ARB_shader_subroutine ]
	- Funcs:
		- glGetSubroutineUniformLocation [ int GetSubroutineUniformLocation(uint program, enum shadertype, const char *name) ]
		- glGetSubroutineIndex [ uint GetSubroutineIndex(uint program, enum shadertype, const char *name) ]
		- glGetActiveSubroutineUniformiv [ void GetActiveSubroutineUniformiv(uint program, enum shadertype, uint index, enum pname, int *values) ]
		- glGetActiveSubroutineUniformName [ void GetActiveSubroutineUniformName(uint program, enum shadertype, uint index, sizei bufsize, sizei *length, char *name) ]
		- glGetActiveSubroutineName [ void GetActiveSubroutineName(uint program, enum shadertype, uint index, sizei bufsize, sizei *length, char *name) ]
		- glUniformSubroutinesuiv [ void UniformSubroutinesuiv(enum shadertype, sizei count, const uint *indices) ]
		- glGetUniformSubroutineuiv [ void GetUniformSubroutineuiv(enum shadertype, int location, uint *params) ]
		- glGetProgramStageiv [ void GetProgramStageiv(uint program, enum shadertype, enum pname, int *values) ]
		- glProgramSubroutineParametersuivNV [ void ProgramSubroutineParametersuivNV(enum target, sizei count, const uint *params) ]
		- glGetProgramSubroutineParameteruivNV [ void GetProgramSubroutineParameteruivNV(enum target, uint index, uint *param) ]
ARB_shader_texture_image_samples [ source: ARB\ARB_shader_texture_image_samples.txt ]
	- Strings = [ GL_ARB_shader_texture_image_samples ]
ARB_shader_texture_lod [ source: ARB\ARB_shader_texture_lod.txt ]
	- Strings = [ GL_ARB_shader_texture_lod ]
ARB_shader_viewport_layer_array [ source: ARB\ARB_shader_viewport_layer_array.txt ]
	- Strings = [ GL_ARB_shader_viewport_layer_array ]
ARB_shading_language_100 [ source: ARB\ARB_shading_language_100.txt ]
	- Strings = [ GL_ARB_shading_language_100 ]
ARB_shading_language_420pack [ source: ARB\ARB_shading_language_420pack.txt ]
	- Strings = [ GL_ARB_shading_language_420pack ]
ARB_shading_language_include [ source: ARB\ARB_shading_language_include.txt ]
	- Strings = [ GL_ARB_shading_language_include ]
	- Funcs:
		- glNamedStringARB [ void NamedStringARB(enum type, int namelen, const char *name, int stringlen, const char *string) ]
		- glDeleteNamedStringARB [ void DeleteNamedStringARB(int namelen, const char *name) ]
		- glCompileShaderIncludeARB [ void CompileShaderIncludeARB(uint shader, sizei count, const char *const *path, const int *length) ]
		- glIsNamedStringARB [ boolean IsNamedStringARB(int namelen, const char *name) ]
		- glGetNamedStringARB [ void GetNamedStringARB(int namelen, const char *name, sizei bufSize, int *stringlen, char *string) ]
		- glGetNamedStringivARB [ void GetNamedStringivARB(int namelen, const char *name, enum pname, int *params) ]
ARB_shading_language_packing [ source: ARB\ARB_shading_language_packing.txt ]
	- Strings = [ GL_ARB_shading_language_packing ]
ARB_shadow [ source: ARB\ARB_shadow.txt ]
	- Strings = [ GL_ARB_shadow ]
ARB_shadow_ambient [ source: ARB\ARB_shadow_ambient.txt ]
	- Strings = [ GL_ARB_shadow_ambient ]
ARB_sparse_buffer [ source: ARB\ARB_sparse_buffer.txt ]
	- Strings = [ GL_ARB_sparse_buffer ]
	- Funcs:
		- glBufferPageCommitmentARB [ void BufferPageCommitmentARB(enum target, intptr offset, sizeiptr size, boolean commit) ]
		- glNamedBufferPageCommitmentEXT [ %Broken% ]
		- glNamedBufferPageCommitmentARB [ %Broken% ]
ARB_sparse_texture [ source: ARB\ARB_sparse_texture.txt ]
	- Strings = [ GL_ARB_sparse_texture ]
	- Funcs:
		- glTexPageCommitmentARB [ void TexPageCommitmentARB(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, boolean commit) ]
		- glTexturePageCommitmentEXT [ void TexturePageCommitmentEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, boolean commit) ]
ARB_sparse_texture2 [ source: ARB\ARB_sparse_texture2.txt ]
	- Strings = [ GL_ARB_sparse_texture2 ]
ARB_sparse_texture_clamp [ source: ARB\ARB_sparse_texture_clamp.txt ]
	- Strings = [ GL_ARB_sparse_texture_clamp ]
ARB_spirv_extensions [ source: ARB\ARB_spirv_extensions.txt ]
	- Strings = [ GL_ARB_spirv_extensions ]
ARB_stencil_texturing [ source: ARB\ARB_stencil_texturing.txt ]
	- Strings = [ GL_ARB_stencil_texturing ]
ARB_sync [ source: ARB\ARB_sync.txt ]
	- Strings = [ GL_ARB_sync ]
	- Funcs:
		- glFenceSync [ sync FenceSync(enum condition,bitfield flags) ]
		- glIsSync [ boolean IsSync(sync sync) ]
		- glDeleteSync [ void DeleteSync(sync sync) ]
		- glClientWaitSync [ enum ClientWaitSync(sync sync,bitfield flags,uint64 timeout) ]
		- glWaitSync [ void WaitSync(sync sync,bitfield flags,uint64 timeout) ]
		- glGetInteger64v [ void GetInteger64v(enum pname, int64 *params) ]
		- glGetSynciv [ void GetSynciv(sync sync,enum pname,sizei bufSize,sizei *length, int *values) ]
ARB_tessellation_shader [ source: ARB\ARB_tessellation_shader.txt ]
	- Strings = [ GL_ARB_tessellation_shader ]
	- Funcs:
		- glPatchParameteri [ void PatchParameteri(enum pname, int value) ]
		- glPatchParameterfv [ void PatchParameterfv(enum pname, const float *values) ]
ARB_texture_barrier [ source: ARB\ARB_texture_barrier.txt ]
	- Strings = [ GL_ARB_texture_barrier ]
	- Funcs:
		- glTextureBarrier [ void TextureBarrier(void) ]
ARB_texture_border_clamp [ source: ARB\ARB_texture_border_clamp.txt ]
	- Strings = [ GL_ARB_texture_border_clamp ]
ARB_texture_buffer_object [ source: ARB\ARB_texture_buffer_object.txt ]
	- Strings = [ GL_ARB_texture_buffer_object ]
	- Funcs:
		- glTexBufferARB [ void TexBufferARB(enum target, enum internalformat, uint buffer) ]
ARB_texture_buffer_object_rgb32 [ source: ARB\ARB_texture_buffer_object_rgb32.txt ]
	- Strings = [ GL_ARB_texture_buffer_object_rgb32 ]
ARB_texture_buffer_range [ source: ARB\ARB_texture_buffer_range.txt ]
	- Strings = [ GL_ARB_texture_buffer_range ]
	- Funcs:
		- glTexBufferRange [ void TexBufferRange(enum target, enum internalformat, uint buffer, intptr offset, sizeiptr size) ]
		- glTextureBufferRangeEXT [ void TextureBufferRangeEXT(uint texture, enum target, enum internalformat, uint buffer, intptr offset, sizeiptr size) ]
ARB_texture_compression [ source: ARB\ARB_texture_compression.txt ]
	- Strings = [ GL_ARB_texture_compression ]
	- Funcs:
		- glCompressedTexImage3DARB [ void CompressedTexImage3DARB(enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, sizei imageSize, const void *data) ]
		- glCompressedTexImage2DARB [ void CompressedTexImage2DARB(enum target, int level, enum internalformat, sizei width, sizei height, int border, sizei imageSize, const void *data) ]
		- glCompressedTexImage1DARB [ void CompressedTexImage1DARB(enum target, int level, enum internalformat, sizei width, int border, sizei imageSize, const void *data) ]
		- glCompressedTexSubImage3DARB [ void CompressedTexSubImage3DARB(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glCompressedTexSubImage2DARB [ void CompressedTexSubImage2DARB(enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, sizei imageSize, const void *data) ]
		- glCompressedTexSubImage1DARB [ void CompressedTexSubImage1DARB(enum target, int level, int xoffset, sizei width, enum format, sizei imageSize, const void *data) ]
		- glGetCompressedTexImageARB [ void GetCompressedTexImageARB(enum target, int lod, void *img) ]
ARB_texture_compression_bptc [ source: ARB\ARB_texture_compression_bptc.txt ]
	- Strings = [ GL_ARB_texture_compression_bptc ]
ARB_texture_compression_rgtc [ source: ARB\ARB_texture_compression_rgtc.txt ]
	- Strings = [ GL_ARB_texture_compression_rgtc ]
ARB_texture_cube_map [ source: ARB\ARB_texture_cube_map.txt ]
	- Strings = [ GL_ARB_texture_cube_map ]
ARB_texture_cube_map_array [ source: ARB\ARB_texture_cube_map_array.txt ]
	- Strings = [ GL_ARB_texture_cube_map_array ]
ARB_texture_env_add [ source: ARB\ARB_texture_env_add.txt ]
	- Strings = [ GL_ARB_texture_env_add ]
ARB_texture_env_combine [ source: ARB\ARB_texture_env_combine.txt ]
	- Strings = [ GL_ARB_texture_env_combine ]
ARB_texture_env_crossbar [ source: ARB\ARB_texture_env_crossbar.txt ]
	- Strings = [ GL_ARB_texture_env_crossbar ]
ARB_texture_env_dot3 [ source: ARB\ARB_texture_env_dot3.txt ]
	- Strings = [ GL_ARB_texture_env_dot3 ]
ARB_texture_filter_anisotropic [ source: ARB\ARB_texture_filter_anisotropic.txt ]
	- Strings = [ GL_ARB_texture_filter_anisotropic ]
ARB_texture_filter_minmax [ source: ARB\ARB_texture_filter_minmax.txt ]
	- Strings = [ GL_ARB_texture_filter_minmax ]
ARB_texture_float [ source: ARB\ARB_texture_float.txt ]
	- Strings = [ GL_ARB_texture_float ]
ARB_texture_gather [ source: ARB\ARB_texture_gather.txt ]
	- Strings = [ GL_ARB_texture_gather ]
ARB_texture_mirrored_repeat [ source: ARB\ARB_texture_mirrored_repeat.txt ]
	- Strings = [ GL_ARB_texture_mirrored_repeat ]
ARB_texture_mirror_clamp_to_edge [ source: ARB\ARB_texture_mirror_clamp_to_edge.txt ]
	- Strings = [ GL_ARB_texture_mirror_clamp_to_edge ]
ARB_texture_multisample [ source: ARB\ARB_texture_multisample.txt ]
	- Strings = [ GL_ARB_texture_multisample ]
	- Funcs:
		- glTexImage2DMultisample [ void TexImage2DMultisample(enum target, sizei samples, enum internalformat, sizei width, sizei height, boolean fixedsamplelocations) ]
		- glTexImage3DMultisample [ void TexImage3DMultisample(enum target, sizei samples, enum internalformat, sizei width, sizei height, sizei depth, boolean fixedsamplelocations) ]
		- glGetMultisamplefv [ void GetMultisamplefv(enum pname, uint index, float *val) ]
		- glSampleMaski [ void SampleMaski(uint index, bitfield mask) ]
ARB_texture_non_power_of_two [ source: ARB\ARB_texture_non_power_of_two.txt ]
	- Strings = [ GL_ARB_texture_non_power_of_two ]
ARB_texture_query_levels [ source: ARB\ARB_texture_query_levels.txt ]
	- Strings = [ GL_ARB_texture_query_levels ]
ARB_texture_query_lod [ source: ARB\ARB_texture_query_lod.txt ]
	- Strings = [ GL_ARB_texture_query_lod ]
ARB_texture_rectangle [ source: ARB\ARB_texture_rectangle.txt ]
	- Strings = [ GL_ARB_texture_rectangle ]
ARB_texture_rg [ source: ARB\ARB_texture_rg.txt ]
	- Strings = [ GL_ARB_texture_rg ]
ARB_texture_rgb10_a2ui [ source: ARB\ARB_texture_rgb10_a2ui.txt ]
	- Strings = [ GL_ARB_texture_rgb10_a2ui ]
ARB_texture_stencil8 [ source: ARB\ARB_texture_stencil8.txt ]
	- Strings = [ GL_ARB_texture_stencil8 ]
ARB_texture_storage [ source: ARB\ARB_texture_storage.txt ]
	- Strings = [ GL_ARB_texture_storage ]
	- Funcs:
		- glTexStorage1D [ void TexStorage1D(enum target, sizei levels, enum internalformat, sizei width) ]
		- glTexStorage2D [ void TexStorage2D(enum target, sizei levels, enum internalformat, sizei width, sizei height) ]
		- glTexStorage3D [ void TexStorage3D(enum target, sizei levels, enum internalformat, sizei width, sizei height, sizei depth) ]
		- glTextureStorage1DEXT [ void TextureStorage1DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width) ]
		- glTextureStorage2DEXT [ void TextureStorage2DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width, sizei height) ]
		- glTextureStorage3DEXT [ void TextureStorage3DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width, sizei height, sizei depth) ]
ARB_texture_storage_multisample [ source: ARB\ARB_texture_storage_multisample.txt ]
	- Strings = [ GL_ARB_texture_storage_multisample ]
	- Funcs:
		- glTexStorage2DMultisample [ void TexStorage2DMultisample(enum target, sizei samples, enum internalformat, sizei width, sizei height, boolean fixedsamplelocations) ]
		- glTexStorage3DMultisample [ void TexStorage3DMultisample(enum target, sizei samples, enum internalformat, sizei width, sizei height, sizei depth, boolean fixedsamplelocations) ]
		- glTextureStorage2DMultisampleEXT [ void TextureStorage2DMultisampleEXT(uint texture, enum target, sizei samples, enum internalformat, sizei width, sizei height, boolean fixedsamplelocations) ]
		- glTextureStorage3DMultisampleEXT [ void TextureStorage3DMultisampleEXT(uint texture, enum target, sizei samples, enum internalformat, sizei width, sizei height, sizei depth, boolean fixedsamplelocations) ]
ARB_texture_swizzle [ source: ARB\ARB_texture_swizzle.txt ]
	- Strings = [ GL_ARB_texture_swizzle ]
ARB_texture_view [ source: ARB\ARB_texture_view.txt ]
	- Strings = [ GL_ARB_texture_view ]
	- Funcs:
		- glTextureView [ void TextureView(uint texture, enum target, uint origtexture, enum internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers) ]
ARB_timer_query [ source: ARB\ARB_timer_query.txt ]
	- Strings = [ GL_ARB_timer_query ]
	- Funcs:
		- glQueryCounter [ void QueryCounter(uint id, enum target) ]
		- glGetQueryObjecti64v [ void GetQueryObjecti64v(uint id, enum pname, int64 *params) ]
		- glGetQueryObjectui64v [ void GetQueryObjectui64v(uint id, enum pname, uint64 *params) ]
ARB_transform_feedback2 [ source: ARB\ARB_transform_feedback2.txt ]
	- Strings = [ GL_ARB_transform_feedback2 ]
	- Funcs:
		- glBindTransformFeedback [ void BindTransformFeedback(enum target, uint id) ]
		- glDeleteTransformFeedbacks [ void DeleteTransformFeedbacks(sizei n, const uint *ids) ]
		- glGenTransformFeedbacks [ void GenTransformFeedbacks(sizei n, uint *ids) ]
		- glIsTransformFeedback [ boolean IsTransformFeedback(uint id) ]
		- glPauseTransformFeedback [ void PauseTransformFeedback(void) ]
		- glResumeTransformFeedback [ void ResumeTransformFeedback(void) ]
		- glDrawTransformFeedback [ void DrawTransformFeedback(enum mode, uint id) ]
ARB_transform_feedback3 [ source: ARB\ARB_transform_feedback3.txt ]
	- Strings = [ GL_ARB_transform_feedback3 ]
	- Funcs:
		- glDrawTransformFeedbackStream [ void DrawTransformFeedbackStream(enum mode, uint id, uint stream) ]
		- glBeginQueryIndexed [ void BeginQueryIndexed(enum target, uint index, uint id) ]
		- glEndQueryIndexed [ void EndQueryIndexed(enum target, uint index) ]
		- glGetQueryIndexediv [ void GetQueryIndexediv(enum target, uint index, enum pname, int *params) ]
		- glTransformFeedbackStreamAttribsNV [ void TransformFeedbackStreamAttribsNV(sizei count, const int * attribs, sizei nbuffers, const int *bufstreams, enum bufferMode) ]
		- glBindBufferRange [ void BindBufferRange(enum target, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glBindBufferOffsetNV [ void BindBufferOffsetNV(enum target, uint index, uint buffer, intptr offset) ]
		- glBindBufferBase [ void BindBufferBase(enum target, uint index, uint buffer) ]
		- glTransformFeedbackAttribsNV [ void TransformFeedbackAttribsNV(sizei count, const int *attribs, enum bufferMode) ]
		- glTransformFeedbackVaryingsNV [ void TransformFeedbackVaryingsNV(uint program, sizei count, const int *locations, enum bufferMode) ]
		- glGetTransformFeedbackVaryingNV [ void GetTransformFeedbackVaryingNV(uint program, uint index, int *location) ]
ARB_transform_feedback_instanced [ source: ARB\ARB_transform_feedback_instanced.txt ]
	- Strings = [ GL_ARB_transform_feedback_instanced ]
	- Funcs:
		- glDrawTransformFeedbackInstanced [ void DrawTransformFeedbackInstanced(enum mode, uint id, sizei primcount) ]
		- glDrawTransformFeedbackStreamInstanced [ void DrawTransformFeedbackStreamInstanced(enum mode, uint id, uint stream, sizei primcount) ]
ARB_transform_feedback_overflow_query [ source: ARB\ARB_transform_feedback_overflow_query.txt ]
	- Strings = [ GL_ARB_transform_feedback_overflow_query ]
ARB_transpose_matrix [ source: ARB\ARB_transpose_matrix.txt ]
	- Strings = [ GL_ARB_transpose_matrix ]
	- Funcs:
		- glLoadTransposeMatrixfARB [ void LoadTransposeMatrixfARB(glfloat m[16]) ]
		- glLoadTransposeMatrixdARB [ void LoadTransposeMatrixdARB(gldouble m[16]) ]
		- glMultTransposeMatrixfARB [ void MultTransposeMatrixfARB(glfloat m[16]) ]
		- glMultTransposeMatrixdARB [ void MultTransposeMatrixdARB(gldouble m[16]) ]
ARB_uniform_buffer_object [ source: ARB\ARB_uniform_buffer_object.txt ]
	- Strings = [ GL_ARB_uniform_buffer_object ]
	- Funcs:
		- glGetUniformIndices [ void GetUniformIndices(uint program, sizei uniformCount, const char* const * uniformNames, uint* uniformIndices) ]
		- glGetActiveUniformsiv [ void GetActiveUniformsiv(uint program, sizei uniformCount, const uint* uniformIndices, enum pname, int* params) ]
		- glGetActiveUniformName [ void GetActiveUniformName(uint program, uint uniformIndex, sizei bufSize, sizei* length, char* uniformName) ]
		- glGetUniformBlockIndex [ uint GetUniformBlockIndex(uint program, const char* uniformBlockName) ]
		- glGetActiveUniformBlockiv [ void GetActiveUniformBlockiv(uint program, uint uniformBlockIndex, enum pname, int* params) ]
		- glGetActiveUniformBlockName [ void GetActiveUniformBlockName(uint program, uint uniformBlockIndex, sizei bufSize, sizei* length, char* uniformBlockName) ]
		- glBindBufferRange [ void BindBufferRange(enum target, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glBindBufferBase [ void BindBufferBase(enum target, uint index, uint buffer) ]
		- glGetIntegeri_v [ void GetIntegeri_v(enum target, uint index, int* data) ]
		- glUniformBlockBinding [ void UniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding) ]
ARB_vertex_array_bgra [ source: ARB\ARB_vertex_array_bgra.txt ]
	- Strings = [ GL_ARB_vertex_array_bgra ]
ARB_vertex_array_object [ source: ARB\ARB_vertex_array_object.txt ]
	- Strings = [ GL_ARB_vertex_array_object ]
	- Funcs:
		- glBindVertexArray [ void BindVertexArray(uint array) ]
		- glDeleteVertexArrays [ void DeleteVertexArrays(sizei n, const uint *arrays) ]
		- glGenVertexArrays [ void GenVertexArrays(sizei n, uint *arrays) ]
		- glIsVertexArray [ boolean IsVertexArray(uint array) ]
ARB_vertex_attrib_64bit [ source: ARB\ARB_vertex_attrib_64bit.txt ]
	- Strings = [ GL_ARB_vertex_attrib_64bit ]
	- Funcs:
		- glVertexAttribL1d [ void VertexAttribL1d(uint index, double x) ]
		- glVertexAttribL2d [ void VertexAttribL2d(uint index, double x, double y) ]
		- glVertexAttribL3d [ void VertexAttribL3d(uint index, double x, double y, double z) ]
		- glVertexAttribL4d [ void VertexAttribL4d(uint index, double x, double y, double z, double w) ]
		- glVertexAttribL1dv [ void VertexAttribL1dv(uint index, const double *v) ]
		- glVertexAttribL2dv [ void VertexAttribL2dv(uint index, const double *v) ]
		- glVertexAttribL3dv [ void VertexAttribL3dv(uint index, const double *v) ]
		- glVertexAttribL4dv [ void VertexAttribL4dv(uint index, const double *v) ]
		- glVertexAttribLPointer [ void VertexAttribLPointer(uint index, int size, enum type, sizei stride, const void *pointer) ]
		- glGetVertexAttribLdv [ void GetVertexAttribLdv(uint index, enum pname, double *params) ]
		- glVertexArrayVertexAttribLOffsetEXT [ void VertexArrayVertexAttribLOffsetEXT(uint vaobj, uint buffer, uint index, int size, enum type, sizei stride, intptr offset) ]
ARB_vertex_attrib_binding [ source: ARB\ARB_vertex_attrib_binding.txt ]
	- Strings = [ GL_ARB_vertex_attrib_binding ]
	- Funcs:
		- glBindVertexBuffer [ void BindVertexBuffer(uint bindingindex, uint buffer, intptr offset, sizei stride) ]
		- glVertexAttribFormat [ void VertexAttribFormat(uint attribindex, int size, enum type, boolean normalized, uint relativeoffset) ]
		- glVertexAttribIFormat [ void VertexAttribIFormat(uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexAttribLFormat [ void VertexAttribLFormat(uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexAttribBinding [ void VertexAttribBinding(uint attribindex, uint bindingindex) ]
		- glVertexBindingDivisor [ void VertexBindingDivisor(uint bindingindex, uint divisor) ]
		- glVertexArrayBindVertexBufferEXT [ void VertexArrayBindVertexBufferEXT(uint vaobj, uint bindingindex, uint buffer, intptr offset, sizei stride) ]
		- glVertexArrayVertexAttribFormatEXT [ void VertexArrayVertexAttribFormatEXT(uint vaobj, uint attribindex, int size, enum type, boolean normalized, uint relativeoffset) ]
		- glVertexArrayVertexAttribIFormatEXT [ void VertexArrayVertexAttribIFormatEXT(uint vaobj, uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexArrayVertexAttribLFormatEXT [ void VertexArrayVertexAttribLFormatEXT(uint vaobj, uint attribindex, int size, enum type, uint relativeoffset) ]
		- glVertexArrayVertexAttribBindingEXT [ void VertexArrayVertexAttribBindingEXT(uint vaobj, uint attribindex, uint bindingindex) ]
		- glVertexArrayVertexBindingDivisorEXT [ void VertexArrayVertexBindingDivisorEXT(uint vaobj, uint bindingindex, uint divisor) ]
ARB_vertex_blend [ source: ARB\ARB_vertex_blend.txt ]
	- Strings = [ GL_ARB_vertex_blend ]
	- Funcs:
		- glWeightbvARB [ void WeightbvARB(int size, glbyte * weights) ]
		- glWeightsvARB [ void WeightsvARB(int size, glshort * weights) ]
		- glWeightivARB [ void WeightivARB(int size, glint * weights) ]
		- glWeightfvARB [ void WeightfvARB(int size, glfloat * weights) ]
		- glWeightdvARB [ void WeightdvARB(int size, gldouble * weights) ]
		- glWeightubvARB [ void WeightubvARB(int size, glubyte * weights) ]
		- glWeightusvARB [ void WeightusvARB(int size, glushort * weights) ]
		- glWeightuivARB [ void WeightuivARB(int size, gluint * weights) ]
		- glWeightPointerARB [ void WeightPointerARB(int size, enum type, sizei stride, void *pointer) ]
		- glVertexBlendARB [ void VertexBlendARB(int count) ]
ARB_vertex_buffer_object [ source: ARB\ARB_vertex_buffer_object.txt ]
	- Strings = [ GL_ARB_vertex_buffer_object GLX_ARB_vertex_buffer_object ]
	- Funcs:
		- glBindBufferARB [ void BindBufferARB(enum target, uint buffer) ]
		- glDeleteBuffersARB [ void DeleteBuffersARB(sizei n, const uint *buffers) ]
		- glGenBuffersARB [ void GenBuffersARB(sizei n, uint *buffers) ]
		- glIsBufferARB [ boolean IsBufferARB(uint buffer) ]
		- glBufferDataARB [ void BufferDataARB(enum target, sizeiptrARB size, const void *data, enum usage) ]
		- glBufferSubDataARB [ void BufferSubDataARB(enum target, intptrARB offset, sizeiptrARB size, const void *data) ]
		- glGetBufferSubDataARB [ void GetBufferSubDataARB(enum target, intptrARB offset, sizeiptrARB size, void *data) ]
		- glMapBufferARB [ void *MapBufferARB(enum target, enum access) ]
		- glUnmapBufferARB [ boolean UnmapBufferARB(enum target) ]
		- glGetBufferParameterivARB [ void GetBufferParameterivARB(enum target, enum pname, int *params) ]
		- glGetBufferPointervARB [ void GetBufferPointervARB(enum target, enum pname, void **params) ]
ARB_vertex_program [ source: ARB\ARB_vertex_program.txt ]
	- Strings = [ GL_ARB_vertex_program ]
	- Funcs:
		- glVertexAttrib1sARB [ void VertexAttrib1sARB(uint index, short x) ]
		- glVertexAttrib1fARB [ void VertexAttrib1fARB(uint index, float x) ]
		- glVertexAttrib1dARB [ void VertexAttrib1dARB(uint index, double x) ]
		- glVertexAttrib2sARB [ void VertexAttrib2sARB(uint index, short x, short y) ]
		- glVertexAttrib2fARB [ void VertexAttrib2fARB(uint index, float x, float y) ]
		- glVertexAttrib2dARB [ void VertexAttrib2dARB(uint index, double x, double y) ]
		- glVertexAttrib3sARB [ void VertexAttrib3sARB(uint index, short x, short y, short z) ]
		- glVertexAttrib3fARB [ void VertexAttrib3fARB(uint index, float x, float y, float z) ]
		- glVertexAttrib3dARB [ void VertexAttrib3dARB(uint index, double x, double y, double z) ]
		- glVertexAttrib4sARB [ void VertexAttrib4sARB(uint index, short x, short y, short z, short w) ]
		- glVertexAttrib4fARB [ void VertexAttrib4fARB(uint index, float x, float y, float z, float w) ]
		- glVertexAttrib4dARB [ void VertexAttrib4dARB(uint index, double x, double y, double z, double w) ]
		- glVertexAttrib4NubARB [ void VertexAttrib4NubARB(uint index, ubyte x, ubyte y, ubyte z, ubyte w) ]
		- glVertexAttrib1svARB [ void VertexAttrib1svARB(uint index, const short *v) ]
		- glVertexAttrib1fvARB [ void VertexAttrib1fvARB(uint index, const float *v) ]
		- glVertexAttrib1dvARB [ void VertexAttrib1dvARB(uint index, const double *v) ]
		- glVertexAttrib2svARB [ void VertexAttrib2svARB(uint index, const short *v) ]
		- glVertexAttrib2fvARB [ void VertexAttrib2fvARB(uint index, const float *v) ]
		- glVertexAttrib2dvARB [ void VertexAttrib2dvARB(uint index, const double *v) ]
		- glVertexAttrib3svARB [ void VertexAttrib3svARB(uint index, const short *v) ]
		- glVertexAttrib3fvARB [ void VertexAttrib3fvARB(uint index, const float *v) ]
		- glVertexAttrib3dvARB [ void VertexAttrib3dvARB(uint index, const double *v) ]
		- glVertexAttrib4bvARB [ void VertexAttrib4bvARB(uint index, const byte *v) ]
		- glVertexAttrib4svARB [ void VertexAttrib4svARB(uint index, const short *v) ]
		- glVertexAttrib4ivARB [ void VertexAttrib4ivARB(uint index, const int *v) ]
		- glVertexAttrib4ubvARB [ void VertexAttrib4ubvARB(uint index, const ubyte *v) ]
		- glVertexAttrib4usvARB [ void VertexAttrib4usvARB(uint index, const ushort *v) ]
		- glVertexAttrib4uivARB [ void VertexAttrib4uivARB(uint index, const uint *v) ]
		- glVertexAttrib4fvARB [ void VertexAttrib4fvARB(uint index, const float *v) ]
		- glVertexAttrib4dvARB [ void VertexAttrib4dvARB(uint index, const double *v) ]
		- glVertexAttrib4NbvARB [ void VertexAttrib4NbvARB(uint index, const byte *v) ]
		- glVertexAttrib4NsvARB [ void VertexAttrib4NsvARB(uint index, const short *v) ]
		- glVertexAttrib4NivARB [ void VertexAttrib4NivARB(uint index, const int *v) ]
		- glVertexAttrib4NubvARB [ void VertexAttrib4NubvARB(uint index, const ubyte *v) ]
		- glVertexAttrib4NusvARB [ void VertexAttrib4NusvARB(uint index, const ushort *v) ]
		- glVertexAttrib4NuivARB [ void VertexAttrib4NuivARB(uint index, const uint *v) ]
		- glVertexAttribPointerARB [ void VertexAttribPointerARB(uint index, int size, enum type, boolean normalized, sizei stride, const void *pointer) ]
		- glEnableVertexAttribArrayARB [ void EnableVertexAttribArrayARB(uint index) ]
		- glDisableVertexAttribArrayARB [ void DisableVertexAttribArrayARB(uint index) ]
		- glProgramStringARB [ void ProgramStringARB(enum target, enum format, sizei len, const void *string) ]
		- glBindProgramARB [ void BindProgramARB(enum target, uint program) ]
		- glDeleteProgramsARB [ void DeleteProgramsARB(sizei n, const uint *programs) ]
		- glGenProgramsARB [ void GenProgramsARB(sizei n, uint *programs) ]
		- glProgramEnvParameter4dARB [ void ProgramEnvParameter4dARB(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramEnvParameter4dvARB [ void ProgramEnvParameter4dvARB(enum target, uint index, const double *params) ]
		- glProgramEnvParameter4fARB [ void ProgramEnvParameter4fARB(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramEnvParameter4fvARB [ void ProgramEnvParameter4fvARB(enum target, uint index, const float *params) ]
		- glProgramLocalParameter4dARB [ void ProgramLocalParameter4dARB(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramLocalParameter4dvARB [ void ProgramLocalParameter4dvARB(enum target, uint index, const double *params) ]
		- glProgramLocalParameter4fARB [ void ProgramLocalParameter4fARB(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramLocalParameter4fvARB [ void ProgramLocalParameter4fvARB(enum target, uint index, const float *params) ]
		- glGetProgramEnvParameterdvARB [ void GetProgramEnvParameterdvARB(enum target, uint index, double *params) ]
		- glGetProgramEnvParameterfvARB [ void GetProgramEnvParameterfvARB(enum target, uint index, float *params) ]
		- glGetProgramLocalParameterdvARB [ void GetProgramLocalParameterdvARB(enum target, uint index, double *params) ]
		- glGetProgramLocalParameterfvARB [ void GetProgramLocalParameterfvARB(enum target, uint index, float *params) ]
		- glGetProgramivARB [ void GetProgramivARB(enum target, enum pname, int *params) ]
		- glGetProgramStringARB [ void GetProgramStringARB(enum target, enum pname, void *string) ]
		- glGetVertexAttribdvARB [ void GetVertexAttribdvARB(uint index, enum pname, double *params) ]
		- glGetVertexAttribfvARB [ void GetVertexAttribfvARB(uint index, enum pname, float *params) ]
		- glGetVertexAttribivARB [ void GetVertexAttribivARB(uint index, enum pname, int *params) ]
		- glGetVertexAttribPointervARB [ void GetVertexAttribPointervARB(uint index, enum pname, void **pointer) ]
		- glIsProgramARB [ boolean IsProgramARB(uint program) ]
ARB_vertex_shader [ source: ARB\ARB_vertex_shader.txt ]
	- Strings = [ GL_ARB_vertex_shader ]
	- Funcs:
		- glVertexAttrib1fARB [ void VertexAttrib1fARB(uint index, float v0) ]
		- glVertexAttrib1sARB [ void VertexAttrib1sARB(uint index, short v0) ]
		- glVertexAttrib1dARB [ void VertexAttrib1dARB(uint index, double v0) ]
		- glVertexAttrib2fARB [ void VertexAttrib2fARB(uint index, float v0, float v1) ]
		- glVertexAttrib2sARB [ void VertexAttrib2sARB(uint index, short v0, short v1) ]
		- glVertexAttrib2dARB [ void VertexAttrib2dARB(uint index, double v0, double v1) ]
		- glVertexAttrib3fARB [ void VertexAttrib3fARB(uint index, float v0, float v1, float v2) ]
		- glVertexAttrib3sARB [ void VertexAttrib3sARB(uint index, short v0, short v1, short v2) ]
		- glVertexAttrib3dARB [ void VertexAttrib3dARB(uint index, double v0, double v1, double v2) ]
		- glVertexAttrib4fARB [ void VertexAttrib4fARB(uint index, float v0, float v1, float v2, float v3) ]
		- glVertexAttrib4sARB [ void VertexAttrib4sARB(uint index, short v0, short v1, short v2, short v3) ]
		- glVertexAttrib4dARB [ void VertexAttrib4dARB(uint index, double v0, double v1, double v2, double v3) ]
		- glVertexAttrib4NubARB [ void VertexAttrib4NubARB(uint index, ubyte x, ubyte y, ubyte z, ubyte w) ]
		- glVertexAttrib1fvARB [ void VertexAttrib1fvARB(uint index, const float *v) ]
		- glVertexAttrib1svARB [ void VertexAttrib1svARB(uint index, const short *v) ]
		- glVertexAttrib1dvARB [ void VertexAttrib1dvARB(uint index, const double *v) ]
		- glVertexAttrib2fvARB [ void VertexAttrib2fvARB(uint index, const float *v) ]
		- glVertexAttrib2svARB [ void VertexAttrib2svARB(uint index, const short *v) ]
		- glVertexAttrib2dvARB [ void VertexAttrib2dvARB(uint index, const double *v) ]
		- glVertexAttrib3fvARB [ void VertexAttrib3fvARB(uint index, const float *v) ]
		- glVertexAttrib3svARB [ void VertexAttrib3svARB(uint index, const short *v) ]
		- glVertexAttrib3dvARB [ void VertexAttrib3dvARB(uint index, const double *v) ]
		- glVertexAttrib4fvARB [ void VertexAttrib4fvARB(uint index, const float *v) ]
		- glVertexAttrib4svARB [ void VertexAttrib4svARB(uint index, const short *v) ]
		- glVertexAttrib4dvARB [ void VertexAttrib4dvARB(uint index, const double *v) ]
		- glVertexAttrib4ivARB [ void VertexAttrib4ivARB(uint index, const int *v) ]
		- glVertexAttrib4bvARB [ void VertexAttrib4bvARB(uint index, const byte *v) ]
		- glVertexAttrib4ubvARB [ void VertexAttrib4ubvARB(uint index, const ubyte *v) ]
		- glVertexAttrib4usvARB [ void VertexAttrib4usvARB(uint index, const ushort *v) ]
		- glVertexAttrib4uivARB [ void VertexAttrib4uivARB(uint index, const uint *v) ]
		- glVertexAttrib4NbvARB [ void VertexAttrib4NbvARB(uint index, const byte *v) ]
		- glVertexAttrib4NsvARB [ void VertexAttrib4NsvARB(uint index, const short *v) ]
		- glVertexAttrib4NivARB [ void VertexAttrib4NivARB(uint index, const int *v) ]
		- glVertexAttrib4NubvARB [ void VertexAttrib4NubvARB(uint index, const ubyte *v) ]
		- glVertexAttrib4NusvARB [ void VertexAttrib4NusvARB(uint index, const ushort *v) ]
		- glVertexAttrib4NuivARB [ void VertexAttrib4NuivARB(uint index, const uint *v) ]
		- glVertexAttribPointerARB [ void VertexAttribPointerARB(uint index, int size, enum type, boolean normalized, sizei stride, const void *pointer) ]
		- glEnableVertexAttribArrayARB [ void EnableVertexAttribArrayARB(uint index) ]
		- glDisableVertexAttribArrayARB [ void DisableVertexAttribArrayARB(uint index) ]
		- glBindAttribLocationARB [ void BindAttribLocationARB(handleARB programObj, uint index, const charARB *name) ]
		- glGetActiveAttribARB [ void GetActiveAttribARB(handleARB programObj, uint index, sizei maxLength, sizei *length, int *size, enum *type, charARB *name) ]
		- glGetAttribLocationARB [ GLint GetAttribLocationARB(handleARB programObj, const charARB *name) ]
		- glGetVertexAttribdvARB [ void GetVertexAttribdvARB(uint index, enum pname, double *params) ]
		- glGetVertexAttribfvARB [ void GetVertexAttribfvARB(uint index, enum pname, float *params) ]
		- glGetVertexAttribivARB [ void GetVertexAttribivARB(uint index, enum pname, int *params) ]
		- glGetVertexAttribPointervARB [ void GetVertexAttribPointervARB(uint index, enum pname, void **pointer) ]
ARB_vertex_type_10f_11f_11f_rev [ source: ARB\ARB_vertex_type_10f_11f_11f_rev.txt ]
	- Strings = [ GL_ARB_vertex_type_10f_11f_11f_rev ]
ARB_vertex_type_2_10_10_10_rev [ source: ARB\ARB_vertex_type_2_10_10_10_rev.txt ]
	- Strings = [ GL_ARB_vertex_type_2_10_10_10_rev ]
	- Funcs:
		- glVertexP2ui [ void VertexP2ui(enum type, uint value) ]
		- glVertexP3ui [ void VertexP3ui(enum type, uint value) ]
		- glVertexP4ui [ void VertexP4ui(enum type, uint value) ]
		- glVertexP2uiv [ void VertexP2uiv(enum type, const uint *value) ]
		- glVertexP3uiv [ void VertexP3uiv(enum type, const uint *value) ]
		- glVertexP4uiv [ void VertexP4uiv(enum type, const uint *value) ]
		- glTexCoordP1ui [ void TexCoordP1ui(enum type, uint coords) ]
		- glTexCoordP2ui [ void TexCoordP2ui(enum type, uint coords) ]
		- glTexCoordP3ui [ void TexCoordP3ui(enum type, uint coords) ]
		- glTexCoordP4ui [ void TexCoordP4ui(enum type, uint coords) ]
		- glTexCoordP1uiv [ void TexCoordP1uiv(enum type, const uint *coords) ]
		- glTexCoordP2uiv [ void TexCoordP2uiv(enum type, const uint *coords) ]
		- glTexCoordP3uiv [ void TexCoordP3uiv(enum type, const uint *coords) ]
		- glTexCoordP4uiv [ void TexCoordP4uiv(enum type, const uint *coords) ]
		- glMultiTexCoordP1ui [ void MultiTexCoordP1ui(enum texture, enum type, uint coords) ]
		- glMultiTexCoordP2ui [ void MultiTexCoordP2ui(enum texture, enum type, uint coords) ]
		- glMultiTexCoordP3ui [ void MultiTexCoordP3ui(enum texture, enum type, uint coords) ]
		- glMultiTexCoordP4ui [ void MultiTexCoordP4ui(enum texture, enum type, uint coords) ]
		- glMultiTexCoordP1uiv [ void MultiTexCoordP1uiv(enum texture, enum type, const uint *coords) ]
		- glMultiTexCoordP2uiv [ void MultiTexCoordP2uiv(enum texture, enum type, const uint *coords) ]
		- glMultiTexCoordP3uiv [ void MultiTexCoordP3uiv(enum texture, enum type, const uint *coords) ]
		- glMultiTexCoordP4uiv [ void MultiTexCoordP4uiv(enum texture, enum type, const uint *coords) ]
		- glNormalP3ui [ void NormalP3ui(enum type, uint coords) ]
		- glNormalP3uiv [ void NormalP3uiv(enum type, const uint *coords) ]
		- glColorP3ui [ void ColorP3ui(enum type, uint color) ]
		- glColorP4ui [ void ColorP4ui(enum type, uint color) ]
		- glColorP3uiv [ void ColorP3uiv(enum type, const uint *color) ]
		- glColorP4uiv [ void ColorP4uiv(enum type, const uint *color) ]
		- glSecondaryColorP3ui [ void SecondaryColorP3ui(enum type, uint color) ]
		- glSecondaryColorP3uiv [ void SecondaryColorP3uiv(enum type, const uint *color) ]
		- glVertexAttribP1ui [ void VertexAttribP1ui(uint index, enum type, boolean normalized, uint value) ]
		- glVertexAttribP2ui [ void VertexAttribP2ui(uint index, enum type, boolean normalized, uint value) ]
		- glVertexAttribP3ui [ void VertexAttribP3ui(uint index, enum type, boolean normalized, uint value) ]
		- glVertexAttribP4ui [ void VertexAttribP4ui(uint index, enum type, boolean normalized, uint value) ]
		- glVertexAttribP1uiv [ void VertexAttribP1uiv(uint index, enum type, boolean normalized, const uint *value) ]
		- glVertexAttribP2uiv [ void VertexAttribP2uiv(uint index, enum type, boolean normalized, const uint *value) ]
		- glVertexAttribP3uiv [ void VertexAttribP3uiv(uint index, enum type, boolean normalized, const uint *value) ]
		- glVertexAttribP4uiv [ void VertexAttribP4uiv(uint index, enum type, boolean normalized, const uint *value) ]
ARB_viewport_array [ source: ARB\ARB_viewport_array.txt ]
	- Strings = [ GL_ARB_viewport_array ]
	- Funcs:
		- glViewportArrayv [ void ViewportArrayv(uint first, sizei count, const float * v) ]
		- glViewportIndexedf [ void ViewportIndexedf(uint index, float x, float y, float w, float h) ]
		- glViewportIndexedfv [ void ViewportIndexedfv(uint index, const float * v) ]
		- glScissorArrayv [ void ScissorArrayv(uint first, sizei count, const int * v) ]
		- glScissorIndexed [ void ScissorIndexed(uint index, int left, int bottom, sizei width, sizei height) ]
		- glScissorIndexedv [ void ScissorIndexedv(uint index, const int * v) ]
		- glDepthRangeArrayv [ void DepthRangeArrayv(uint first, sizei count, const clampd * v) ]
		- glDepthRangeIndexed [ void DepthRangeIndexed(uint index, clampd n, clampd f) ]
		- glGetFloati_v [ void GetFloati_v(enum target, uint index, float *data) ]
		- glGetDoublei_v [ void GetDoublei_v(enum target, uint index, double *data) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum target, uint index, int * v) ]
		- glEnableIndexedEXT [ void EnableIndexedEXT(enum target, uint index) ]
		- glDisableIndexedEXT [ void DisableIndexedEXT(enum target, uint index) ]
		- glIsEnabledIndexedEXT [ boolean IsEnabledIndexedEXT(enum target, uint index) ]
ARB_window_pos [ source: ARB\ARB_window_pos.txt ]
	- Strings = [ GL_ARB_window_pos ]
	- Funcs:
		- glWindowPos2dARB [ void WindowPos2dARB(double x, double y) ]
		- glWindowPos2fARB [ void WindowPos2fARB(float x, float y) ]
		- glWindowPos2iARB [ void WindowPos2iARB(int x, int y) ]
		- glWindowPos2sARB [ void WindowPos2sARB(short x, short y) ]
		- glWindowPos2dvARB [ void WindowPos2dvARB(const double *p) ]
		- glWindowPos2fvARB [ void WindowPos2fvARB(const float *p) ]
		- glWindowPos2ivARB [ void WindowPos2ivARB(const int *p) ]
		- glWindowPos2svARB [ void WindowPos2svARB(const short *p) ]
		- glWindowPos3dARB [ void WindowPos3dARB(double x, double y, double z) ]
		- glWindowPos3fARB [ void WindowPos3fARB(float x, float y, float z) ]
		- glWindowPos3iARB [ void WindowPos3iARB(int x, int y, int z) ]
		- glWindowPos3sARB [ void WindowPos3sARB(short x, short y, short z) ]
		- glWindowPos3dvARB [ void WindowPos3dvARB(const double *p) ]
		- glWindowPos3fvARB [ void WindowPos3fvARB(const float *p) ]
		- glWindowPos3ivARB [ void WindowPos3ivARB(const int *p) ]
		- glWindowPos3svARB [ void WindowPos3svARB(const short *p) ]
ARB_create_context ARB_create_context_profile [ source: ARB\GLX_ARB_create_context.txt ]
	- Strings = [ GLX_ARB_create_context GLX_ARB_create_context_profile ]
	- Funcs:
		- glXCreateContextAttribsARB [ GLXContext glXCreateContextAttribsARB( Display *dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list) ]
		- glXCreateNewContext [ GLXContext glXCreateNewContext( Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct) ]
ARB_create_context_robustness [ source: ARB\GLX_ARB_create_context_robustness.txt ]
	- Strings = [ GLX_ARB_create_context_robustness ]
ARB_get_proc_address [ source: ARB\GLX_ARB_get_proc_address.txt ]
	- Strings = [ GLX_ARB_get_proc_address ]
GLX_ARB_robustness_isolation [ source: ARB\GLX_ARB_robustness_application_isolation.txt ]
	- Strings = [ GLX_ARB_robustness_application_isolation GLX_ARB_robustness_share_group_isolation ]
WGL_ARB_buffer_region [ source: ARB\WGL_ARB_buffer_region.txt ]
	- Strings = [ WGL_ARB_buffer_region ]
	- Funcs:
		- wglCreateBufferRegionARB [ HANDLE wglCreateBufferRegionARB(HDC hDC, int iLayerPlane, UINT uType) ]
		- wglDeleteBufferRegionARB [ VOID wglDeleteBufferRegionARB(HANDLE hRegion) ]
		- wglSaveBufferRegionARB [ BOOL wglSaveBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height) ]
		- wglRestoreBufferRegionARB [ BOOL wglRestoreBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc) ]
WGL_ARB_create_context WGL_ARB_create_context_profile [ source: ARB\WGL_ARB_create_context.txt ]
	- Strings = [ WGL_ARB_create_context WGL_ARB_create_context_profile ]
	- Funcs:
		- wglCreateContextAttribsARB [ HGLRC wglCreateContextAttribsARB(HDC hDC, HGLRC hShareContext, const int *attribList) ]
WGL_ARB_create_context_robustness [ source: ARB\WGL_ARB_create_context_robustness.txt ]
	- Strings = [ WGL_ARB_create_context_robustness ]
WGL_ARB_extensions_string [ source: ARB\WGL_ARB_extensions_string.txt ]
	- Strings = [ WGL_ARB_extensions_string ]
	- Funcs:
		- wglGetExtensionsStringARB [ char *wglGetExtensionsStringARB(HDC hdc) ]
WGL_ARB_make_current_read [ source: ARB\WGL_ARB_make_current_read.txt ]
	- Strings = [ WGL_ARB_make_current_read ]
	- Funcs:
		- wglMakeContextCurrentARB [ BOOL wglMakeContextCurrentARB(HDC hDrawDC, HDC hReadDC, HGLRC hglrc) ]
		- wglGetCurrentReadDCARB [ HDC wglGetCurrentReadDCARB(VOID) ]
WGL_ARB_pbuffer [ source: ARB\WGL_ARB_pbuffer.txt ]
	- Strings = [ WGL_ARB_pbuffer ]
	- Funcs:
		- wglCreatePbufferARB [ HPBUFFERARB wglCreatePbufferARB(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList) ]
		- wglGetPbufferDCARB [ HDC wglGetPbufferDCARB(HPBUFFERARB hPbuffer) ]
		- wglReleasePbufferDCARB [ int wglReleasePbufferDCARB(HPBUFFERARB hPbuffer, HDC hDC) ]
		- wglDestroyPbufferARB [ BOOL wglDestroyPbufferARB(HPBUFFERARB hPbuffer) ]
		- wglQueryPbufferARB [ BOOL wglQueryPbufferARB(HPBUFFERARB hPbuffer, int iAttribute, int *piValue) ]
WGL_ARB_pixel_format [ source: ARB\WGL_ARB_pixel_format.txt ]
	- Strings = [ WGL_ARB_pixel_format ]
	- Funcs:
		- wglGetPixelFormatAttribivARB [ BOOL wglGetPixelFormatAttribivARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues) ]
		- wglGetPixelFormatAttribfvARB [ BOOL wglGetPixelFormatAttribfvARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues) ]
		- wglChoosePixelFormatARB [ BOOL wglChoosePixelFormatARB(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats) ]
ARB_render_texture [ source: ARB\WGL_ARB_render_texture.txt ]
	- Strings = [ WGL_ARB_render_texture ]
	- Funcs:
		- wglBindTexImageARB [ BOOL wglBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer) ]
		- wglReleaseTexImageARB [ BOOL wglReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer) ]
		- wglSetPbufferAttribARB [ BOOL wglSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList) ]
WGL_ARB_robustness_isolation [ source: ARB\WGL_ARB_robustness_application_isolation.txt ]
	- Strings = [ WGL_ARB_robustness_application_isolation WGL_ARB_robustness_share_group_isolation ]
ARM_mali_program_binary [ source: ARM\ARM_mali_program_binary.txt ]
	- Strings = [ GL_ARM_mali_program_binary ]
ARM_mali_shader_binary [ source: ARM\ARM_mali_shader_binary.txt ]
	- Strings = [ GL_ARM_mali_shader_binary ]
ARM_rgba8 [ source: ARM\ARM_rgba8.txt ]
	- Strings = [ GL_ARM_rgba8 ]
ARM_shader_framebuffer_fetch [ source: ARM\ARM_shader_framebuffer_fetch.txt ]
	- Strings = [ GL_ARM_shader_framebuffer_fetch ]
ARM_shader_framebuffer_fetch_depth_stencil [ source: ARM\ARM_shader_framebuffer_fetch_depth_stencil.txt ]
	- Strings = [ GL_ARM_shader_framebuffer_fetch_depth_stencil ]
ATI_draw_buffers [ source: ATI\ATI_draw_buffers.txt ]
	- Strings = [ GL_ATI_draw_buffers ]
	- Funcs:
		- glDrawBuffersATI [ void DrawBuffersATI(sizei n, const enum *bufs) ]
ATI_element_array [ source: ATI\ATI_element_array.txt ]
	- Strings = [ GL_ATI_element_array ]
	- Funcs:
		- glElementPointerATI [ void ElementPointerATI(enum type, const void *pointer) ]
		- glDrawElementArrayATI [ void DrawElementArrayATI(enum mode, sizei count) ]
		- glDrawRangeElementArrayATI [ void DrawRangeElementArrayATI(enum mode, uint start, uint end, sizei count) ]
ATI_envmap_bumpmap [ source: ATI\ATI_envmap_bumpmap.txt ]
	- Strings = [ GL_ATI_envmap_bumpmap ]
	- Funcs:
		- glTexBumpParameterivATI [ void TexBumpParameterivATI(enum pname, glint *param) ]
		- glTexBumpParameterfvATI [ void TexBumpParameterfvATI(enum pname, glfloat *param) ]
		- glGetTexBumpParameterivATI [ void GetTexBumpParameterivATI(enum pname, glint *param) ]
		- glGetTexBumpParameterfvATI [ void GetTexBumpParameterfvATI(enum pname, glfloat *param) ]
ATI_fragment_shader [ source: ATI\ATI_fragment_shader.txt ]
	- Strings = [ GL_ATI_fragment_shader ]
	- Funcs:
		- glGenFragmentShadersATI [ uint GenFragmentShadersATI (uint range) ]
		- glBindFragmentShaderATI [ void BindFragmentShaderATI (uint id) ]
		- glDeleteFragmentShaderATI [ void DeleteFragmentShaderATI (uint id) ]
		- glBeginFragmentShaderATI [ void BeginFragmentShaderATI (void) ]
		- glEndFragmentShaderATI [ void EndFragmentShaderATI (void) ]
		- glPassTexCoordATI [ void PassTexCoordATI (uint dst, uint coord, enum swizzle) ]
		- glSampleMapATI [ void SampleMapATI (uint dst, uint interp, enum swizzle) ]
		- glColorFragmentOp1ATI [ void ColorFragmentOp1ATI (enum op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod) ]
		- glColorFragmentOp2ATI [ void ColorFragmentOp2ATI (enum op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod) ]
		- glColorFragmentOp3ATI [ void ColorFragmentOp3ATI (enum op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod) ]
		- glAlphaFragmentOp1ATI [ void AlphaFragmentOp1ATI (enum op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod) ]
		- glAlphaFragmentOp2ATI [ void AlphaFragmentOp2ATI (enum op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod) ]
		- glAlphaFragmentOp3ATI [ void AlphaFragmentOp3ATI (enum op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod) ]
		- glSetFragmentShaderConstantATI [ void SetFragmentShaderConstantATI (uint dst, const float *value) ]
ATI_map_object_buffer [ source: ATI\ATI_map_object_buffer.txt ]
	- Strings = [ GL_ATI_map_object_buffer ]
	- Funcs:
		- glMapObjectBufferATI [ void *MapObjectBufferATI(uint buffer) ]
		- glUnmapObjectBufferATI [ void UnmapObjectBufferATI(uint buffer) ]
ATI_meminfo [ source: ATI\ATI_meminfo.txt ]
	- Strings = [ GL_ATI_meminfo ]
ATI_pn_triangles [ source: ATI\ATI_pn_triangles.txt ]
	- Strings = [ GL_ATI_pn_triangles ]
	- Funcs:
		- glPNTrianglesiATI [ void PNTrianglesiATI(enum pname, int param) ]
		- glPNTrianglesfATI [ void PNTrianglesfATI(enum pname, float param) ]
ATI_separate_stencil [ source: ATI\ATI_separate_stencil.txt ]
	- Strings = [ GL_ATI_separate_stencil ]
	- Funcs:
		- glStencilOpSeparateATI [ void StencilOpSeparateATI( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) ]
		- glStencilFuncSeparateATI [ void StencilFuncSeparateATI( GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask) ]
ATI_texture_env_combine3 [ source: ATI\ATI_texture_env_combine3.txt ]
	- Strings = [ GL_ATI_texture_env_combine3 ]
ATI_texture_float [ source: ATI\ATI_texture_float.txt ]
	- Strings = [ GL_ATI_texture_float ]
ATI_texture_mirror_once [ source: ATI\ATI_texture_mirror_once.txt ]
	- Strings = [ GL_ATI_texture_mirror_once ]
ATI_text_fragment_shader [ source: ATI\ATI_text_fragment_shader.txt ]
	- Strings = [ GL_ATI_text_fragment_shader ]
ATI_vertex_array_object [ source: ATI\ATI_vertex_array_object.txt ]
	- Strings = [ GL_ATI_vertex_array_object ]
	- Funcs:
		- glNewObjectBufferATI [ uint NewObjectBufferATI(sizei size, const void *pointer, enum usage) ]
		- glIsObjectBufferATI [ boolean IsObjectBufferATI(uint buffer) ]
		- glUpdateObjectBufferATI [ void UpdateObjectBufferATI(uint buffer, uint offset, sizei size, const void *pointer, enum preserve) ]
		- glGetObjectBufferfvATI [ void GetObjectBufferfvATI(uint buffer, enum pname, float *params) ]
		- glGetObjectBufferivATI [ void GetObjectBufferivATI(uint buffer, enum pname, int *params) ]
		- glFreeObjectBufferATI [ void FreeObjectBufferATI(uint buffer) ]
		- glArrayObjectATI [ void ArrayObjectATI(enum array, int size, enum type, sizei stride, uint buffer, uint offset) ]
		- glGetArrayObjectfvATI [ void GetArrayObjectfvATI(enum array, enum pname, float *params) ]
		- glGetArrayObjectivATI [ void GetArrayObjectivATI(enum array, enum pname, int *params) ]
		- glVariantArrayObjectATI [ void VariantArrayObjectATI(uint id, enum type, sizei stride, uint buffer, uint offset) ]
		- glGetVariantArrayObjectfvATI [ void GetVariantArrayObjectfvATI(uint id, enum pname, float *params) ]
		- glGetVariantArrayObjectivATI [ void GetVariantArrayObjectivATI(uint id, enum pname, int *params) ]
ATI_vertex_attrib_array_object [ source: ATI\ATI_vertex_attrib_array_object.txt ]
	- Strings = [ GL_ATI_vertex_attrib_array_object ]
	- Funcs:
		- glVertexAttribArrayObjectATI [ void VertexAttribArrayObjectATI(uint index, int size, enum type, boolean normalized, sizei stride, uint buffer, uint offset) ]
		- glGetVertexAttribArrayObjectfvATI [ void GetVertexAttribArrayObjectfvATI(uint index, enum pname, float *params) ]
		- glGetVertexAttribArrayObjectivATI [ void GetVertexAttribArrayObjectivATI(uint index, enum pname, int *params) ]
ATI_vertex_streams [ source: ATI\ATI_vertex_streams.txt ]
	- Strings = [ GL_ATI_vertex_streams ]
	- Funcs:
		- glVertexStream1sATI [ void VertexStream1s(enum stream, Vec1s coords) ]
		- glVertexStream1iATI [ void VertexStream1i(enum stream, Vec1i coords) ]
		- glVertexStream1fATI [ void VertexStream1f(enum stream, Vec1f coords) ]
		- glVertexStream1dATI [ void VertexStream1d(enum stream, Vec1d coords) ]
		- glVertexStream2sATI [ void VertexStream2s(enum stream, Vec2s coords) ]
		- glVertexStream2iATI [ void VertexStream2i(enum stream, Vec2i coords) ]
		- glVertexStream2fATI [ void VertexStream2f(enum stream, Vec2f coords) ]
		- glVertexStream2dATI [ void VertexStream2d(enum stream, Vec2d coords) ]
		- glVertexStream3sATI [ void VertexStream3s(enum stream, Vec3s coords) ]
		- glVertexStream3iATI [ void VertexStream3i(enum stream, Vec3i coords) ]
		- glVertexStream3fATI [ void VertexStream3f(enum stream, Vec3f coords) ]
		- glVertexStream3dATI [ void VertexStream3d(enum stream, Vec3d coords) ]
		- glVertexStream4sATI [ void VertexStream4s(enum stream, Vec4s coords) ]
		- glVertexStream4iATI [ void VertexStream4i(enum stream, Vec4i coords) ]
		- glVertexStream4fATI [ void VertexStream4f(enum stream, Vec4f coords) ]
		- glVertexStream4dATI [ void VertexStream4d(enum stream, Vec4d coords) ]
		- glVertexStream1svATI [ void VertexStream1sv(enum stream, Vec1s coords) ]
		- glVertexStream1ivATI [ void VertexStream1iv(enum stream, Vec1i coords) ]
		- glVertexStream1fvATI [ void VertexStream1fv(enum stream, Vec1f coords) ]
		- glVertexStream1dvATI [ void VertexStream1dv(enum stream, Vec1d coords) ]
		- glVertexStream2svATI [ void VertexStream2sv(enum stream, Vec2s coords) ]
		- glVertexStream2ivATI [ void VertexStream2iv(enum stream, Vec2i coords) ]
		- glVertexStream2fvATI [ void VertexStream2fv(enum stream, Vec2f coords) ]
		- glVertexStream2dvATI [ void VertexStream2dv(enum stream, Vec2d coords) ]
		- glVertexStream3svATI [ void VertexStream3sv(enum stream, Vec3s coords) ]
		- glVertexStream3ivATI [ void VertexStream3iv(enum stream, Vec3i coords) ]
		- glVertexStream3fvATI [ void VertexStream3fv(enum stream, Vec3f coords) ]
		- glVertexStream3dvATI [ void VertexStream3dv(enum stream, Vec3d coords) ]
		- glVertexStream4svATI [ void VertexStream4sv(enum stream, Vec4s coords) ]
		- glVertexStream4ivATI [ void VertexStream4iv(enum stream, Vec4i coords) ]
		- glVertexStream4fvATI [ void VertexStream4fv(enum stream, Vec4f coords) ]
		- glVertexStream4dvATI [ void VertexStream4dv(enum stream, Vec4d coords) ]
		- glNormalStream3bATI [ void NormalStream3b(enum stream, glbyte coords) ]
		- glNormalStream3sATI [ void NormalStream3s(enum stream, glshort coords) ]
		- glNormalStream3iATI [ void NormalStream3i(enum stream, glint coords) ]
		- glNormalStream3fATI [ void NormalStream3f(enum stream, glfloat coords) ]
		- glNormalStream3dATI [ void NormalStream3d(enum stream, gldouble coords) ]
		- glNormalStream3bvATI [ void NormalStream3bv(enum stream, glbyte * coords) ]
		- glNormalStream3svATI [ void NormalStream3sv(enum stream, glshort * coords) ]
		- glNormalStream3ivATI [ void NormalStream3iv(enum stream, glint * coords) ]
		- glNormalStream3fvATI [ void NormalStream3fv(enum stream, glfloat * coords) ]
		- glNormalStream3dvATI [ void NormalStream3dv(enum stream, gldouble * coords) ]
		- glClientActiveVertexStreamATI [ void ClientActiveVertexStream(enum stream) ]
		- glVertexBlendEnviATI [ void VertexBlendEnvi(enum pname, glint param) ]
		- glVertexBlendEnvfATI [ void VertexBlendEnvf(enum pname, glfloat param) ]
WGL_ATI_pixel_format_float [ source: ATI\WGL_ATI_pixel_format_float.txt ]
	- Strings = [ WGL_ATI_pixel_format_float ]
ATI_render_texture_rectangle [ source: ATI\WGL_ATI_render_texture_rectangle.txt ]
	- Strings = [ WGL_ATI_render_texture_rectangle ]
DMP_program_binary [ source: DMP\DMP_program_binary.txt ]
	- Strings = [ GL_DMP_program_binary ]
DMP_shader_binary [ source: DMP\DMP_shader_binary.txt ]
	- Strings = [ GL_DMP_shader_binary ]
EXT_422_pixels [ source: EXT\EXT_422_pixels.txt ]
	- Strings = [ GL_EXT_422_pixels ]
EXT_abgr [ source: EXT\EXT_abgr.txt ]
	- Strings = [ GL_EXT_abgr ]
EXT_base_instance [ source: EXT\EXT_base_instance.txt ]
	- Strings = [ GL_EXT_base_instance ]
	- Funcs:
		- glDrawArraysInstancedBaseInstanceEXT [ void DrawArraysInstancedBaseInstanceEXT(enum mode, int first, sizei count, sizei instancecount, uint baseinstance) ]
		- glDrawElementsInstancedBaseInstanceEXT [ void DrawElementsInstancedBaseInstanceEXT(enum mode, sizei count, enum type, const void *indices, sizei instancecount, uint baseinstance) ]
		- glDrawElementsInstancedBaseVertexBaseInstanceEXT [ void DrawElementsInstancedBaseVertexBaseInstanceEXT(enum mode, sizei count, enum type, const void *indices, sizei instancecount, int basevertex, uint baseinstance) ]
EXT_bgra [ source: EXT\EXT_bgra.txt ]
	- Strings = [ GL_EXT_bgra ]
EXT_bindable_uniform [ source: EXT\EXT_bindable_uniform.txt ]
	- Strings = [ GL_EXT_bindable_uniform ]
	- Funcs:
		- glUniformBufferEXT [ void UniformBufferEXT(uint program, int location, uint buffer) ]
		- glGetUniformBufferSizeEXT [ int GetUniformBufferSizeEXT(uint program, int location) ]
		- glGetUniformOffsetEXT [ intptr GetUniformOffsetEXT(uint program, int location) ]
EXT_blend_color [ source: EXT\EXT_blend_color.txt ]
	- Strings = [ GL_EXT_blend_color ]
	- Funcs:
		- glBlendColorEXT [ void BlendColorEXT(clampf red, clampf green, clampf blue, clampf alpha) ]
EXT_blend_equation_separate [ source: EXT\EXT_blend_equation_separate.txt ]
	- Strings = [ GL_EXT_blend_equation_separate ]
	- Funcs:
		- glBlendEquationSeparateEXT [ void BlendEquationSeparateEXT(enum modeRGB, enum modeAlpha) ]
EXT_blend_func_extended [ source: EXT\EXT_blend_func_extended.txt ]
	- Strings = [ GL_EXT_blend_func_extended ]
	- Funcs:
		- glBindFragDataLocationIndexedEXT [ void BindFragDataLocationIndexedEXT(uint program, uint colorNumber, uint index, const char * name) ]
		- glGetFragDataIndexEXT [ int GetFragDataIndexEXT(uint program, const char * name) ]
		- glBindFragDataLocationEXT [ void BindFragDataLocationEXT(uint program, uint colorNumber, const char * name) ]
		- glGetProgramResourceLocationIndexEXT [ int GetProgramResourceLocationIndexEXT(uint program, enum programInterface, const char *name) ]
EXT_blend_func_separate [ source: EXT\EXT_blend_func_separate.txt ]
	- Strings = [ GL_EXT_blend_func_separate ]
	- Funcs:
		- glBlendFuncSeparateEXT [ void BlendFuncSeparateEXT(enum sfactorRGB, enum dfactorRGB, enum sfactorAlpha, enum dfactorAlpha) ]
EXT_blend_logic_op [ source: EXT\EXT_blend_logic_op.txt ]
	- Strings = [ GL_EXT_blend_logic_op ]
EXT_blend_minmax [ source: EXT\EXT_blend_minmax.txt ]
	- Strings = [ GL_EXT_blend_minmax ]
	- Funcs:
		- glBlendEquationEXT [ void BlendEquationEXT(enum mode) ]
EXT_blend_subtract [ source: EXT\EXT_blend_subtract.txt ]
	- Strings = [ GL_EXT_blend_subtract ]
EXT_buffer_storage [ source: EXT\EXT_buffer_storage.txt ]
	- Strings = [ GL_EXT_buffer_storage ]
	- Funcs:
		- glBufferStorageEXT [ void BufferStorageEXT(enum target, sizeiptr size, const void * data, bitfield flags) ]
		- glNamedBufferStorageEXT [ void NamedBufferStorageEXT(uint buffer, sizeiptr size, const void * data, bitfield flags) ]
EXT_clear_texture [ source: EXT\EXT_clear_texture.txt ]
	- Strings = [ GL_EXT_clear_texture ]
	- Funcs:
		- glClearTexImageEXT [ void ClearTexImageEXT(uint texture, int level, enum format, enum type, const void * data) ]
		- glClearTexSubImageEXT [ void ClearTexSubImageEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void * data) ]
EXT_clip_control [ source: EXT\EXT_clip_control.txt ]
	- Strings = [ GL_EXT_clip_control ]
	- Funcs:
		- glClipControlEXT [ void ClipControlEXT(enum origin, enum depth) ]
EXT_clip_cull_distance [ source: EXT\EXT_clip_cull_distance.txt ]
	- Strings = [ GL_EXT_clip_cull_distance ]
EXT_clip_volume_hint [ source: EXT\EXT_clip_volume_hint.txt ]
	- Strings = [ GL_EXT_clip_volume_hint ]
EXT_cmyka [ source: EXT\EXT_cmyka.txt ]
	- Strings = [ GL_EXT_cmyka ]
EXT_color_buffer_float [ source: EXT\EXT_color_buffer_float.txt ]
	- Strings = [ GL_EXT_color_buffer_float ]
EXT_color_buffer_half_float [ source: EXT\EXT_color_buffer_half_float.txt ]
	- Strings = [ GL_EXT_color_buffer_half_float ]
EXT_color_subtable [ source: EXT\EXT_color_subtable.txt ]
	- Strings = [ GL_EXT_color_subtable ]
	- Funcs:
		- glColorSubTableEXT [ void ColorSubTableEXT( enum target, sizei start, sizei count, enum format, enum type, const void *data) ]
		- glCopyColorSubTableEXT [ void CopyColorSubTableEXT(enum target, sizei start, int x, int y, sizei width) ]
EXT_compiled_vertex_array [ UNDONE_SPECsource: EXT\EXT_compiled_vertex_array.txt ]
	- Strings = [ GL_EXT_compiled_vertex_array ]
	- Funcs:
		- glLockArraysEXT [ void LockArraysEXT (int first, sizei count) ]
		- glUnlockArraysEXT [ void UnlockArraysEXT (void) ]
EXT_compressed_ETC1_RGB8_sub_texture [ source: EXT\EXT_compressed_ETC1_RGB8_sub_texture.txt ]
	- Strings = [ GL_EXT_compressed_ETC1_RGB8_sub_texture ]
EXT_conservative_depth [ source: EXT\EXT_conservative_depth.txt ]
	- Strings = [ GL_EXT_conservative_depth ]
EXT_convolution [ source: EXT\EXT_convolution.txt ]
	- Strings = [ GL_EXT_convolution ]
	- Funcs:
		- glConvolutionFilter1DEXT [ void ConvolutionFilter1DEXT(enum target, enum internalformat, sizei width, enum format, enum type, const void* image) ]
		- glConvolutionFilter2DEXT [ void ConvolutionFilter2DEXT(enum target, enum internalformat, sizei width, sizei height, enum format, enum type, const void* image) ]
		- glCopyConvolutionFilter1DEXT [ void CopyConvolutionFilter1DEXT(enum target, enum internalformat, int x, int y, sizei width) ]
		- glCopyConvolutionFilter2DEXT [ void CopyConvolutionFilter2DEXT(enum target, enum internalformat, int x, int y, sizei width, sizei height) ]
		- glGetConvolutionFilterEXT [ void GetConvolutionFilterEXT(enum target, enum format, enum type, void* image) ]
		- glSeparableFilter2DEXT [ void SeparableFilter2DEXT(enum target, enum internalformat, sizei width, sizei height, enum format, enum type, const void* row, const void* column) ]
		- glGetSeparableFilterEXT [ void GetSeparableFilterEXT(enum target, enum format, enum type, void* row, void* column, void* span) ]
		- glConvolutionParameteriEXT [ void ConvolutionParameteriEXT(enum target, enum pname, int param) ]
		- glConvolutionParameterivEXT [ void ConvolutionParameterivEXT(enum target, enum pname, const int* params) ]
		- glConvolutionParameterfEXT [ void ConvolutionParameterfEXT(enum target, enum pname, float param) ]
		- glConvolutionParameterfvEXT [ void ConvolutionParameterfvEXT(enum target, enum pname, const float* params) ]
		- glGetConvolutionParameterivEXT [ void GetConvolutionParameterivEXT(enum target, enum pname, int* params) ]
		- glGetConvolutionParameterfvEXT [ void GetConvolutionParameterfvEXT(enum target, enum pname, float* params) ]
EXT_coordinate_frame [ source: EXT\EXT_coordinate_frame.txt ]
	- Strings = [ GL_EXT_coordinate_frame ]
	- Funcs:
		- glTangent3bEXT [ void Tangent3bEXT(glbyte coords) ]
		- glTangent3sEXT [ void Tangent3sEXT(glshort coords) ]
		- glTangent3iEXT [ void Tangent3iEXT(glint coords) ]
		- glTangent3fEXT [ void Tangent3fEXT(glfloat coords) ]
		- glTangent3dEXT [ void Tangent3dEXT(gldouble coords) ]
		- glTangent3bvEXT [ void Tangent3bvEXT(glbyte * coords) ]
		- glTangent3svEXT [ void Tangent3svEXT(glshort * coords) ]
		- glTangent3ivEXT [ void Tangent3ivEXT(glint * coords) ]
		- glTangent3fvEXT [ void Tangent3fvEXT(glfloat * coords) ]
		- glTangent3dvEXT [ void Tangent3dvEXT(gldouble * coords) ]
		- glBinormal3bEXT [ void Binormal3bEXT(glbyte coords) ]
		- glBinormal3sEXT [ void Binormal3sEXT(glshort coords) ]
		- glBinormal3iEXT [ void Binormal3iEXT(glint coords) ]
		- glBinormal3fEXT [ void Binormal3fEXT(glfloat coords) ]
		- glBinormal3dEXT [ void Binormal3dEXT(gldouble coords) ]
		- glBinormal3bvEXT [ void Binormal3bvEXT(glbyte * coords) ]
		- glBinormal3svEXT [ void Binormal3svEXT(glshort * coords) ]
		- glBinormal3ivEXT [ void Binormal3ivEXT(glint * coords) ]
		- glBinormal3fvEXT [ void Binormal3fvEXT(glfloat * coords) ]
		- glBinormal3dvEXT [ void Binormal3dvEXT(gldouble * coords) ]
		- glTangentPointerEXT [ void TangentPointerEXT(enum type, sizei stride, void *pointer) ]
		- glBinormalPointerEXT [ void BinormalPointerEXT(enum type, sizei stride, void *pointer) ]
EXT_copy_image [ source: EXT\EXT_copy_image.txt ]
	- Strings = [ GL_EXT_copy_image ]
	- Funcs:
		- glCopyImageSubDataEXT [ void CopyImageSubDataEXT( uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei srcWidth, sizei srcHeight, sizei srcDepth) ]
EXT_copy_texture [ source: EXT\EXT_copy_texture.txt ]
	- Strings = [ GL_EXT_copy_texture ]
	- Funcs:
		- glCopyTexImage1DEXT [ void CopyTexImage1DEXT(enum target, int level, enum internalformat, int x, int y, sizei width, int border) ]
		- glCopyTexImage2DEXT [ void CopyTexImage2DEXT(enum target, int level, enum internalformat, int x, int y, sizei width, sizei height, int border) ]
		- glCopyTexSubImage1DEXT [ void CopyTexSubImage1DEXT(enum target, int level, int xoffset, int x, int y, sizei width) ]
		- glCopyTexSubImage2DEXT [ void CopyTexSubImage2DEXT(enum target, int level, int xoffset, int yoffset, int x, int y, sizei width, sizei height) ]
		- glCopyTexSubImage3DEXT [ void CopyTexSubImage3DEXT(enum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
EXT_cull_vertex [ UNDONE_SPECsource: EXT\EXT_cull_vertex.txt ]
	- Strings = [ GL_EXT_cull_vertex ]
	- Funcs:
		- glCullParameterfvEXT [ void CullParameterfvEXT (enum pname, float *params) ]
		- glCullParameterdvEXT [ void CullParameterdvEXT (enum pname, double *params) ]
EXT_debug_label [ source: EXT\EXT_debug_label.txt ]
	- Strings = [ GL_EXT_debug_label ]
	- Funcs:
		- glLabelObjectEXT [ void LabelObjectEXT(enum type, uint object, sizei length, const char *label) ]
		- glGetObjectLabelEXT [ void GetObjectLabelEXT(enum type, uint object, sizei bufSize, sizei *length, char *label) ]
EXT_debug_marker [ source: EXT\EXT_debug_marker.txt ]
	- Strings = [ GL_EXT_debug_marker ]
	- Funcs:
		- glInsertEventMarkerEXT [ void InsertEventMarkerEXT(sizei length, const char *marker) ]
		- glPushGroupMarkerEXT [ void PushGroupMarkerEXT(sizei length, const char *marker) ]
		- glPopGroupMarkerEXT [ void PopGroupMarkerEXT() ]
EXT_depth_bounds_test [ source: EXT\EXT_depth_bounds_test.txt ]
	- Strings = [ GL_EXT_depth_bounds_test ]
	- Funcs:
		- glDepthBoundsEXT [ void DepthBoundsEXT(clampd zmin, clampd zmax) ]
EXT_depth_clamp [ source: EXT\EXT_depth_clamp.txt ]
	- Strings = [ GL_EXT_depth_clamp ]
EXT_direct_state_access [ source: EXT\EXT_direct_state_access.txt ]
	- Strings = [ GL_EXT_direct_state_access ]
	- Funcs:
		- glClientAttribDefaultEXT [ void ClientAttribDefaultEXT(bitfield mask) ]
		- glPushClientAttribDefaultEXT [ void PushClientAttribDefaultEXT(bitfield mask) ]
		- glMatrixLoadfEXT [ void MatrixLoadfEXT(enum matrixMode, const float *m) ]
		- glMatrixLoaddEXT [ void MatrixLoaddEXT(enum matrixMode, const double *m) ]
		- glMatrixMultfEXT [ void MatrixMultfEXT(enum matrixMode, const float *m) ]
		- glMatrixMultdEXT [ void MatrixMultdEXT(enum matrixMode, const double *m) ]
		- glMatrixLoadIdentityEXT [ void MatrixLoadIdentityEXT(enum matrixMode) ]
		- glMatrixRotatefEXT [ void MatrixRotatefEXT(enum matrixMode, float angle, float x, float y, float z) ]
		- glMatrixRotatedEXT [ void MatrixRotatedEXT(enum matrixMode, double angle, double x, double y, double z) ]
		- glMatrixScalefEXT [ void MatrixScalefEXT(enum matrixMode, float x, float y, float z) ]
		- glMatrixScaledEXT [ void MatrixScaledEXT(enum matrixMode, double x, double y, double z) ]
		- glMatrixTranslatefEXT [ void MatrixTranslatefEXT(enum matrixMode, float x, float y, float z) ]
		- glMatrixTranslatedEXT [ void MatrixTranslatedEXT(enum matrixMode, double x, double y, double z) ]
		- glMatrixOrthoEXT [ void MatrixOrthoEXT(enum matrixMode, double l, double r, double b, double t, double n, double f) ]
		- glMatrixFrustumEXT [ void MatrixFrustumEXT(enum matrixMode, double l, double r, double b, double t, double n, double f) ]
		- glMatrixPushEXT [ void MatrixPushEXT(enum matrixMode) ]
		- glMatrixPopEXT [ void MatrixPopEXT(enum matrixMode) ]
		- glTextureParameteriEXT [ void TextureParameteriEXT(uint texture, enum target, enum pname, int param) ]
		- glTextureParameterivEXT [ void TextureParameterivEXT(uint texture, enum target, enum pname, const int *param) ]
		- glTextureParameterfEXT [ void TextureParameterfEXT(uint texture, enum target, enum pname, float param) ]
		- glTextureParameterfvEXT [ void TextureParameterfvEXT(uint texture, enum target, enum pname, const float *param) ]
		- glTextureImage1DEXT [ void TextureImage1DEXT(uint texture, enum target, int level, int internalformat, sizei width, int border, enum format, enum type, const void *pixels) ]
		- glTextureImage2DEXT [ void TextureImage2DEXT(uint texture, enum target, int level, int internalformat, sizei width, sizei height, int border, enum format, enum type, const void *pixels) ]
		- glTextureSubImage1DEXT [ void TextureSubImage1DEXT(uint texture, enum target, int level, int xoffset, sizei width, enum format, enum type, const void *pixels) ]
		- glTextureSubImage2DEXT [ void TextureSubImage2DEXT(uint texture, enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, enum type, const void *pixels) ]
		- glCopyTextureImage1DEXT [ void CopyTextureImage1DEXT(uint texture, enum target, int level, enum internalformat, int x, int y, sizei width, int border) ]
		- glCopyTextureImage2DEXT [ void CopyTextureImage2DEXT(uint texture, enum target, int level, enum internalformat, int x, int y, sizei width, sizei height, int border) ]
		- glCopyTextureSubImage1DEXT [ void CopyTextureSubImage1DEXT(uint texture, enum target, int level, int xoffset, int x, int y, sizei width) ]
		- glCopyTextureSubImage2DEXT [ void CopyTextureSubImage2DEXT(uint texture, enum target, int level, int xoffset, int yoffset, int x, int y, sizei width, sizei height) ]
		- glGetTextureImageEXT [ void GetTextureImageEXT(uint texture, enum target, int level, enum format, enum type, void *pixels) ]
		- glGetTextureParameterfvEXT [ void GetTextureParameterfvEXT(uint texture, enum target, enum pname, float *params) ]
		- glGetTextureParameterivEXT [ void GetTextureParameterivEXT(uint texture, enum target, enum pname, int *params) ]
		- glGetTextureLevelParameterfvEXT [ void GetTextureLevelParameterfvEXT(uint texture, enum target, int level, enum pname, float *params) ]
		- glGetTextureLevelParameterivEXT [ void GetTextureLevelParameterivEXT(uint texture, enum target, int level, enum pname, int *params) ]
		- glTextureImage3DEXT [ void TextureImage3DEXT(uint texture, enum target, int level, int internalformat, sizei width, sizei height, sizei depth, int border, enum format, enum type, const void *pixels) ]
		- glTextureSubImage3DEXT [ void TextureSubImage3DEXT(uint texture, enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void *pixels) ]
		- glCopyTextureSubImage3DEXT [ void CopyTextureSubImage3DEXT(uint texture, enum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
		- glBindMultiTextureEXT [ void BindMultiTextureEXT(enum texunit, enum target, uint texture) ]
		- glMultiTexCoordPointerEXT [ void MultiTexCoordPointerEXT(enum texunit, int size, enum type, sizei stride, const void *pointer) ]
		- glMultiTexEnvfEXT [ void MultiTexEnvfEXT(enum texunit, enum target, enum pname, float param) ]
		- glMultiTexEnvfvEXT [ void MultiTexEnvfvEXT(enum texunit, enum target, enum pname, const float *params) ]
		- glMultiTexEnviEXT [ void MultiTexEnviEXT(enum texunit, enum target, enum pname, int param) ]
		- glMultiTexEnvivEXT [ void MultiTexEnvivEXT(enum texunit, enum target, enum pname, const int *params) ]
		- glMultiTexGendEXT [ void MultiTexGendEXT(enum texunit, enum coord, enum pname, double param) ]
		- glMultiTexGendvEXT [ void MultiTexGendvEXT(enum texunit, enum coord, enum pname, const double *params) ]
		- glMultiTexGenfEXT [ void MultiTexGenfEXT(enum texunit, enum coord, enum pname, float param) ]
		- glMultiTexGenfvEXT [ void MultiTexGenfvEXT(enum texunit, enum coord, enum pname, const float *params) ]
		- glMultiTexGeniEXT [ void MultiTexGeniEXT(enum texunit, enum coord, enum pname, int param) ]
		- glMultiTexGenivEXT [ void MultiTexGenivEXT(enum texunit, enum coord, enum pname, const int *params) ]
		- glGetMultiTexEnvfvEXT [ void GetMultiTexEnvfvEXT(enum texunit, enum target, enum pname, float *params) ]
		- glGetMultiTexEnvivEXT [ void GetMultiTexEnvivEXT(enum texunit, enum target, enum pname, int *params) ]
		- glGetMultiTexGendvEXT [ void GetMultiTexGendvEXT(enum texunit, enum coord, enum pname, double *params) ]
		- glGetMultiTexGenfvEXT [ void GetMultiTexGenfvEXT(enum texunit, enum coord, enum pname, float *params) ]
		- glGetMultiTexGenivEXT [ void GetMultiTexGenivEXT(enum texunit, enum coord, enum pname, int *params) ]
		- glMultiTexParameteriEXT [ void MultiTexParameteriEXT(enum texunit, enum target, enum pname, int param) ]
		- glMultiTexParameterivEXT [ void MultiTexParameterivEXT(enum texunit, enum target, enum pname, const int *param) ]
		- glMultiTexParameterfEXT [ void MultiTexParameterfEXT(enum texunit, enum target, enum pname, float param) ]
		- glMultiTexParameterfvEXT [ void MultiTexParameterfvEXT(enum texunit, enum target, enum pname, const float *param) ]
		- glMultiTexImage1DEXT [ void MultiTexImage1DEXT(enum texunit, enum target, int level, int internalformat, sizei width, int border, enum format, enum type, const void *pixels) ]
		- glMultiTexImage2DEXT [ void MultiTexImage2DEXT(enum texunit, enum target, int level, int internalformat, sizei width, sizei height, int border, enum format, enum type, const void *pixels) ]
		- glMultiTexSubImage1DEXT [ void MultiTexSubImage1DEXT(enum texunit, enum target, int level, int xoffset, sizei width, enum format, enum type, const void *pixels) ]
		- glMultiTexSubImage2DEXT [ void MultiTexSubImage2DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, enum type, const void *pixels) ]
		- glCopyMultiTexImage1DEXT [ void CopyMultiTexImage1DEXT(enum texunit, enum target, int level, enum internalformat, int x, int y, sizei width, int border) ]
		- glCopyMultiTexImage2DEXT [ void CopyMultiTexImage2DEXT(enum texunit, enum target, int level, enum internalformat, int x, int y, sizei width, sizei height, int border) ]
		- glCopyMultiTexSubImage1DEXT [ void CopyMultiTexSubImage1DEXT(enum texunit, enum target, int level, int xoffset, int x, int y, sizei width) ]
		- glCopyMultiTexSubImage2DEXT [ void CopyMultiTexSubImage2DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, int x, int y, sizei width, sizei height) ]
		- glGetMultiTexImageEXT [ void GetMultiTexImageEXT(enum texunit, enum target, int level, enum format, enum type, void *pixels) ]
		- glGetMultiTexParameterfvEXT [ void GetMultiTexParameterfvEXT(enum texunit, enum target, enum pname, float *params) ]
		- glGetMultiTexParameterivEXT [ void GetMultiTexParameterivEXT(enum texunit, enum target, enum pname, int *params) ]
		- glGetMultiTexLevelParameterfvEXT [ void GetMultiTexLevelParameterfvEXT(enum texunit, enum target, int level, enum pname, float *params) ]
		- glGetMultiTexLevelParameterivEXT [ void GetMultiTexLevelParameterivEXT(enum texunit, enum target, int level, enum pname, int *params) ]
		- glMultiTexImage3DEXT [ void MultiTexImage3DEXT(enum texunit, enum target, int level, int internalformat, sizei width, sizei height, sizei depth, int border, enum format, enum type, const void *pixels) ]
		- glMultiTexSubImage3DEXT [ void MultiTexSubImage3DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void *pixels) ]
		- glCopyMultiTexSubImage3DEXT [ void CopyMultiTexSubImage3DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
		- glEnableClientStateIndexedEXT [ void EnableClientStateIndexedEXT(enum array, uint index) ]
		- glDisableClientStateIndexedEXT [ void DisableClientStateIndexedEXT(enum array, uint index) ]
		- glEnableClientStateiEXT [ void EnableClientStateiEXT(enum array, uint index) ]
		- glDisableClientStateiEXT [ void DisableClientStateiEXT(enum array, uint index) ]
		- glGetFloatIndexedvEXT [ void GetFloatIndexedvEXT(enum target, uint index, float *params) ]
		- glGetDoubleIndexedvEXT [ void GetDoubleIndexedvEXT(enum target, uint index, double *params) ]
		- glGetPointerIndexedvEXT [ void GetPointerIndexedvEXT(enum target, uint index, void **params) ]
		- glGetFloati_vEXT [ void GetFloati_vEXT(enum pname, uint index, float *params) ]
		- glGetDoublei_vEXT [ void GetDoublei_vEXT(enum pname, uint index, double *params) ]
		- glGetPointeri_vEXT [ void GetPointeri_vEXT(enum pname, uint index, void **params) ]
		- glEnableIndexedEXT [ void EnableIndexedEXT(enum cap, uint index) ]
		- glDisableIndexedEXT [ void DisableIndexedEXT(enum cap, uint index) ]
		- glIsEnabledIndexedEXT [ boolean IsEnabledIndexedEXT(enum target, uint index) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum target, uint index, int *params) ]
		- glGetBooleanIndexedvEXT [ void GetBooleanIndexedvEXT(enum target, uint index, boolean *params) ]
		- glNamedProgramStringEXT [ void NamedProgramStringEXT(uint program, enum target, enum format, sizei len, const void *string) ]
		- glNamedProgramLocalParameter4dEXT [ void NamedProgramLocalParameter4dEXT(uint program, enum target, uint index, double x, double y, double z, double w) ]
		- glNamedProgramLocalParameter4dvEXT [ void NamedProgramLocalParameter4dvEXT(uint program, enum target, uint index, const double *params) ]
		- glNamedProgramLocalParameter4fEXT [ void NamedProgramLocalParameter4fEXT(uint program, enum target, uint index, float x, float y, float z, float w) ]
		- glNamedProgramLocalParameter4fvEXT [ void NamedProgramLocalParameter4fvEXT(uint program, enum target, uint index, const float *params) ]
		- glGetNamedProgramLocalParameterdvEXT [ void GetNamedProgramLocalParameterdvEXT(uint program, enum target, uint index, double *params) ]
		- glGetNamedProgramLocalParameterfvEXT [ void GetNamedProgramLocalParameterfvEXT(uint program, enum target, uint index, float *params) ]
		- glGetNamedProgramivEXT [ void GetNamedProgramivEXT(uint program, enum target, enum pname, int *params) ]
		- glGetNamedProgramStringEXT [ void GetNamedProgramStringEXT(uint program, enum target, enum pname, void *string) ]
		- glCompressedTextureImage3DEXT [ void CompressedTextureImage3DEXT(uint texture, enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, sizei imageSize, const void *data) ]
		- glCompressedTextureImage2DEXT [ void CompressedTextureImage2DEXT(uint texture, enum target, int level, enum internalformat, sizei width, sizei height, int border, sizei imageSize, const void *data) ]
		- glCompressedTextureImage1DEXT [ void CompressedTextureImage1DEXT(uint texture, enum target, int level, enum internalformat, sizei width, int border, sizei imageSize, const void *data) ]
		- glCompressedTextureSubImage3DEXT [ void CompressedTextureSubImage3DEXT(uint texture, enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glCompressedTextureSubImage2DEXT [ void CompressedTextureSubImage2DEXT(uint texture, enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, sizei imageSize, const void *data) ]
		- glCompressedTextureSubImage1DEXT [ void CompressedTextureSubImage1DEXT(uint texture, enum target, int level, int xoffset, sizei width, enum format, sizei imageSize, const void *data) ]
		- glGetCompressedTextureImageEXT [ void GetCompressedTextureImageEXT(uint texture, enum target, int level, void *img) ]
		- glCompressedMultiTexImage3DEXT [ void CompressedMultiTexImage3DEXT(enum texunit, enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, sizei imageSize, const void *data) ]
		- glCompressedMultiTexImage2DEXT [ void CompressedMultiTexImage2DEXT(enum texunit, enum target, int level, enum internalformat, sizei width, sizei height, int border, sizei imageSize, const void *data) ]
		- glCompressedMultiTexImage1DEXT [ void CompressedMultiTexImage1DEXT(enum texunit, enum target, int level, enum internalformat, sizei width, int border, sizei imageSize, const void *data) ]
		- glCompressedMultiTexSubImage3DEXT [ void CompressedMultiTexSubImage3DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glCompressedMultiTexSubImage2DEXT [ void CompressedMultiTexSubImage2DEXT(enum texunit, enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, sizei imageSize, const void *data) ]
		- glCompressedMultiTexSubImage1DEXT [ void CompressedMultiTexSubImage1DEXT(enum texunit, enum target, int level, int xoffset, sizei width, enum format, sizei imageSize, const void *data) ]
		- glGetCompressedMultiTexImageEXT [ void GetCompressedMultiTexImageEXT(enum texunit, enum target, int level, void *img) ]
		- glMatrixLoadTransposefEXT [ void MatrixLoadTransposefEXT(enum matrixMode, const float *m) ]
		- glMatrixLoadTransposedEXT [ void MatrixLoadTransposedEXT(enum matrixMode, const double *m) ]
		- glMatrixMultTransposefEXT [ void MatrixMultTransposefEXT(enum matrixMode, const float *m) ]
		- glMatrixMultTransposedEXT [ void MatrixMultTransposedEXT(enum matrixMode, const double *m) ]
		- glNamedBufferDataEXT [ void NamedBufferDataEXT(uint buffer, sizeiptr size, const void *data, enum usage) ]
		- glNamedBufferSubDataEXT [ void NamedBufferSubDataEXT(uint buffer, intptr offset, sizeiptr size, const void *data) ]
		- glMapNamedBufferEXT [ void* MapNamedBufferEXT(uint buffer, enum access) ]
		- glUnmapNamedBufferEXT [ boolean UnmapNamedBufferEXT(uint buffer) ]
		- glGetNamedBufferParameterivEXT [ void GetNamedBufferParameterivEXT(uint buffer, enum pname, int *params) ]
		- glGetNamedBufferPointervEXT [ void GetNamedBufferPointervEXT(uint buffer, enum pname, void* *params) ]
		- glGetNamedBufferSubDataEXT [ void GetNamedBufferSubDataEXT(uint buffer, intptr offset, sizeiptr size, void *data) ]
		- glProgramUniform1fEXT [ void ProgramUniform1fEXT(uint program, int location, float v0) ]
		- glProgramUniform2fEXT [ void ProgramUniform2fEXT(uint program, int location, float v0, float v1) ]
		- glProgramUniform3fEXT [ void ProgramUniform3fEXT(uint program, int location, float v0, float v1, float v2) ]
		- glProgramUniform4fEXT [ void ProgramUniform4fEXT(uint program, int location, float v0, float v1, float v2, float v3) ]
		- glProgramUniform1iEXT [ void ProgramUniform1iEXT(uint program, int location, int v0) ]
		- glProgramUniform2iEXT [ void ProgramUniform2iEXT(uint program, int location, int v0, int v1) ]
		- glProgramUniform3iEXT [ void ProgramUniform3iEXT(uint program, int location, int v0, int v1, int v2) ]
		- glProgramUniform4iEXT [ void ProgramUniform4iEXT(uint program, int location, int v0, int v1, int v2, int v3) ]
		- glProgramUniform1fvEXT [ void ProgramUniform1fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform2fvEXT [ void ProgramUniform2fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform3fvEXT [ void ProgramUniform3fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform4fvEXT [ void ProgramUniform4fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform1ivEXT [ void ProgramUniform1ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform2ivEXT [ void ProgramUniform2ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform3ivEXT [ void ProgramUniform3ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform4ivEXT [ void ProgramUniform4ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniformMatrix2fvEXT [ void ProgramUniformMatrix2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3fvEXT [ void ProgramUniformMatrix3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4fvEXT [ void ProgramUniformMatrix4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x3fvEXT [ void ProgramUniformMatrix2x3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x2fvEXT [ void ProgramUniformMatrix3x2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x4fvEXT [ void ProgramUniformMatrix2x4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x2fvEXT [ void ProgramUniformMatrix4x2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x4fvEXT [ void ProgramUniformMatrix3x4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x3fvEXT [ void ProgramUniformMatrix4x3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glTextureBufferEXT [ void TextureBufferEXT(uint texture, enum target, enum internalformat, uint buffer) ]
		- glMultiTexBufferEXT [ void MultiTexBufferEXT(enum texunit, enum target, enum internalformat, uint buffer) ]
		- glTextureParameterIivEXT [ void TextureParameterIivEXT(uint texture, enum target, enum pname, const int *params) ]
		- glTextureParameterIuivEXT [ void TextureParameterIuivEXT(uint texture, enum target, enum pname, const uint *params) ]
		- glGetTextureParameterIivEXT [ void GetTextureParameterIivEXT(uint texture, enum target, enum pname, int *params) ]
		- glGetTextureParameterIuivEXT [ void GetTextureParameterIuivEXT(uint texture, enum target, enum pname, uint *params) ]
		- glMultiTexParameterIivEXT [ void MultiTexParameterIivEXT(enum texunit, enum target, enum pname, const int *params) ]
		- glMultiTexParameterIuivEXT [ void MultiTexParameterIuivEXT(enum texunit, enum target, enum pname, const uint *params) ]
		- glGetMultiTexParameterIivEXT [ void GetMultiTexParameterIivEXT(enum texunit, enum target, enum pname, int *params) ]
		- glGetMultiTexParameterIuivEXT [ void GetMultiTexParameterIuivEXT(enum texunit, enum target, enum pname, uint *params) ]
		- glProgramUniform1uiEXT [ void ProgramUniform1uiEXT(uint program, int location, uint v0) ]
		- glProgramUniform2uiEXT [ void ProgramUniform2uiEXT(uint program, int location, uint v0, uint v1) ]
		- glProgramUniform3uiEXT [ void ProgramUniform3uiEXT(uint program, int location, uint v0, uint v1, uint v2) ]
		- glProgramUniform4uiEXT [ void ProgramUniform4uiEXT(uint program, int location, uint v0, uint v1, uint v2, uint v3) ]
		- glProgramUniform1uivEXT [ void ProgramUniform1uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform2uivEXT [ void ProgramUniform2uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform3uivEXT [ void ProgramUniform3uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform4uivEXT [ void ProgramUniform4uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glNamedProgramLocalParameters4fvEXT [ void NamedProgramLocalParameters4fvEXT(uint program, enum target, uint index, sizei count, const float *params) ]
		- glNamedProgramLocalParameterI4iEXT [ void NamedProgramLocalParameterI4iEXT(uint program, enum target, uint index, int x, int y, int z, int w) ]
		- glNamedProgramLocalParameterI4ivEXT [ void NamedProgramLocalParameterI4ivEXT(uint program, enum target, uint index, const int *params) ]
		- glNamedProgramLocalParametersI4ivEXT [ void NamedProgramLocalParametersI4ivEXT(uint program, enum target, uint index, sizei count, const int *params) ]
		- glNamedProgramLocalParameterI4uiEXT [ void NamedProgramLocalParameterI4uiEXT(uint program, enum target, uint index, uint x, uint y, uint z, uint w) ]
		- glNamedProgramLocalParameterI4uivEXT [ void NamedProgramLocalParameterI4uivEXT(uint program, enum target, uint index, const uint *params) ]
		- glNamedProgramLocalParametersI4uivEXT [ void NamedProgramLocalParametersI4uivEXT(uint program, enum target, uint index, sizei count, const uint *params) ]
		- glGetNamedProgramLocalParameterIivEXT [ void GetNamedProgramLocalParameterIivEXT(uint program, enum target, uint index, int *params) ]
		- glGetNamedProgramLocalParameterIuivEXT [ void GetNamedProgramLocalParameterIuivEXT(uint program, enum target, uint index, uint *params) ]
		- glNamedRenderbufferStorageEXT [ void NamedRenderbufferStorageEXT(uint renderbuffer, enum internalformat, sizei width, sizei height) ]
		- glGetNamedRenderbufferParameterivEXT [ void GetNamedRenderbufferParameterivEXT(uint renderbuffer, enum pname, int *params) ]
		- glNamedRenderbufferStorageMultisampleEXT [ void NamedRenderbufferStorageMultisampleEXT(uint renderbuffer, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glNamedRenderbufferStorageMultisampleCoverageEXT [ void NamedRenderbufferStorageMultisampleCoverageEXT(uint renderbuffer, sizei coverageSamples, sizei colorSamples, enum internalformat, sizei width, sizei height) ]
		- glCheckNamedFramebufferStatusEXT [ enum CheckNamedFramebufferStatusEXT(uint framebuffer, enum target) ]
		- glNamedFramebufferTexture1DEXT [ void NamedFramebufferTexture1DEXT(uint framebuffer, enum attachment, enum textarget, uint texture, int level) ]
		- glNamedFramebufferTexture2DEXT [ void NamedFramebufferTexture2DEXT(uint framebuffer, enum attachment, enum textarget, uint texture, int level) ]
		- glNamedFramebufferTexture3DEXT [ void NamedFramebufferTexture3DEXT(uint framebuffer, enum attachment, enum textarget, uint texture, int level, int zoffset) ]
		- glNamedFramebufferRenderbufferEXT [ void NamedFramebufferRenderbufferEXT(uint framebuffer, enum attachment, enum renderbuffertarget, uint renderbuffer) ]
		- glGetNamedFramebufferAttachmentParameterivEXT [ void GetNamedFramebufferAttachmentParameterivEXT(uint framebuffer, enum attachment, enum pname, int *params) ]
		- glGenerateTextureMipmapEXT [ void GenerateTextureMipmapEXT(uint texture, enum target) ]
		- glGenerateMultiTexMipmapEXT [ void GenerateMultiTexMipmapEXT(enum texunit, enum target) ]
		- glFramebufferDrawBufferEXT [ void FramebufferDrawBufferEXT(uint framebuffer, enum mode) ]
		- glFramebufferDrawBuffersEXT [ void FramebufferDrawBuffersEXT(uint framebuffer, sizei n, const enum *bufs) ]
		- glFramebufferReadBufferEXT [ void FramebufferReadBufferEXT(uint framebuffer, enum mode) ]
		- glGetFramebufferParameterivEXT [ void GetFramebufferParameterivEXT(uint framebuffer, enum pname, int *param) ]
		- glNamedCopyBufferSubDataEXT [ void NamedCopyBufferSubDataEXT(uint readBuffer, uint writeBuffer, intptr readOffset, intptr writeOffset, sizeiptr size) ]
		- glNamedFramebufferTextureEXT [ void NamedFramebufferTextureEXT(uint framebuffer, enum attachment, uint texture, int level) ]
		- glNamedFramebufferTextureLayerEXT [ void NamedFramebufferTextureLayerEXT(uint framebuffer, enum attachment, uint texture, int level, int layer) ]
		- glNamedFramebufferTextureFaceEXT [ void NamedFramebufferTextureFaceEXT(uint framebuffer, enum attachment, uint texture, int level, enum face) ]
		- glTextureRenderbufferEXT [ void TextureRenderbufferEXT(uint texture, enum target, uint renderbuffer) ]
		- glMultiTexRenderbufferEXT [ void MultiTexRenderbufferEXT(enum texunit, enum target, uint renderbuffer) ]
		- glVertexArrayVertexOffsetEXT [ void VertexArrayVertexOffsetEXT(uint vaobj, uint buffer, int size, enum type, sizei stride, intptr offset) ]
		- glVertexArrayColorOffsetEXT [ void VertexArrayColorOffsetEXT(uint vaobj, uint buffer, int size, enum type, sizei stride, intptr offset) ]
		- glVertexArrayEdgeFlagOffsetEXT [ void VertexArrayEdgeFlagOffsetEXT(uint vaobj, uint buffer, sizei stride, intptr offset) ]
		- glVertexArrayIndexOffsetEXT [ void VertexArrayIndexOffsetEXT(uint vaobj, uint buffer, enum type, sizei stride, intptr offset) ]
		- glVertexArrayNormalOffsetEXT [ void VertexArrayNormalOffsetEXT(uint vaobj, uint buffer, enum type, sizei stride, intptr offset) ]
		- glVertexArrayTexCoordOffsetEXT [ void VertexArrayTexCoordOffsetEXT(uint vaobj, uint buffer, int size, enum type, sizei stride, intptr offset) ]
		- glVertexArrayMultiTexCoordOffsetEXT [ void VertexArrayMultiTexCoordOffsetEXT(uint vaobj, uint buffer, enum texunit, int size, enum type, sizei stride, intptr offset) ]
		- glVertexArrayFogCoordOffsetEXT [ void VertexArrayFogCoordOffsetEXT(uint vaobj, uint buffer, enum type, sizei stride, intptr offset) ]
		- glVertexArraySecondaryColorOffsetEXT [ void VertexArraySecondaryColorOffsetEXT(uint vaobj, uint buffer, int size, enum type, sizei stride, intptr offset) ]
		- glVertexArrayVertexAttribOffsetEXT [ void VertexArrayVertexAttribOffsetEXT(uint vaobj, uint buffer, uint index, int size, enum type, boolean normalized, sizei stride, intptr offset) ]
		- glVertexArrayVertexAttribIOffsetEXT [ void VertexArrayVertexAttribIOffsetEXT(uint vaobj, uint buffer, uint index, int size, enum type, sizei stride, intptr offset) ]
		- glEnableVertexArrayEXT [ void EnableVertexArrayEXT(uint vaobj, enum array) ]
		- glDisableVertexArrayEXT [ void DisableVertexArrayEXT(uint vaobj, enum array) ]
		- glEnableVertexArrayAttribEXT [ void EnableVertexArrayAttribEXT(uint vaobj, uint index) ]
		- glDisableVertexArrayAttribEXT [ void DisableVertexArrayAttribEXT(uint vaobj, uint index) ]
		- glGetVertexArrayIntegervEXT [ void GetVertexArrayIntegervEXT(uint vaobj, enum pname, int *param) ]
		- glGetVertexArrayPointervEXT [ void GetVertexArrayPointervEXT(uint vaobj, enum pname, void **param) ]
		- glGetVertexArrayIntegeri_vEXT [ void GetVertexArrayIntegeri_vEXT(uint vaobj, uint index, enum pname, int *param) ]
		- glGetVertexArrayPointeri_vEXT [ void GetVertexArrayPointeri_vEXT(uint vaobj, uint index, enum pname, void **param) ]
		- glMapNamedBufferRangeEXT [ void *MapNamedBufferRangeEXT(uint buffer, intptr offset, sizeiptr length, bitfield access) ]
		- glFlushMappedNamedBufferRangeEXT [ void FlushMappedNamedBufferRangeEXT(uint buffer, intptr offset, sizeiptr length) ]
EXT_discard_framebuffer [ source: EXT\EXT_discard_framebuffer.txt ]
	- Strings = [ GL_EXT_discard_framebuffer ]
	- Funcs:
		- glDiscardFramebufferEXT [ void DiscardFramebufferEXT(enum target, sizei numAttachments, const enum *attachments) ]
EXT_disjoint_timer_query [ source: EXT\EXT_disjoint_timer_query.txt ]
	- Strings = [ GL_EXT_disjoint_timer_query ]
	- Funcs:
		- glGenQueriesEXT [ void GenQueriesEXT(sizei n, uint *ids) ]
		- glDeleteQueriesEXT [ void DeleteQueriesEXT(sizei n, const uint *ids) ]
		- glIsQueryEXT [ boolean IsQueryEXT(uint id) ]
		- glBeginQueryEXT [ void BeginQueryEXT(enum target, uint id) ]
		- glEndQueryEXT [ void EndQueryEXT(enum target) ]
		- glQueryCounterEXT [ void QueryCounterEXT(uint id, enum target) ]
		- glGetQueryivEXT [ void GetQueryivEXT(enum target, enum pname, int *params) ]
		- glGetQueryObjectivEXT [ void GetQueryObjectivEXT(uint id, enum pname, int *params) ]
		- glGetQueryObjectuivEXT [ void GetQueryObjectuivEXT(uint id, enum pname, uint *params) ]
		- glGetQueryObjecti64vEXT [ void GetQueryObjecti64vEXT(uint id, enum pname, int64 *params) ]
		- glGetQueryObjectui64vEXT [ void GetQueryObjectui64vEXT(uint id, enum pname, uint64 *params) ]
		- glGetInteger64vEXT [ void GetInteger64vEXT(enum pname, int64 *data) ]
EXT_draw_buffers [ source: EXT\EXT_draw_buffers.txt ]
	- Strings = [ GL_EXT_draw_buffers ]
	- Funcs:
		- glDrawBuffersEXT [ void DrawBuffersEXT(sizei n, const enum *bufs) ]
EXT_draw_buffers2 [ source: EXT\EXT_draw_buffers2.txt ]
	- Strings = [ GL_EXT_draw_buffers2 ]
	- Funcs:
		- glColorMaskIndexedEXT [ void ColorMaskIndexedEXT(uint buf, boolean r, boolean g, boolean b, boolean a) ]
		- glGetBooleanIndexedvEXT [ void GetBooleanIndexedvEXT(enum value, uint index, boolean *data) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum value, uint index, int *data) ]
		- glEnableIndexedEXT [ void EnableIndexedEXT(enum target, uint index) ]
		- glDisableIndexedEXT [ void DisableIndexedEXT(enum target, uint index) ]
		- glIsEnabledIndexedEXT [ boolean IsEnabledIndexedEXT(enum target, uint index) ]
EXT_draw_buffers_indexed [ source: EXT\EXT_draw_buffers_indexed.txt ]
	- Strings = [ GL_EXT_draw_buffers_indexed ]
	- Funcs:
		- glEnableiEXT [ void EnableiEXT(enum target, uint index) ]
		- glDisableiEXT [ void DisableiEXT(enum target, uint index) ]
		- glBlendEquationiEXT [ void BlendEquationiEXT(uint buf, enum mode) ]
		- glBlendEquationSeparateiEXT [ void BlendEquationSeparateiEXT(uint buf, enum modeRGB, enum modeAlpha) ]
		- glBlendFunciEXT [ void BlendFunciEXT(uint buf, enum src, enum dst) ]
		- glBlendFuncSeparateiEXT [ void BlendFuncSeparateiEXT(uint buf, enum srcRGB, enum dstRGB, enum srcAlpha, enum dstAlpha) ]
		- glColorMaskiEXT [ void ColorMaskiEXT(uint buf, boolean r, boolean g, boolean b, boolean a) ]
		- glIsEnablediEXT [ boolean IsEnablediEXT(enum target, uint index) ]
EXT_draw_elements_base_vertex [ source: EXT\EXT_draw_elements_base_vertex.txt ]
	- Strings = [ GL_EXT_draw_elements_base_vertex ]
	- Funcs:
		- glDrawElementsBaseVertexEXT [ void DrawElementsBaseVertexEXT(enum mode, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawRangeElementsBaseVertexEXT [ void DrawRangeElementsBaseVertexEXT(enum mode, uint start, uint end, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawElementsInstancedBaseVertexEXT [ void DrawElementsInstancedBaseVertexEXT(enum mode, sizei count, enum type, const void *indices, sizei instancecount, int basevertex) ]
		- glMultiDrawElementsBaseVertexEXT [ void MultiDrawElementsBaseVertexEXT(enum mode, const sizei *count, enum type, const void * const *indices, sizei primcount, const int *basevertex) ]
EXT_draw_instanced [ source: EXT\EXT_draw_instanced.txt ]
	- Strings = [ GL_EXT_draw_instanced ]
	- Funcs:
		- glDrawArraysInstancedEXT [ void DrawArraysInstancedEXT(enum mode, int first, sizei count, sizei primcount) ]
		- glDrawElementsInstancedEXT [ void DrawElementsInstancedEXT(enum mode, sizei count, enum type, const void *indices, sizei primcount) ]
EXT_draw_range_elements [ source: EXT\EXT_draw_range_elements.txt ]
	- Strings = [ GL_EXT_draw_range_elements ]
EXT_draw_transform_feedback [ source: EXT\EXT_draw_transform_feedback.txt ]
	- Strings = [ GL_EXT_draw_transform_feedback ]
	- Funcs:
		- glDrawTransformFeedbackEXT [ void DrawTransformFeedbackEXT( enum mode, uint id ) ]
		- glDrawTransformFeedbackInstancedEXT [ void DrawTransformFeedbackInstancedEXT( enum mode, uint id, sizei instancecount ) ]
EXT_EGL_image_array [ source: EXT\EXT_EGL_image_array.txt ]
	- Strings = [ GL_EXT_EGL_image_array ]
EXT_EGL_image_external_wrap_modes [ source: EXT\EXT_EGL_image_external_wrap_modes.txt ]
	- Strings = [ GL_EXT_EGL_image_external_wrap_modes ]
EXT_EGL_image_storage [ source: EXT\EXT_EGL_image_storage.txt ]
	- Strings = [ GL_EXT_EGL_image_storage ]
	- Funcs:
		- glEGLImageTargetTexStorageEXT [ void EGLImageTargetTexStorageEXT(enum target, eglImageOES image, const int* attrib_list) ]
		- glEGLImageTargetTextureStorageEXT [ void EGLImageTargetTextureStorageEXT(uint texture, eglImageOES image, const int* attrib_list) ]
EXT_EGL_sync [ source: EXT\EXT_EGL_sync.txt ]
	- Strings = [ GL_EXT_EGL_sync ]
EXT_external_buffer [ source: EXT\EXT_external_buffer.txt ]
	- Strings = [ GL_EXT_external_buffer ]
	- Funcs:
		- glBufferStorageExternalEXT [ void BufferStorageExternalEXT(enum target, intptr offset, sizeiptr size, eglClientBufferEXT clientBuffer, bitfield flags) ]
		- glNamedBufferStorageExternalEXT [ void NamedBufferStorageExternalEXT(uint buffer, intptr offset, sizeiptr size, eglClientBufferEXT clientBuffer, bitfield flags) ]
EXT_external_objects [ source: EXT\EXT_external_objects.txt ]
	- Strings = [ GL_EXT_memory_object GL_EXT_semaphore ]
	- Funcs:
		- glGetUnsignedBytevEXT [ void GetUnsignedBytevEXT(enum pname, ubyte *data) ]
		- glGetUnsignedBytei_vEXT [ void GetUnsignedBytei_vEXT(enum target, uint index, ubyte *data) ]
		- glDeleteMemoryObjectsEXT [ void DeleteMemoryObjectsEXT(sizei n, const uint *memoryObjects) ]
		- glIsMemoryObjectEXT [ boolean IsMemoryObjectEXT(uint memoryObject) ]
		- glCreateMemoryObjectsEXT [ void CreateMemoryObjectsEXT(sizei n, uint *memoryObjects) ]
		- glMemoryObjectParameterivEXT [ void MemoryObjectParameterivEXT(uint memoryObject, enum pname, const int *params) ]
		- glGetMemoryObjectParameterivEXT [ void GetMemoryObjectParameterivEXT(uint memoryObject, enum pname, int *params) ]
		- glTexStorageMem2DEXT [ void TexStorageMem2DEXT(enum target, sizei levels, enum internalFormat, sizei width, sizei height, uint memory, uint64 offset) ]
		- glTexStorageMem2DMultisampleEXT [ void TexStorageMem2DMultisampleEXT(enum target, sizei samples, enum internalFormat, sizei width, sizei height, boolean fixedSampleLocations, uint memory, uint64 offset) ]
		- glTexStorageMem3DEXT [ void TexStorageMem3DEXT(enum target, sizei levels, enum internalFormat, sizei width, sizei height, sizei depth, uint memory, uint64 offset) ]
		- glTexStorageMem3DMultisampleEXT [ void TexStorageMem3DMultisampleEXT(enum target, sizei samples, enum internalFormat, sizei width, sizei height, sizei depth, boolean fixedSampleLocations, uint memory, uint64 offset) ]
		- glBufferStorageMemEXT [ void BufferStorageMemEXT(enum target, sizeiptr size, uint memory, uint64 offset) ]
		- glTextureStorageMem2DEXT [ void TextureStorageMem2DEXT(uint texture, sizei levels, enum internalFormat, sizei width, sizei height, uint memory, uint64 offset) ]
		- glTextureStorageMem2DMultisampleEXT [ void TextureStorageMem2DMultisampleEXT(uint texture, sizei samples, enum internalFormat, sizei width, sizei height, boolean fixedSampleLocations, uint memory, uint64 offset) ]
		- glTextureStorageMem3DEXT [ void TextureStorageMem3DEXT(uint texture, sizei levels, enum internalFormat, sizei width, sizei height, sizei depth, uint memory, uint64 offset) ]
		- glTextureStorageMem3DMultisampleEXT [ void TextureStorageMem3DMultisampleEXT(uint texture, sizei samples, enum internalFormat, sizei width, sizei height, sizei depth, boolean fixedSampleLocations, uint memory, uint64 offset) ]
		- glNamedBufferStorageMemEXT [ void NamedBufferStorageMemEXT(uint buffer, sizeiptr size, uint memory, uint64 offset) ]
		- glTexStorageMem1DEXT [ void TexStorageMem1DEXT(enum target, sizei levels, enum internalFormat, sizei width, uint memory, uint64 offset) ]
		- glTextureStorageMem1DEXT [ void TextureStorageMem1DEXT(uint texture, sizei levels, enum internalFormat, sizei width, uint memory, uint64 offset) ]
		- glGenSemaphoresEXT [ void GenSemaphoresEXT(sizei n, uint *semaphores) ]
		- glDeleteSemaphoresEXT [ void DeleteSemaphoresEXT(sizei n, const uint *semaphores) ]
		- glIsSemaphoreEXT [ boolean IsSemaphoreEXT(uint semaphore) ]
		- glSemaphoreParameterui64vEXT [ void SemaphoreParameterui64vEXT(uint semaphore, enum pname, const uint64 *params) ]
		- glGetSemaphoreParameterui64vEXT [ void GetSemaphoreParameterui64vEXT(uint semaphore, enum pname, uint64 *params) ]
		- glWaitSemaphoreEXT [ void WaitSemaphoreEXT(uint semaphore, uint numBufferBarriers, const uint *buffers, uint numTextureBarriers, const uint *textures, const GLenum *srcLayouts) ]
		- glSignalSemaphoreEXT [ void SignalSemaphoreEXT(uint semaphore, uint numBufferBarriers, const uint *buffers, uint numTextureBarriers, const uint *textures, const GLenum *dstLayouts) ]
EXT_external_objects_fd [ source: EXT\EXT_external_objects_fd.txt ]
	- Strings = [ GL_EXT_memory_object_fd GL_EXT_semaphore_fd ]
	- Funcs:
		- glImportMemoryFdEXT [ void ImportMemoryFdEXT(uint memory, uint64 size, enum handleType, int fd) ]
		- glImportSemaphoreFdEXT [ void ImportSemaphoreFdEXT(uint semaphore, enum handleType, int fd) ]
EXT_external_objects_win32 [ source: EXT\EXT_external_objects_win32.txt ]
	- Strings = [ GL_EXT_memory_object_win32 GL_EXT_semaphore_win32 ]
	- Funcs:
		- glImportMemoryWin32HandleEXT [ void ImportMemoryWin32HandleEXT(uint memory, uint64 size, enum handleType, void *handle) ]
		- glImportMemoryWin32NameEXT [ void ImportMemoryWin32NameEXT(uint memory, uint64 size, enum handleType, const void *name) ]
		- glImportSemaphoreWin32HandleEXT [ void ImportSemaphoreWin32HandleEXT(uint semaphore, enum handleType, void *handle) ]
		- glImportSemaphoreWin32NameEXT [ void ImportSemaphoreWin32NameEXT(uint semaphore, enum handleType, const void *name) ]
EXT_float_blend [ source: EXT\EXT_float_blend.txt ]
	- Strings = [ GL_EXT_float_blend ]
EXT_fog_coord [ source: EXT\EXT_fog_coord.txt ]
	- Strings = [ GL_EXT_fog_coord ]
	- Funcs:
		- glFogCoordfEXT [ void FogCoordfEXT(glfloat coord) ]
		- glFogCoorddEXT [ void FogCoorddEXT(gldouble coord) ]
		- glFogCoordfvEXT [ void FogCoordfvEXT(glfloat * coord) ]
		- glFogCoorddvEXT [ void FogCoorddvEXT(gldouble * coord) ]
		- glFogCoordPointerEXT [ void FogCoordPointerEXT(enum type, sizei stride, void *pointer) ]
EXT_fragment_lighting [ source: EXT\EXT_fragment_lighting.txt ]
	- Strings = [ GL_EXT_fragment_lighting ]
	- Funcs:
		- glFragmentLightModeliEXT [ void FragmentLightModeliEXT(enum pname, int param) ]
		- glFragmentLightModelfEXT [ void FragmentLightModelfEXT(enum pname, float param) ]
		- glFragmentLightModelivEXT [ void FragmentLightModelivEXT(enum pname, int *params) ]
		- glFragmentLightModelfvEXT [ void FragmentLightModelfvEXT(enum pname, float *params) ]
		- glFragmentLightiEXT [ void FragmentLightiEXT(enum light, enum pname, int param) ]
		- glFragmentLightfEXT [ void FragmentLightfEXT(enum light, enum pname, float param) ]
		- glFragmentLightivEXT [ void FragmentLightivEXT(enum light, enum pname, int *params) ]
		- glFragmentLightfvEXT [ void FragmentLightfvEXT(enum light, enum pname, float *params) ]
		- glGetFragmentLightivEXT [ void GetFragmentLightivEXT(enum light, enum pname, int *params) ]
		- glGetFragmentLightfvEXT [ void GetFragmentLightfvEXT(enum light, enum pname, float *params) ]
		- glFragmentMaterialfEXT [ void FragmentMaterialfEXT(enum face, enum pname, const float param) ]
		- glFragmentMaterialiEXT [ void FragmentMaterialiEXT(enum face, enum pname, const int param) ]
		- glFragmentMaterialfvEXT [ void FragmentMaterialfvEXT(enum face, enum pname, const float *params) ]
		- glFragmentMaterialivEXT [ void FragmentMaterialivEXT(enum face, enum pname, const int *params) ]
		- glFragmentColorMaterialEXT [ void FragmentColorMaterialEXT(enum face, enum mode) ]
		- glGetFragmentMaterialfvEXT [ void GetFragmentMaterialfvEXT(enum face, enum pname, const float *params) ]
		- glGetFragmentMaterialivEXT [ void GetFragmentMaterialivEXT(enum face, enum pname, const int *params) ]
		- glLightEnviEXT [ void LightEnviEXT(enum pname, int param) ]
EXT_frag_depth [ source: EXT\EXT_frag_depth.txt ]
	- Strings = [ GL_EXT_frag_depth ]
EXT_framebuffer_blit [ source: EXT\EXT_framebuffer_blit.txt ]
	- Strings = [ GL_EXT_framebuffer_blit ]
	- Funcs:
		- glBlitFramebufferEXT [ void BlitFramebufferEXT(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
EXT_framebuffer_multisample [ source: EXT\EXT_framebuffer_multisample.txt ]
	- Strings = [ GL_EXT_framebuffer_multisample ]
	- Funcs:
		- glRenderbufferStorageMultisampleEXT [ void RenderbufferStorageMultisampleEXT( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
EXT_framebuffer_multisample_blit_scaled [ source: EXT\EXT_framebuffer_multisample_blit_scaled.txt ]
	- Strings = [ GL_EXT_framebuffer_multisample_blit_scaled ]
EXT_framebuffer_object [ source: EXT\EXT_framebuffer_object.txt ]
	- Strings = [ GL_EXT_framebuffer_object ]
	- Funcs:
		- glIsRenderbufferEXT [ boolean IsRenderbufferEXT(uint renderbuffer) ]
		- glBindRenderbufferEXT [ void BindRenderbufferEXT(enum target, uint renderbuffer) ]
		- glDeleteRenderbuffersEXT [ void DeleteRenderbuffersEXT(sizei n, const uint *renderbuffers) ]
		- glGenRenderbuffersEXT [ void GenRenderbuffersEXT(sizei n, uint *renderbuffers) ]
		- glRenderbufferStorageEXT [ void RenderbufferStorageEXT(enum target, enum internalformat, sizei width, sizei height) ]
		- glGetRenderbufferParameterivEXT [ void GetRenderbufferParameterivEXT(enum target, enum pname, int *params) ]
		- glIsFramebufferEXT [ boolean IsFramebufferEXT(uint framebuffer) ]
		- glBindFramebufferEXT [ void BindFramebufferEXT(enum target, uint framebuffer) ]
		- glDeleteFramebuffersEXT [ void DeleteFramebuffersEXT(sizei n, const uint *framebuffers) ]
		- glGenFramebuffersEXT [ void GenFramebuffersEXT(sizei n, uint *framebuffers) ]
		- glCheckFramebufferStatusEXT [ enum CheckFramebufferStatusEXT(enum target) ]
		- glFramebufferTexture1DEXT [ void FramebufferTexture1DEXT(enum target, enum attachment, enum textarget, uint texture, int level) ]
		- glFramebufferTexture2DEXT [ void FramebufferTexture2DEXT(enum target, enum attachment, enum textarget, uint texture, int level) ]
		- glFramebufferTexture3DEXT [ void FramebufferTexture3DEXT(enum target, enum attachment, enum textarget, uint texture, int level, int zoffset) ]
		- glFramebufferRenderbufferEXT [ void FramebufferRenderbufferEXT(enum target, enum attachment, enum renderbuffertarget, uint renderbuffer) ]
		- glGetFramebufferAttachmentParameterivEXT [ void GetFramebufferAttachmentParameterivEXT(enum target, enum attachment, enum pname, int *params) ]
		- glGenerateMipmapEXT [ void GenerateMipmapEXT(enum target) ]
EXT_framebuffer_sRGB [ source: EXT\EXT_framebuffer_sRGB.txt ]
	- Strings = [ GL_EXT_framebuffer_sRGB GLX_EXT_framebuffer_sRGB WGL_EXT_framebuffer_sRGB ]
EXT_geometry_shader [ source: EXT\EXT_geometry_shader.txt ]
	- Strings = [ GL_EXT_geometry_shader GL_EXT_geometry_point_size ]
	- Funcs:
		- glFramebufferTextureEXT [ void FramebufferTextureEXT(enum target, enum attachment, uint texture, int level) ]
EXT_geometry_shader4 [ source: EXT\EXT_geometry_shader4.txt ]
	- Strings = [ GL_EXT_geometry_shader4 ]
	- Funcs:
		- glProgramParameteriEXT [ void ProgramParameteriEXT(uint program, enum pname, int value) ]
		- glFramebufferTextureEXT [ void FramebufferTextureEXT(enum target, enum attachment, uint texture, int level) ]
		- glFramebufferTextureLayerEXT [ void FramebufferTextureLayerEXT(enum target, enum attachment, uint texture, int level, int layer) ]
		- glFramebufferTextureFaceEXT [ void FramebufferTextureFaceEXT(enum target, enum attachment, uint texture, int level, enum face) ]
EXT_gpu_program_parameters [ source: EXT\EXT_gpu_program_parameters.txt ]
	- Strings = [ GL_EXT_gpu_program_parameters ]
	- Funcs:
		- glProgramEnvParameters4fvEXT [ void ProgramEnvParameters4fvEXT(enum target, uint index, sizei count, const float *params) ]
		- glProgramLocalParameters4fvEXT [ void ProgramLocalParameters4fvEXT(enum target, uint index, sizei count, const float *params) ]
EXT_gpu_shader4 [ source: EXT\EXT_gpu_shader4.txt ]
	- Strings = [ GL_EXT_gpu_shader4 ]
	- Funcs:
		- glVertexAttribI1iEXT [ void VertexAttribI1iEXT(uint index, int x) ]
		- glVertexAttribI2iEXT [ void VertexAttribI2iEXT(uint index, int x, int y) ]
		- glVertexAttribI3iEXT [ void VertexAttribI3iEXT(uint index, int x, int y, int z) ]
		- glVertexAttribI4iEXT [ void VertexAttribI4iEXT(uint index, int x, int y, int z, int w) ]
		- glVertexAttribI1uiEXT [ void VertexAttribI1uiEXT(uint index, uint x) ]
		- glVertexAttribI2uiEXT [ void VertexAttribI2uiEXT(uint index, uint x, uint y) ]
		- glVertexAttribI3uiEXT [ void VertexAttribI3uiEXT(uint index, uint x, uint y, uint z) ]
		- glVertexAttribI4uiEXT [ void VertexAttribI4uiEXT(uint index, uint x, uint y, uint z, uint w) ]
		- glVertexAttribI1ivEXT [ void VertexAttribI1ivEXT(uint index, const int *v) ]
		- glVertexAttribI2ivEXT [ void VertexAttribI2ivEXT(uint index, const int *v) ]
		- glVertexAttribI3ivEXT [ void VertexAttribI3ivEXT(uint index, const int *v) ]
		- glVertexAttribI4ivEXT [ void VertexAttribI4ivEXT(uint index, const int *v) ]
		- glVertexAttribI1uivEXT [ void VertexAttribI1uivEXT(uint index, const uint *v) ]
		- glVertexAttribI2uivEXT [ void VertexAttribI2uivEXT(uint index, const uint *v) ]
		- glVertexAttribI3uivEXT [ void VertexAttribI3uivEXT(uint index, const uint *v) ]
		- glVertexAttribI4uivEXT [ void VertexAttribI4uivEXT(uint index, const uint *v) ]
		- glVertexAttribI4bvEXT [ void VertexAttribI4bvEXT(uint index, const byte *v) ]
		- glVertexAttribI4svEXT [ void VertexAttribI4svEXT(uint index, const short *v) ]
		- glVertexAttribI4ubvEXT [ void VertexAttribI4ubvEXT(uint index, const ubyte *v) ]
		- glVertexAttribI4usvEXT [ void VertexAttribI4usvEXT(uint index, const ushort *v) ]
		- glVertexAttribIPointerEXT [ void VertexAttribIPointerEXT(uint index, int size, enum type, sizei stride, const void *pointer) ]
		- glGetVertexAttribIivEXT [ void GetVertexAttribIivEXT(uint index, enum pname, int *params) ]
		- glGetVertexAttribIuivEXT [ void GetVertexAttribIuivEXT(uint index, enum pname, uint *params) ]
		- glUniform1uiEXT [ void Uniform1uiEXT(int location, uint v0) ]
		- glUniform2uiEXT [ void Uniform2uiEXT(int location, uint v0, uint v1) ]
		- glUniform3uiEXT [ void Uniform3uiEXT(int location, uint v0, uint v1, uint v2) ]
		- glUniform4uiEXT [ void Uniform4uiEXT(int location, uint v0, uint v1, uint v2, uint v3) ]
		- glUniform1uivEXT [ void Uniform1uivEXT(int location, sizei count, const uint *value) ]
		- glUniform2uivEXT [ void Uniform2uivEXT(int location, sizei count, const uint *value) ]
		- glUniform3uivEXT [ void Uniform3uivEXT(int location, sizei count, const uint *value) ]
		- glUniform4uivEXT [ void Uniform4uivEXT(int location, sizei count, const uint *value) ]
		- glGetUniformuivEXT [ void GetUniformuivEXT(uint program, int location, uint *params) ]
		- glBindFragDataLocationEXT [ void BindFragDataLocationEXT(uint program, uint colorNumber, const char *name) ]
		- glGetFragDataLocationEXT [ int GetFragDataLocationEXT(uint program, const char *name) ]
EXT_gpu_shader5 [ source: EXT\EXT_gpu_shader5.txt ]
	- Strings = [ GL_EXT_gpu_shader5 ]
EXT_histogram [ source: EXT\EXT_histogram.txt ]
	- Strings = [ GL_EXT_histogram ]
	- Funcs:
		- glHistogramEXT [ void HistogramEXT(enum target, sizei width, enum internalformat, boolean sink) ]
		- glResetHistogramEXT [ void ResetHistogramEXT(enum target) ]
		- glGetHistogramEXT [ void GetHistogramEXT(enum target, boolean reset, enum format, enum type, void* values) ]
		- glGetHistogramParameterivEXT [ void GetHistogramParameterivEXT(enum target, enum pname, int* params) ]
		- glGetHistogramParameterfvEXT [ void GetHistogramParameterfvEXT(enum target, enum pname, float* params) ]
		- glMinmaxEXT [ void MinmaxEXT(enum target, enum internalformat, boolean sink) ]
		- glResetMinmaxEXT [ void ResetMinmaxEXT(enum target) ]
		- glGetMinmaxEXT [ void GetMinmaxEXT(enum target, boolean reset, enum format, enum type, void* values) ]
		- glGetMinmaxParameterivEXT [ void GetMinmaxParameterivEXT(enum target, enum pname, int* params) ]
		- glGetMinmaxParameterfvEXT [ void GetMinmaxParameterfvEXT(enum target, enum pname, float* params) ]
EXT_index_array_formats [ UNDONE_SPECsource: EXT\EXT_index_array_formats.txt ]
	- Strings = [ GL_EXT_index_array_formats ]
EXT_index_func [ UNDONE_SPECsource: EXT\EXT_index_func.txt ]
	- Strings = [ GL_EXT_index_func ]
	- Funcs:
		- glIndexFuncEXT [ void IndexFuncEXT (enum func, float ref) ]
EXT_index_material [ UNDONE_SPECsource: EXT\EXT_index_material.txt ]
	- Strings = [ GL_EXT_index_material ]
	- Funcs:
		- glIndexMaterialEXT [ void IndexMaterialEXT (enum face, enum mode ) ]
EXT_index_texture [ UNDONE_SPECsource: EXT\EXT_index_texture.txt ]
	- Strings = [ GL_EXT_index_texture ]
EXT_instanced_arrays [ source: EXT\EXT_instanced_arrays.txt ]
	- Strings = [ GL_EXT_instanced_arrays ]
	- Funcs:
		- glVertexAttribDivisorEXT [ void VertexAttribDivisorEXT(uint index, uint divisor) ]
		- glDrawArraysInstancedEXT [ void DrawArraysInstancedEXT(enum mode, int first, sizei count, sizei instanceCount) ]
		- glDrawElementsInstancedEXT [ void DrawElementsInstancedEXT(enum mode, sizei count, enum type, const void *indices, sizei instanceCount) ]
EXT_light_texture [ source: EXT\EXT_light_texture.txt ]
	- Strings = [ GL_EXT_light_texture ]
	- Funcs:
		- glApplyTextureEXT [ void ApplyTextureEXT(enum mode) ]
		- glTextureLightEXT [ void TextureLightEXT(enum pname) ]
		- glTextureMaterialEXT [ void TextureMaterialEXT(enum face, enum mode) ]
EXT_map_buffer_range [ source: EXT\EXT_map_buffer_range.txt ]
	- Strings = [ GL_EXT_map_buffer_range ]
	- Funcs:
		- glMapBufferRangeEXT [ void *MapBufferRangeEXT(enum target, intptr offset, sizeiptr length, bitfield access) ]
		- glFlushMappedBufferRangeEXT [ void FlushMappedBufferRangeEXT(enum target, intptr offset, sizeiptr length) ]
EXT_misc_attribute [ source: EXT\EXT_misc_attribute.txt ]
	- Strings = [ GL_EXT_misc_attribute ]
EXT_multiple_textures [ UNDONE_SPECsource: EXT\EXT_multiple_textures.txt ]
	- Strings = [ GL_EXT_multiple_textures Number queries texgen evaluators GL_MAX_CURRENT_TEXTURES GL_CURRENT_TEXTURE_INDEX GL_SUB GL_COMBINE_COLOR GL_TWICE_COMBINE_COLOR GL_TEX_COLOR GL_TWICE_TEX_COLOR GL_ONE_MINUS_COMBINE_COLOR GL_ONE_MINUS_TEX_COLOR GL_COMBINE_ALPHA GL_TWICE_COMBINE_ALPHA GL_COMBINE_ALPHA_REPLACES_COLOR GL_TEX_ALPHA GL_TWICE_TEX_ALPHA GL_TEX_ALPHA_REPLACES_COLOR GL_ONE_MINUS_COMBINE_ALPHA GL_ONE_MINUS_TEX_ALPHA GL_TEXCOMBINE_CLAMP GL_TEXCOMBINE_NATURAL_CLAMP GL_TEXCOORDn_BIT GL_TEXCOMBINE_COMBINE_COLORn GL_TEXCOMBINE_COLOR_OPn GL_TEXCOMBINE_TEX_COLORn GL_TEXCOMBINE_COMBINE_ALPHAn GL_TEXCOMBINE_ALPHA_OPn GL_TEXCOMBINE_TEX_ALPHAn sequence GLenum colorOp GLenum alphaOp colorOp texColorFactor combineAlphaFactor GL_ONE GL_COMBINE_COLOR GL_TWICE_COMBINE_COLOR GL_TEX_COLOR GL_TWICE_TEX_COLOR GL_COMBINE_ALPHA GL_TWICE_COMBINE_ALPHA GL_COMBINE_ALPHA_REPLACES_COLOR GL_TEX_ALPHA GL_TWICE_TEX_ALPHA GL_TEX_ALPHA_REPLACES_COLOR GL_ONE_MINUS_COMBINE_COLOR GL_ONE_MINUS_TEX_COLOR GL_ONE GL_COMBINE_ALPHA GL_TWICE_COMBINE_ALPHA GL_TEX_ALPHA GL_TWICE_TEX_ALPHA results GL_ADD GL_ONE GL_ONE GL_ADD GL_TEXCOMBINE_COLOR_OPn GL_TEXCOMBINE_TEX_COLORn GL_TEXCOMBINE_COMBINE_ALPHAn glEnable glDisable glIsEnabled glMatrixMode glEnable glDisable glIsEnabled glBindTexture glGetTexImage glPushAttrib glPopAttrib glMatrixMode glPushMatrix glPopMatrix coordinate ]
EXT_multisampled_render_to_texture [ source: EXT\EXT_multisampled_render_to_texture.txt ]
	- Strings = [ GL_EXT_multisampled_render_to_texture ]
	- Funcs:
		- glRenderbufferStorageMultisampleEXT [ void RenderbufferStorageMultisampleEXT( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glFramebufferTexture2DMultisampleEXT [ void FramebufferTexture2DMultisampleEXT( enum target, enum attachment, enum textarget, uint texture, int level, sizei samples) ]
EXT_multisampled_render_to_texture2 [ source: EXT\EXT_multisampled_render_to_texture2.txt ]
	- Strings = [ GL_EXT_multisampled_render_to_texture2 ]
EXT_multisample_compatibility [ source: EXT\EXT_multisample_compatibility.txt ]
	- Strings = [ GL_EXT_multisample_compatibility ]
EXT_multiview_draw_buffers [ source: EXT\EXT_multiview_draw_buffers.txt ]
	- Strings = [ GL_EXT_multiview_draw_buffers ]
	- Funcs:
		- glReadBufferIndexedEXT [ void ReadBufferIndexedEXT(enum src, int index) ]
		- glDrawBuffersIndexedEXT [ void DrawBuffersIndexedEXT(int n, const enum *location, const int *indices) ]
		- glGetIntegeri_vEXT [ void GetIntegeri_vEXT(enum target, uint index, int *data) ]
EXT_multiview_tessellation_geometry_shader [ source: EXT\EXT_multiview_tessellation_geometry_shader.txt ]
	- Strings = [ GL_EXT_multiview_tessellation_geometry_shader ]
EXT_multiview_texture_multisample [ source: EXT\EXT_multiview_texture_multisample.txt ]
	- Strings = [ GL_EXT_multiview_texture_multisample ]
EXT_multiview_timer_query [ source: EXT\EXT_multiview_timer_query.txt ]
	- Strings = [ GL_EXT_multiview_timer_query ]
EXT_multi_draw_arrays SUN_multi_draw_arrays [ source: EXT\EXT_multi_draw_arrays.txt ]
	- Strings = [ GL_EXT_multi_draw_arrays GL_SUN_multi_draw_arrays ]
	- Funcs:
		- glMultiDrawArraysEXT [ void glMultiDrawArraysEXT( GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount) ]
		- glMultiDrawElementsEXT [ void glMultiDrawElementsEXT( GLenum mode, GLsizei *count, GLenum type, const void * const *indices, GLsizei primcount) ]
EXT_multi_draw_indirect [ source: EXT\EXT_multi_draw_indirect.txt ]
	- Strings = [ GL_EXT_multi_draw_indirect ]
	- Funcs:
		- glMultiDrawArraysIndirectEXT [ void MultiDrawArraysIndirectEXT(enum mode, const void *indirect, sizei drawcount, sizei stride) ]
		- glMultiDrawElementsIndirectEXT [ void MultiDrawElementsIndirectEXT(enum mode, enum type, const void *indirect, sizei drawcount, sizei stride) ]
EXT_occlusion_query_boolean [ source: EXT\EXT_occlusion_query_boolean.txt ]
	- Strings = [ GL_EXT_occlusion_query_boolean ]
	- Funcs:
		- glGenQueriesEXT [ void GenQueriesEXT(sizei n, uint *ids) ]
		- glDeleteQueriesEXT [ void DeleteQueriesEXT(sizei n, const uint *ids) ]
		- glIsQueryEXT [ boolean IsQueryEXT(uint id) ]
		- glBeginQueryEXT [ void BeginQueryEXT(enum target, uint id) ]
		- glEndQueryEXT [ void EndQueryEXT(enum target) ]
		- glGetQueryivEXT [ void GetQueryivEXT(enum target, enum pname, int *params) ]
		- glGetQueryObjectuivEXT [ void GetQueryObjectuivEXT(uint id, enum pname, uint *params) ]
EXT_packed_depth_stencil [ source: EXT\EXT_packed_depth_stencil.txt ]
	- Strings = [ GL_EXT_packed_depth_stencil ]
EXT_packed_float [ source: EXT\EXT_packed_float.txt ]
	- Strings = [ GL_EXT_packed_float WGL_EXT_pixel_format_packed_float GLX_EXT_fbconfig_packed_float ]
EXT_packed_pixels [ source: EXT\EXT_packed_pixels.txt ]
	- Strings = [ GL_EXT_packed_pixels ]
EXT_paletted_texture [ source: EXT\EXT_paletted_texture.txt ]
	- Strings = [ GL_EXT_paletted_texture ]
	- Funcs:
		- glColorTableEXT [ void ColorTableEXT( enum target, enum internalFormat, sizei width, enum format, enum type, const void *data) ]
		- glColorSubTableEXT [ void ColorSubTableEXT( enum target, sizei start, sizei count, enum format, enum type, const void *data) ]
		- glGetColorTableEXT [ void GetColorTableEXT( enum target, enum format, enum type, void *data) ]
		- glGetColorTableParameterivEXT [ void GetColorTableParameterivEXT( enum target, enum pname, int *params) ]
		- glGetColorTableParameterfvEXT [ void GetColorTableParameterfvEXT( enum target, enum pname, float *params) ]
EXT_pixel_buffer_object [ source: EXT\EXT_pixel_buffer_object.txt ]
	- Strings = [ GL_EXT_pixel_buffer_object ]
EXT_pixel_transform [ source: EXT\EXT_pixel_transform.txt ]
	- Strings = [ GL_EXT_pixel_transform ]
	- Funcs:
		- glPixelTransformParameteriEXT [ void PixelTransformParameteriEXT(enum target, enum pname, const int param) ]
		- glPixelTransformParameterfEXT [ void PixelTransformParameterfEXT(enum target, enum pname, const float param) ]
		- glPixelTransformParameterivEXT [ void PixelTransformParameterivEXT(enum target, enum pname, const int* params) ]
		- glPixelTransformParameterfvEXT [ void PixelTransformParameterfvEXT(enum target, enum pname, const float* params) ]
		- glGetPixelTransformParameterivEXT [ void GetPixelTransformParameterivEXT(enum target, enum pname, const int* params) ]
		- glGetPixelTransformParameterfvEXT [ void GetPixelTransformParameterfvEXT(enum target, enum pname, const float* params) ]
EXT_pixel_transform_color_table [ source: EXT\EXT_pixel_transform_color_table.txt ]
	- Strings = [ GL_EXT_pixel_transform_color_table ]
EXT_point_parameters [ source: EXT\EXT_point_parameters.txt ]
	- Strings = [ GL_EXT_point_parameters ]
	- Funcs:
		- glPointParameterfEXT [ void glPointParameterfEXT ( GLenum pname, GLfloat param ) ]
		- glPointParameterfvEXT [ void glPointParameterfvEXT ( GLenum pname, const GLfloat *params ) ]
EXT_polygon_offset [ source: EXT\EXT_polygon_offset.txt ]
	- Strings = [ GL_EXT_polygon_offset ]
	- Funcs:
		- glPolygonOffsetEXT [ void PolygonOffsetEXT(float factor, float bias) ]
EXT_polygon_offset_clamp [ source: EXT\EXT_polygon_offset_clamp.txt ]
	- Strings = [ GL_EXT_polygon_offset_clamp ]
	- Funcs:
		- glPolygonOffsetClampEXT [ void PolygonOffsetClampEXT(float factor, float units, float clamp) ]
EXT_post_depth_coverage [ source: EXT\EXT_post_depth_coverage.txt ]
	- Strings = [ GL_EXT_post_depth_coverage ]
EXT_primitive_bounding_box [ source: EXT\EXT_primitive_bounding_box.txt ]
	- Strings = [ GL_EXT_primitive_bounding_box ]
	- Funcs:
		- glPrimitiveBoundingBoxEXT [ void PrimitiveBoundingBoxEXT(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW) ]
EXT_protected_textures [ source: EXT\EXT_protected_textures.txt ]
	- Strings = [ GL_EXT_protected_textures ]
EXT_provoking_vertex [ source: EXT\EXT_provoking_vertex.txt ]
	- Strings = [ GL_EXT_provoking_vertex ]
	- Funcs:
		- glProvokingVertexEXT [ void ProvokingVertexEXT(enum mode) ]
EXT_pvrtc_sRGB [ source: EXT\EXT_pvrtc_sRGB.txt ]
	- Strings = [ GL_EXT_pvrtc_sRGB ]
EXT_raster_multisample [ source: EXT\EXT_raster_multisample.txt ]
	- Strings = [ GL_EXT_raster_multisample ]
	- Funcs:
		- glRasterSamplesEXT [ void RasterSamplesEXT(uint samples, boolean fixedsamplelocations) ]
EXT_read_format_bgra [ source: EXT\EXT_read_format_bgra.txt ]
	- Strings = [ GL_EXT_read_format_bgra ]
EXT_render_snorm [ source: EXT\EXT_render_snorm.txt ]
	- Strings = [ GL_EXT_render_snorm ]
EXT_rescale_normal [ source: EXT\EXT_rescale_normal.txt ]
	- Strings = [ GL_EXT_rescale_normal ]
EXT_robustness [ source: EXT\EXT_robustness.txt ]
	- Strings = [ GL_EXT_robustness ]
	- Funcs:
		- glGetGraphicsResetStatusEXT [ enum GetGraphicsResetStatusEXT() ]
		- glReadnPixelsEXT [ void ReadnPixelsEXT(int x, int y, sizei width, sizei height, enum format, enum type, sizei bufSize, void *data) ]
		- glGetnUniformfvEXT [ void GetnUniformfvEXT(uint program, int location, sizei bufSize, float *params) ]
		- glGetnUniformivEXT [ void GetnUniformivEXT(uint program, int location, sizei bufSize, int *params) ]
EXT_scene_marker [ source: EXT\EXT_scene_marker.txt ]
	- Strings = [ GL_EXT_scene_marker GLX_EXT_scene_marker ]
	- Funcs:
		- glBeginSceneEXT [ void BeginSceneEXT(void) ]
		- glEndSceneEXT [ void EndSceneEXT(void) ]
EXT_secondary_color [ source: EXT\EXT_secondary_color.txt ]
	- Strings = [ GL_EXT_secondary_color ]
	- Funcs:
		- glSecondaryColor3bEXT [ void SecondaryColor3bEXT(glbyte components) ]
		- glSecondaryColor3sEXT [ void SecondaryColor3sEXT(glshort components) ]
		- glSecondaryColor3iEXT [ void SecondaryColor3iEXT(glint components) ]
		- glSecondaryColor3fEXT [ void SecondaryColor3fEXT(glfloat components) ]
		- glSecondaryColor3dEXT [ void SecondaryColor3dEXT(gldouble components) ]
		- glSecondaryColor3ubEXT [ void SecondaryColor3ubEXT(glubyte components) ]
		- glSecondaryColor3usEXT [ void SecondaryColor3usEXT(glushort components) ]
		- glSecondaryColor3uiEXT [ void SecondaryColor3uiEXT(gluint components) ]
		- glSecondaryColor3bvEXT [ void SecondaryColor3bvEXT(glbyte * components) ]
		- glSecondaryColor3svEXT [ void SecondaryColor3svEXT(glshort * components) ]
		- glSecondaryColor3ivEXT [ void SecondaryColor3ivEXT(glint * components) ]
		- glSecondaryColor3fvEXT [ void SecondaryColor3fvEXT(glfloat * components) ]
		- glSecondaryColor3dvEXT [ void SecondaryColor3dvEXT(gldouble * components) ]
		- glSecondaryColor3ubvEXT [ void SecondaryColor3ubvEXT(glubyte * components) ]
		- glSecondaryColor3usvEXT [ void SecondaryColor3usvEXT(glushort * components) ]
		- glSecondaryColor3uivEXT [ void SecondaryColor3uivEXT(gluint * components) ]
		- glSecondaryColorPointerEXT [ void SecondaryColorPointerEXT(int size, enum type, sizei stride, void *pointer) ]
EXT_separate_shader_objects [ source: EXT\EXT_separate_shader_objects.gl.txt ]
	- Strings = [ GL_EXT_separate_shader_objects ]
	- Funcs:
		- glUseShaderProgramEXT [ void UseShaderProgramEXT(enum type, uint program) ]
		- glActiveProgramEXT [ void ActiveProgramEXT(uint program) ]
		- glCreateShaderProgramEXT [ uint CreateShaderProgramEXT(enum type, const char *string) ]
EXT_separate_shader_objects [ source: EXT\EXT_separate_shader_objects.gles.txt ]
	- Strings = [ GL_EXT_separate_shader_objects ]
	- Funcs:
		- glUseProgramStagesEXT [ void UseProgramStagesEXT(uint pipeline, bitfield stages, uint program) ]
		- glActiveShaderProgramEXT [ void ActiveShaderProgramEXT(uint pipeline, uint program) ]
		- glCreateShaderProgramvEXT [ uint CreateShaderProgramvEXT(enum type, sizei count, const char **strings) ]
		- glBindProgramPipelineEXT [ void BindProgramPipelineEXT(uint pipeline) ]
		- glDeleteProgramPipelinesEXT [ void DeleteProgramPipelinesEXT(sizei n, const uint *pipelines) ]
		- glGenProgramPipelinesEXT [ void GenProgramPipelinesEXT(sizei n, uint *pipelines) ]
		- glIsProgramPipelineEXT [ boolean IsProgramPipelineEXT(uint pipeline) ]
		- glProgramParameteriEXT [ void ProgramParameteriEXT(uint program, enum pname, int value) ]
		- glGetProgramPipelineivEXT [ void GetProgramPipelineivEXT(uint pipeline, enum pname, int *params) ]
		- glProgramUniform1iEXT [ void ProgramUniform1iEXT(uint program, int location, int x) ]
		- glProgramUniform2iEXT [ void ProgramUniform2iEXT(uint program, int location, int x, int y) ]
		- glProgramUniform3iEXT [ void ProgramUniform3iEXT(uint program, int location, int x, int y, int z) ]
		- glProgramUniform4iEXT [ void ProgramUniform4iEXT(uint program, int location, int x, int y, int z, int w) ]
		- glProgramUniform1fEXT [ void ProgramUniform1fEXT(uint program, int location, float x) ]
		- glProgramUniform2fEXT [ void ProgramUniform2fEXT(uint program, int location, float x, float y) ]
		- glProgramUniform3fEXT [ void ProgramUniform3fEXT(uint program, int location, float x, float y, float z) ]
		- glProgramUniform4fEXT [ void ProgramUniform4fEXT(uint program, int location, float x, float y, float z, float w) ]
		- glProgramUniform1uiEXT [ void ProgramUniform1uiEXT(uint program, int location, uint x) ]
		- glProgramUniform2uiEXT [ void ProgramUniform2uiEXT(uint program, int location, uint x, uint y) ]
		- glProgramUniform3uiEXT [ void ProgramUniform3uiEXT(uint program, int location, uint x, uint y, uint z) ]
		- glProgramUniform4uiEXT [ void ProgramUniform4uiEXT(uint program, int location, uint x, uint y, uint z, uint w) ]
		- glProgramUniform1ivEXT [ void ProgramUniform1ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform2ivEXT [ void ProgramUniform2ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform3ivEXT [ void ProgramUniform3ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform4ivEXT [ void ProgramUniform4ivEXT(uint program, int location, sizei count, const int *value) ]
		- glProgramUniform1fvEXT [ void ProgramUniform1fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform2fvEXT [ void ProgramUniform2fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform3fvEXT [ void ProgramUniform3fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform4fvEXT [ void ProgramUniform4fvEXT(uint program, int location, sizei count, const float *value) ]
		- glProgramUniform1uivEXT [ void ProgramUniform1uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform2uivEXT [ void ProgramUniform2uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform3uivEXT [ void ProgramUniform3uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniform4uivEXT [ void ProgramUniform4uivEXT(uint program, int location, sizei count, const uint *value) ]
		- glProgramUniformMatrix2fvEXT [ void ProgramUniformMatrix2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3fvEXT [ void ProgramUniformMatrix3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4fvEXT [ void ProgramUniformMatrix4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x3fvEXT [ void ProgramUniformMatrix2x3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x2fvEXT [ void ProgramUniformMatrix3x2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix2x4fvEXT [ void ProgramUniformMatrix2x4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x2fvEXT [ void ProgramUniformMatrix4x2fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix3x4fvEXT [ void ProgramUniformMatrix3x4fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glProgramUniformMatrix4x3fvEXT [ void ProgramUniformMatrix4x3fvEXT(uint program, int location, sizei count, boolean transpose, const float *value) ]
		- glValidateProgramPipelineEXT [ void ValidateProgramPipelineEXT(uint pipeline) ]
		- glGetProgramPipelineInfoLogEXT [ void GetProgramPipelineInfoLogEXT(uint pipeline, sizei bufSize, sizei *length, char *infoLog) ]
EXT_separate_specular_color [ source: EXT\EXT_separate_specular_color.txt ]
	- Strings = [ GL_EXT_separate_specular_color ]
EXT_shader_framebuffer_fetch [ source: EXT\EXT_shader_framebuffer_fetch.txt ]
	- Strings = [ GL_EXT_shader_framebuffer_fetch GL_EXT_shader_framebuffer_fetch_non_coherent ]
	- Funcs:
		- glFramebufferFetchBarrierEXT [ void FramebufferFetchBarrierEXT(void) ]
EXT_shader_group_vote [ source: EXT\EXT_shader_group_vote.txt ]
	- Strings = [ GL_EXT_shader_group_vote ]
EXT_shader_image_load_formatted [ source: EXT\EXT_shader_image_load_formatted.txt ]
	- Strings = [ GL_EXT_shader_image_load_formatted ]
EXT_shader_image_load_store [ source: EXT\EXT_shader_image_load_store.txt ]
	- Strings = [ GL_EXT_shader_image_load_store ]
	- Funcs:
		- glBindImageTextureEXT [ void BindImageTextureEXT(uint index, uint texture, int level, boolean layered, int layer, enum access, int format) ]
		- glMemoryBarrierEXT [ void MemoryBarrierEXT(bitfield barriers) ]
EXT_shader_implicit_conversions [ source: EXT\EXT_shader_implicit_conversions.txt ]
	- Strings = [ GL_EXT_shader_implicit_conversions ]
EXT_shader_integer_mix [ source: EXT\EXT_shader_integer_mix.txt ]
	- Strings = [ GL_EXT_shader_integer_mix ]
EXT_shader_io_blocks [ source: EXT\EXT_shader_io_blocks.txt ]
	- Strings = [ GL_EXT_shader_io_blocks ]
EXT_shader_non_constant_global_initializers [ source: EXT\EXT_shader_non_constant_global_initializers.txt ]
	- Strings = [ GL_EXT_shader_non_constant_global_initializers ]
EXT_shader_pixel_local_storage [ source: EXT\EXT_shader_pixel_local_storage.txt ]
	- Strings = [ GL_EXT_shader_pixel_local_storage ]
EXT_shader_pixel_local_storage2 [ source: EXT\EXT_shader_pixel_local_storage2.txt ]
	- Strings = [ GL_EXT_shader_pixel_local_storage2 ]
	- Funcs:
		- glFramebufferPixelLocalStorageSizeEXT [ void FramebufferPixelLocalStorageSizeEXT(uint target, sizei size) ]
		- glGetFramebufferPixelLocalStorageSizeEXT [ sizei GetFramebufferPixelLocalStorageSizeEXT(uint target) ]
		- glClearPixelLocalStorageuiEXT [ void ClearPixelLocalStorageuiEXT(sizei offset, sizei n, const uint *values) ]
EXT_shader_texture_lod [ source: EXT\EXT_shader_texture_lod.txt ]
	- Strings = [ GL_EXT_shader_texture_lod ]
EXT_shadow_funcs [ source: EXT\EXT_shadow_funcs.txt ]
	- Strings = [ GL_EXT_shadow_funcs ]
EXT_shadow_samplers [ source: EXT\EXT_shadow_samplers.txt ]
	- Strings = [ GL_EXT_shadow_samplers ]
EXT_shared_texture_palette [ source: EXT\EXT_shared_texture_palette.txt ]
	- Strings = [ GL_EXT_shared_texture_palette ]
EXT_sparse_texture [ source: EXT\EXT_sparse_texture.txt ]
	- Strings = [ GL_EXT_sparse_texture ]
	- Funcs:
		- glTexPageCommitmentEXT [ void TexPageCommitmentEXT(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, boolean commit) ]
		- glTexturePageCommitmentEXT [ void TexturePageCommitmentEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, boolean commit) ]
EXT_sparse_texture2 [ source: EXT\EXT_sparse_texture2.txt ]
	- Strings = [ GL_EXT_sparse_texture2 ]
EXT_sRGB [ source: EXT\EXT_sRGB.txt ]
	- Strings = [ GL_EXT_sRGB ]
EXT_sRGB_write_control [ source: EXT\EXT_sRGB_write_control.txt ]
	- Strings = [ GL_EXT_sRGB_write_control ]
EXT_static_vertex_array [ source: EXT\EXT_static_vertex_array.txt ]
	- Strings = [ GL_EXT_static_vertex_array ]
	- Funcs:
		- glLockArraysEXT [ void LockArraysEXT (sizei count) ]
		- glUnlockArraysEXT [ void UnlockArraysEXT (void) ]
EXT_stencil_clear_tag [ source: EXT\EXT_stencil_clear_tag.txt ]
	- Strings = [ GL_EXT_stencil_clear_tag ]
	- Funcs:
		- glStencilClearTagEXT [ void StencilClearTagEXT(sizei stencilTagBits, uint stencilClearTag) ]
EXT_stencil_two_side [ source: EXT\EXT_stencil_two_side.txt ]
	- Strings = [ GL_EXT_stencil_two_side ]
	- Funcs:
		- glActiveStencilFaceEXT [ void ActiveStencilFaceEXT(enum face) ]
EXT_stencil_wrap [ source: EXT\EXT_stencil_wrap.txt ]
	- Strings = [ GL_EXT_stencil_wrap ]
EXT_subtexture [ source: EXT\EXT_subtexture.txt ]
	- Strings = [ GL_EXT_subtexture ]
	- Funcs:
		- glTexSubImage1DEXT [ void TexSubImage1DEXT(enum target, int level, int xoffset, sizei width, enum format, enum type, const void* pixels) ]
		- glTexSubImage2DEXT [ void TexSubImage2DEXT(enum target, int level, int xoffset, int yoffset, sizei width, sizei height, enum format, enum type, const void* pixels) ]
		- glTexSubImage3DEXT [ void TexSubImage3DEXT(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void* pixels) ]
EXT_swap_control [ source: EXT\EXT_swap_control.txt ]
	- Strings = [ GLX_EXT_swap_control ]
	- Funcs:
		- glXSwapIntervalEXT [ void glXSwapIntervalEXT(Display *dpy, GLXDrawable drawable, int interval) ]
EXT_tessellation_shader [ source: EXT\EXT_tessellation_shader.txt ]
	- Strings = [ GL_EXT_tessellation_shader GL_EXT_tessellation_point_size ]
	- Funcs:
		- glPatchParameteriEXT [ void PatchParameteriEXT(enum pname, int value) ]
EXT_texenv_op [ source: EXT\EXT_texenv_op.txt ]
	- Strings = [ GL_EXT_texenv_op ]
	- Funcs:
		- glTexEnvOperandiEXT [ void TexEnvOperandiEXT(enum pname, int source, int mapping, int component) ]
		- glGetTexEnvOperandivEXT [ void GetTexEnvOperandivEXT(enum pname, enum query, int *param) ]
EXT_texture [ source: EXT\EXT_texture.txt ]
	- Strings = [ GL_EXT_texture ]
EXT_texture3D [ source: EXT\EXT_texture3D.txt ]
	- Strings = [ GL_EXT_texture3D ]
	- Funcs:
		- glTexImage3DEXT [ void TexImage3DEXT(enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, enum format, enum type, const void* pixels) ]
EXT_texture_array [ source: EXT\EXT_texture_array.txt ]
	- Strings = [ GL_EXT_texture_array ]
	- Funcs:
		- glFramebufferTextureLayerEXT [ void FramebufferTextureLayerEXT(enum target, enum attachment, uint texture, int level, int layer) ]
EXT_texture_border_clamp [ source: EXT\EXT_texture_border_clamp.txt ]
	- Strings = [ GL_EXT_texture_border_clamp ]
	- Funcs:
		- glTexParameterIivEXT [ void TexParameterIivEXT(enum target, enum pname, const int *params) ]
		- glTexParameterIuivEXT [ void TexParameterIuivEXT(enum target, enum pname, const uint *params) ]
		- glGetTexParameterIivEXT [ void GetTexParameterIivEXT(enum target, enum pname, int *params) ]
		- glGetTexParameterIuivEXT [ void GetTexParameterIuivEXT(enum target, enum pname, uint *params) ]
		- glSamplerParameterIivEXT [ void SamplerParameterIivEXT(uint sampler, enum pname, const int *params) ]
		- glSamplerParameterIuivEXT [ void SamplerParameterIuivEXT(uint sampler, enum pname, const uint *params) ]
		- glGetSamplerParameterIivEXT [ void GetSamplerParameterIivEXT(uint sampler, enum pname, int *params) ]
		- glGetSamplerParameterIuivEXT [ void GetSamplerParameterIuivEXT(uint sampler, enum pname, uint *params) ]
EXT_texture_buffer [ source: EXT\EXT_texture_buffer.txt ]
	- Strings = [ GL_EXT_texture_buffer ]
	- Funcs:
		- glTexBufferEXT [ void TexBufferEXT(enum target, enum internalformat, uint buffer) ]
		- glTexBufferRangeEXT [ void TexBufferRangeEXT(enum target, enum internalformat, uint buffer, intptr offset, sizeiptr size) ]
EXT_texture_buffer_object [ source: EXT\EXT_texture_buffer_object.txt ]
	- Strings = [ GL_EXT_texture_buffer_object ]
	- Funcs:
		- glTexBufferEXT [ void TexBufferEXT(enum target, enum internalformat, uint buffer) ]
EXT_texture_compression_astc_decode_mode [ source: EXT\EXT_texture_compression_astc_decode_mode.txt ]
	- Strings = [ GL_EXT_texture_compression_astc_decode_mode GL_EXT_texture_compression_astc_decode_mode_rgb9e5 ]
EXT_texture_compression_bptc [ source: EXT\EXT_texture_compression_bptc.txt ]
	- Strings = [ GL_EXT_texture_compression_bptc ]
EXT_texture_compression_dxt1 [ source: EXT\EXT_texture_compression_dxt1.txt ]
	- Strings = [ GL_EXT_texture_compression_dxt1 ]
EXT_texture_compression_latc [ source: EXT\EXT_texture_compression_latc.txt ]
	- Strings = [ GL_EXT_texture_compression_latc ]
EXT_texture_compression_rgtc [ source: EXT\EXT_texture_compression_rgtc.txt ]
	- Strings = [ GL_EXT_texture_compression_rgtc ]
EXT_texture_compression_s3tc [ source: EXT\EXT_texture_compression_s3tc.txt ]
	- Strings = [ GL_EXT_texture_compression_s3tc ]
EXT_texture_compression_s3tc_srgb [ source: EXT\EXT_texture_compression_s3tc_srgb.txt ]
	- Strings = [ GL_EXT_texture_compression_s3tc_srgb ]
EXT_texture_cube_map [ source: EXT\EXT_texture_cube_map.txt ]
	- Strings = [ GL_EXT_texture_cube_map ]
EXT_texture_cube_map_array [ source: EXT\EXT_texture_cube_map_array.txt ]
	- Strings = [ GL_EXT_texture_cube_map_array ]
EXT_texture_env [ source: EXT\EXT_texture_env.txt ]
	- Strings = [ GL_EXT_texture_env ]
EXT_texture_env_add [ source: EXT\EXT_texture_env_add.txt ]
	- Strings = [ GL_EXT_texture_env_add ]
EXT_texture_env_combine [ source: EXT\EXT_texture_env_combine.txt ]
	- Strings = [ GL_EXT_texture_env_combine ]
EXT_texture_env_dot3 [ source: EXT\EXT_texture_env_dot3.txt ]
	- Strings = [ GL_EXT_texture_env_dot3 ]
EXT_texture_filter_anisotropic [ source: EXT\EXT_texture_filter_anisotropic.txt ]
	- Strings = [ GL_EXT_texture_filter_anisotropic ]
EXT_texture_filter_minmax [ source: EXT\EXT_texture_filter_minmax.txt ]
	- Strings = [ GL_EXT_texture_filter_minmax ]
EXT_texture_format_BGRA8888 [ source: EXT\EXT_texture_format_BGRA8888.txt ]
	- Strings = [ GL_EXT_texture_format_BGRA8888 ]
EXT_texture_format_sRGB_override [ source: EXT\EXT_texture_format_sRGB_override.txt ]
	- Strings = [ GL_EXT_texture_format_sRGB_override ]
EXT_texture_integer [ source: EXT\EXT_texture_integer.txt ]
	- Strings = [ GL_EXT_texture_integer ]
	- Funcs:
		- glClearColorIiEXT [ void ClearColorIiEXT ( int r, int g, int b, int a ) ]
		- glClearColorIuiEXT [ void ClearColorIuiEXT ( uint r, uint g, uint b, uint a ) ]
		- glTexParameterIivEXT [ void TexParameterIivEXT( enum target, enum pname, int *params ) ]
		- glTexParameterIuivEXT [ void TexParameterIuivEXT( enum target, enum pname, uint *params ) ]
		- glGetTexParameterIivEXT [ void GetTexParameterIivEXT ( enum target, enum pname, int *params) ]
		- glGetTexParameterIuivEXT [ void GetTexParameterIuivEXT ( enum target, enum pname, uint *params) ]
EXT_texture_lod_bias [ source: EXT\EXT_texture_lod_bias.txt ]
	- Strings = [ GL_EXT_texture_lod_bias ]
EXT_texture_mirror_clamp [ source: EXT\EXT_texture_mirror_clamp.txt ]
	- Strings = [ GL_EXT_texture_mirror_clamp ]
EXT_texture_mirror_clamp_to_edge [ source: EXT\EXT_texture_mirror_clamp_to_edge.txt ]
	- Strings = [ GL_EXT_texture_mirror_clamp_to_edge ]
EXT_texture_norm16 [ source: EXT\EXT_texture_norm16.txt ]
	- Strings = [ GL_EXT_texture_norm16 ]
EXT_texture_object [ source: EXT\EXT_texture_object.txt ]
	- Strings = [ GL_EXT_texture_object ]
	- Funcs:
		- glGenTexturesEXT [ void GenTexturesEXT(sizei n, uint* textures) ]
		- glDeleteTexturesEXT [ void DeleteTexturesEXT(sizei n, const uint* textures) ]
		- glBindTextureEXT [ void BindTextureEXT(enum target, uint texture) ]
		- glPrioritizeTexturesEXT [ void PrioritizeTexturesEXT(sizei n, const uint* textures, const clampf* priorities) ]
		- glAreTexturesResidentEXT [ boolean AreTexturesResidentEXT(sizei n, const uint* textures, boolean* residences) ]
		- glIsTextureEXT [ boolean IsTextureEXT(uint texture) ]
EXT_texture_perturb_normal [ source: EXT\EXT_texture_perturb_normal.txt ]
	- Strings = [ GL_EXT_texture_perturb_normal ]
	- Funcs:
		- glTextureNormalEXT [ void TextureNormalEXT(enum mode) ]
EXT_texture_query_lod [ source: EXT\EXT_texture_query_lod.txt ]
	- Strings = [ GL_EXT_texture_query_lod ]
EXT_texture_rg [ source: EXT\EXT_texture_rg.txt ]
	- Strings = [ GL_EXT_texture_rg ]
EXT_texture_shadow_lod [ source: EXT\EXT_texture_shadow_lod.txt ]
	- Strings = [ GL_EXT_texture_shadow_lod ]
EXT_texture_shared_exponent [ source: EXT\EXT_texture_shared_exponent.txt ]
	- Strings = [ GL_EXT_texture_shared_exponent ]
EXT_texture_snorm [ source: EXT\EXT_texture_snorm.txt ]
	- Strings = [ GL_EXT_texture_snorm ]
EXT_texture_sRGB [ source: EXT\EXT_texture_sRGB.txt ]
	- Strings = [ GL_EXT_texture_sRGB ]
EXT_texture_sRGB_decode [ source: EXT\EXT_texture_sRGB_decode.txt ]
	- Strings = [ GL_EXT_texture_sRGB_decode ]
EXT_texture_sRGB_R8 [ source: EXT\EXT_texture_sRGB_R8.txt ]
	- Strings = [ GL_EXT_texture_sRGB_R8 ]
EXT_texture_sRGB_RG8 [ source: EXT\EXT_texture_sRGB_RG8.txt ]
	- Strings = [ GL_EXT_texture_sRGB_RG8 ]
EXT_texture_storage [ source: EXT\EXT_texture_storage.txt ]
	- Strings = [ GL_EXT_texture_storage ]
	- Funcs:
		- glTexStorage1DEXT [ void TexStorage1DEXT(enum target, sizei levels, enum internalformat, sizei width) ]
		- glTexStorage2DEXT [ void TexStorage2DEXT(enum target, sizei levels, enum internalformat, sizei width, sizei height) ]
		- glTexStorage3DEXT [ void TexStorage3DEXT(enum target, sizei levels, enum internalformat, sizei width, sizei height, sizei depth) ]
		- glTextureStorage1DEXT [ void TextureStorage1DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width) ]
		- glTextureStorage2DEXT [ void TextureStorage2DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width, sizei height) ]
		- glTextureStorage3DEXT [ void TextureStorage3DEXT(uint texture, enum target, sizei levels, enum internalformat, sizei width, sizei height, sizei depth) ]
EXT_texture_swizzle [ source: EXT\EXT_texture_swizzle.txt ]
	- Strings = [ GL_EXT_texture_swizzle ]
EXT_texture_type_2_10_10_10_REV [ source: EXT\EXT_texture_type_2_10_10_10_REV.txt ]
	- Strings = [ GL_EXT_texture_type_2_10_10_10_REV ]
EXT_texture_view [ source: EXT\EXT_texture_view.txt ]
	- Strings = [ GL_EXT_texture_view ]
	- Funcs:
		- glTextureViewEXT [ void TextureViewEXT(uint texture, enum target, uint origtexture, enum internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers) ]
EXT_timer_query [ source: EXT\EXT_timer_query.txt ]
	- Strings = [ GL_EXT_timer_query ]
	- Funcs:
		- glGetQueryObjecti64vEXT [ void GetQueryObjecti64vEXT(uint id, enum pname, int64 *params) ]
		- glGetQueryObjectui64vEXT [ void GetQueryObjectui64vEXT(uint id, enum pname, uint64 *params) ]
EXT_transform_feedback [ source: EXT\EXT_transform_feedback.txt ]
	- Strings = [ GL_EXT_transform_feedback ]
	- Funcs:
		- glBindBufferRangeEXT [ void BindBufferRangeEXT(enum target, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glBindBufferOffsetEXT [ void BindBufferOffsetEXT(enum target, uint index, uint buffer, intptr offset) ]
		- glBindBufferBaseEXT [ void BindBufferBaseEXT(enum target, uint index, uint buffer) ]
		- glBeginTransformFeedbackEXT [ void BeginTransformFeedbackEXT(enum primitiveMode) ]
		- glEndTransformFeedbackEXT [ void EndTransformFeedbackEXT(void) ]
		- glTransformFeedbackVaryingsEXT [ void TransformFeedbackVaryingsEXT(uint program, sizei count, const char * const *varyings, enum bufferMode) ]
		- glGetTransformFeedbackVaryingEXT [ void GetTransformFeedbackVaryingEXT(uint program, uint index, sizei bufSize, sizei *length, sizei *size, enum *type, char *name) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum param, uint index, int *values) ]
		- glGetBooleanIndexedvEXT [ void GetBooleanIndexedvEXT(enum param, uint index, boolean *values) ]
EXT_transform_feedback2 [ source: EXT\EXT_transform_feedback2.txt ]
	- Strings = [ GL_EXT_transform_feedback2 ]
	- Funcs:
		- glBindTransformFeedbackEXT [ void BindTransformFeedbackEXT(enum target, uint id) ]
		- glDeleteTransformFeedbacksEXT [ void DeleteTransformFeedbacksEXT(sizei n, const uint *ids) ]
		- glGenTransformFeedbacksEXT [ void GenTransformFeedbacksEXT(sizei n, uint *ids) ]
		- glIsTransformFeedbackEXT [ boolean IsTransformFeedbackEXT(uint id) ]
		- glPauseTransformFeedbackEXT [ void PauseTransformFeedbackEXT(void) ]
		- glResumeTransformFeedbackEXT [ void ResumeTransformFeedbackEXT(void) ]
		- glDrawTransformFeedbackEXT [ void DrawTransformFeedbackEXT(enum mode, uint id) ]
EXT_unpack_subimage [ source: EXT\EXT_unpack_subimage.txt ]
	- Strings = [ GL_EXT_unpack_subimage ]
EXT_vertex_array [ source: EXT\EXT_vertex_array.txt ]
	- Strings = [ GL_EXT_vertex_array ]
	- Funcs:
		- glArrayElementEXT [ void ArrayElementEXT(int i) ]
		- glDrawArraysEXT [ void DrawArraysEXT(enum mode, int first, sizei count) ]
		- glVertexPointerEXT [ void VertexPointerEXT(int size, enum type, sizei stride, sizei count, const void* pointer) ]
		- glNormalPointerEXT [ void NormalPointerEXT(enum type, sizei stride, sizei count, const void* pointer) ]
		- glColorPointerEXT [ void ColorPointerEXT(int size, enum type, sizei stride, sizei count, const void* pointer) ]
		- glIndexPointerEXT [ void IndexPointerEXT(enum type, sizei stride, sizei count, const void* pointer) ]
		- glTexCoordPointerEXT [ void TexCoordPointerEXT(int size, enum type, sizei stride, sizei count, const void* pointer) ]
		- glEdgeFlagPointerEXT [ void EdgeFlagPointerEXT(sizei stride, sizei count, const Boolean* pointer) ]
		- glGetPointervEXT [ void GetPointervEXT(enum pname, void** params) ]
EXT_vertex_array_bgra [ source: EXT\EXT_vertex_array_bgra.txt ]
	- Strings = [ GL_EXT_vertex_array_bgra ]
EXT_vertex_array_set / GenName version [ source: EXT\EXT_vertex_array_set.txt ]
	- Strings = [ GL_EXT_vertex_array_set ]
	- Funcs:
		- glGenArraySetsEXT [ void GenArraySetsEXT(sizei n, uint* arrayset) ]
		- glBindArraySetEXT [ void BindArraySetEXT(uint arrayset) ]
		- glDeleteArraySetsEXT [ void DeleteArraySetsEXT(sizei n, const uint* arrayset) ]
		- glIsArraySetEXT [ boolean IsArraySetEXT(uint arrayset) ]
EXT_vertex_array_setXXX (No GenName version) [ UNDONE_SPECsource: EXT\EXT_vertex_array_setXXX.txt ]
	- Strings = [ GL_EXT_vertex_array_setXXX ]
	- Funcs:
		- glCreateArraySetExt [ void *CreateArraySetExt(void) ]
		- glBindArraySetEXT [ void BindArraySetEXT(const void *arrayset) ]
		- glDeleteArraySetsEXT [ void DeleteArraySetsEXT(sizei n, const void *arrayset[]) ]
EXT_vertex_attrib_64bit [ source: EXT\EXT_vertex_attrib_64bit.txt ]
	- Strings = [ GL_EXT_vertex_attrib_64bit ]
	- Funcs:
		- glVertexAttribL1dEXT [ void VertexAttribL1dEXT(uint index, double x) ]
		- glVertexAttribL2dEXT [ void VertexAttribL2dEXT(uint index, double x, double y) ]
		- glVertexAttribL3dEXT [ void VertexAttribL3dEXT(uint index, double x, double y, double z) ]
		- glVertexAttribL4dEXT [ void VertexAttribL4dEXT(uint index, double x, double y, double z, double w) ]
		- glVertexAttribL1dvEXT [ void VertexAttribL1dvEXT(uint index, const double *v) ]
		- glVertexAttribL2dvEXT [ void VertexAttribL2dvEXT(uint index, const double *v) ]
		- glVertexAttribL3dvEXT [ void VertexAttribL3dvEXT(uint index, const double *v) ]
		- glVertexAttribL4dvEXT [ void VertexAttribL4dvEXT(uint index, const double *v) ]
		- glVertexAttribLPointerEXT [ void VertexAttribLPointerEXT(uint index, int size, enum type, sizei stride, const void *pointer) ]
		- glGetVertexAttribLdvEXT [ void GetVertexAttribLdvEXT(uint index, enum pname, double *params) ]
		- glVertexArrayVertexAttribLOffsetEXT [ void VertexArrayVertexAttribLOffsetEXT(uint vaobj, uint buffer, uint index, int size, enum type, sizei stride, intptr offset) ]
EXT_vertex_shader [ source: EXT\EXT_vertex_shader.txt ]
	- Strings = [ GL_EXT_vertex_shader ]
	- Funcs:
		- glBeginVertexShaderEXT [ void BeginVertexShaderEXT( void ) ]
		- glEndVertexShaderEXT [ void EndVertexShaderEXT( void ) ]
		- glBindVertexShaderEXT [ void BindVertexShaderEXT( GLuint id ) ]
		- glGenVertexShadersEXT [ uint GenVertexShadersEXT( GLuint range ) ]
		- glDeleteVertexShaderEXT [ void DeleteVertexShaderEXT( GLuint id ) ]
		- glShaderOp1EXT [ void ShaderOp1EXT( enum op, uint res, uint arg1 ) ]
		- glShaderOp2EXT [ void ShaderOp2EXT( enum op, uint res, uint arg1, uint arg2 ) ]
		- glShaderOp3EXT [ void ShaderOp3EXT( enum op, uint res, uint arg1, uint arg2, uint arg3 ) ]
		- glSwizzleEXT [ void SwizzleEXT( uint res, uint in, enum outX, enum outY, enum outZ, enum outW ) ]
		- glWriteMaskEXT [ void WriteMaskEXT( uint res, uint in, enum outX, enum outY, enum outZ, enum outW ) ]
		- glInsertComponentEXT [ void InsertComponentEXT( uint res, uint src, uint num ) ]
		- glExtractComponentEXT [ void ExtractComponentEXT( uint res, uint src, uint num ) ]
		- glGenSymbolsEXT [ uint GenSymbolsEXT( enum datatype, enum storagetype, enum range, uint components ) ]
		- glSetInvariantEXT [ void SetInvariantEXT( uint id, enum type, void *addr ) ]
		- glSetLocalConstantEXT [ void SetLocalConstantEXT( uint id, enum type, void *addr ) ]
		- glVariantbvEXT [ void VariantbvEXT( uint id, T *addr ) ]
		- glVariantsvEXT [ void VariantsvEXT( uint id, T *addr ) ]
		- glVariantivEXT [ void VariantivEXT( uint id, T *addr ) ]
		- glVariantfvEXT [ void VariantfvEXT( uint id, T *addr ) ]
		- glVariantdvEXT [ void VariantdvEXT( uint id, T *addr ) ]
		- glVariantubvEXT [ void VariantubvEXT( uint id, T *addr ) ]
		- glVariantusvEXT [ void VariantusvEXT( uint id, T *addr ) ]
		- glVariantuivEXT [ void VariantuivEXT( uint id, T *addr ) ]
		- glVariantPointerEXT [ void VariantPointerEXT( uint id, enum type, uint stride, void *addr ) ]
		- glEnableVariantClientStateEXT [ void EnableVariantClientStateEXT( uint id) ]
		- glDisableVariantClientStateEXT [ void DisableVariantClientStateEXT( uint id) ]
		- glBindLightParameterEXT [ uint BindLightParameterEXT( enum light, enum value) ]
		- glBindMaterialParameterEXT [ uint BindMaterialParameterEXT( enum face, enum value) ]
		- glBindTexGenParameterEXT [ uint BindTexGenParameterEXT( enum unit, enum coord, enum value) ]
		- glBindTextureUnitParameterEXT [ uint BindTextureUnitParameterEXT( enum unit, enum value) ]
		- glBindParameterEXT [ uint BindParameterEXT( enum value) ]
		- glIsVariantEnabledEXT [ boolean IsVariantEnabledEXT( uint id, enum cap) ]
		- glGetVariantBooleanvEXT [ void GetVariantBooleanvEXT( uint id, enum value, boolean *data) ]
		- glGetVariantIntegervEXT [ void GetVariantIntegervEXT( uint id, enum value, int *data) ]
		- glGetVariantFloatvEXT [ void GetVariantFloatvEXT( uint id, enum value, float *data) ]
		- glGetVariantPointervEXT [ void GetVariantPointervEXT( uint id, enum value, void **data) ]
		- glGetInvariantBooleanvEXT [ void GetInvariantBooleanvEXT( uint id, enum value, boolean *data) ]
		- glGetInvariantIntegervEXT [ void GetInvariantIntegervEXT( uint id, enum value, int *data) ]
		- glGetInvariantFloatvEXT [ void GetInvariantFloatvEXT( uint id, enum value, float *data) ]
		- glGetLocalConstantBooleanvEXT [ void GetLocalConstantBooleanvEXT( uint id, enum value, boolean *data) ]
		- glGetLocalConstantIntegervEXT [ void GetLocalConstantIntegervEXT( uint id, enum value, int *data) ]
		- glGetLocalConstantFloatvEXT [ void GetLocalConstantFloatvEXT( uint id, enum value, float *data) ]
EXT_vertex_weighting [ source: EXT\EXT_vertex_weighting.txt ]
	- Strings = [ GL_EXT_vertex_weighting ]
	- Funcs:
		- glVertexWeightfEXT [ void VertexWeightfEXT(float weight) ]
		- glVertexWeightfvEXT [ void VertexWeightfvEXT(float *weight) ]
		- glVertexWeightPointerEXT [ void VertexWeightPointerEXT(int size, enum type, sizei stride, void *pointer) ]
EXT_win32_keyed_mutex [ source: EXT\EXT_win32_keyed_mutex.txt ]
	- Strings = [ GL_EXT_win32_keyed_mutex ]
	- Funcs:
		- glAcquireKeyedMutexWin32EXT [ boolean AcquireKeyedMutexWin32EXT(uint memory, uint64 key, uint timeout) ]
		- glReleaseKeyedMutexWin32EXT [ boolean ReleaseKeyedMutexWin32EXT(uint memory, uint64 key) ]
EXT_window_rectangles [ source: EXT\EXT_window_rectangles.txt ]
	- Strings = [ GL_EXT_window_rectangles ]
	- Funcs:
		- glWindowRectanglesEXT [ void WindowRectanglesEXT(enum mode, sizei count, const int box[]) ]
EXT_x11_sync_object [ source: EXT\EXT_x11_sync_object.txt ]
	- Strings = [ GL_EXT_x11_sync_object ]
	- Funcs:
		- glImportSyncEXT [ sync ImportSyncEXT(enum external_sync_type, intptr external_sync, bitfield flags) ]
EXT_YUV_target [ source: EXT\EXT_YUV_target.txt ]
	- Strings = [ GL_EXT_YUV_target ]
EXT_nurbs_tessellator [ source: EXT\GLU_EXT_nurbs_tessellator.txt ]
	- Strings = [ GLU_EXT_nurbs_tessellator ]
	- Funcs:
		- gluNurbsCallbackDataEXT [ void gluNurbsCallbackDataEXT(GLUnurbsObj* theNurb, void* userData) ]
EXT_object_space_tess [ source: EXT\GLU_EXT_object_space_tess.txt ]
	- Strings = [ GLU_EXT_object_space_tess ]
EXT_buffer_age [ source: EXT\GLX_EXT_buffer_age.txt ]
	- Strings = [ GLX_EXT_buffer_age ]
EXT_context_priority [ source: EXT\GLX_EXT_context_priority.txt ]
	- Strings = [ GLX_EXT_context_priority ]
EXT_create_context_es_profile EXT_create_context_es2_profile [ source: EXT\GLX_EXT_create_context_es2_profile.txt ]
	- Strings = [ GLX_EXT_create_context_es_profile GLX_EXT_create_context_es2_profile strings ]
EXT_import_context [ source: EXT\GLX_EXT_import_context.txt ]
	- Strings = [ GLX_EXT_import_context ]
	- Funcs:
		- glXGetCurrentDisplayEXT [ Display *glXGetCurrentDisplayEXT() ]
		- glXQueryContextInfoEXT [ int glXQueryContextInfoEXT(Display *dpy, GLXContext context, int attribute,int *value) ]
		- glXGetContextIDEXT [ GLXContextID glXGetContextIDEXT(const GLXContext context) ]
		- glXImportContextEXT [ GLXContext glXImportContextEXT(Display *dpy, GLXContextID contextID) ]
		- glXFreeContextEXT [ void glXFreeContextEXT(Display *dpy, GLXContext context) ]
EXT_libglvnd [ source: EXT\GLX_EXT_libglvnd.txt ]
	- Strings = [ GLX_EXT_libglvnd ]
EXT_no_config_context [ source: EXT\GLX_EXT_no_config_context.txt ]
	- Strings = [ GLX_EXT_no_config_context ]
EXT_stereo_tree [ source: EXT\GLX_EXT_stereo_tree.txt ]
	- Strings = [ GLX_EXT_stereo_tree ]
	- Funcs:
		- glXGetSelectedEvent [ void glXGetSelectedEvent(Display *dpy, GLXDrawable draw, unsigned long *event_mask) ]
EXT_swap_control_tear [ source: EXT\GLX_EXT_swap_control_tear.txt ]
	- Strings = [ GLX_EXT_swap_control_tear ]
EXT_texture_from_pixmap [ source: EXT\GLX_EXT_texture_from_pixmap.txt ]
	- Strings = [ GLX_EXT_texture_from_pixmap ]
	- Funcs:
		- glXBindTexImageEXT [ void glXBindTexImageEXT (Display *display, GLXDrawable drawable, int buffer, const int *attrib_list) ]
		- glXReleaseTexImageEXT [ void glXReleaseTexImageEXT (Display *display, GLXDrawable drawable, int buffer) ]
		- glEnd [ void glEnd () ]
EXT_visual_info [ source: EXT\GLX_EXT_visual_info.txt ]
	- Strings = [ GLX_EXT_visual_info ]
	- Funcs:
		- glXChooseVisual [ XVisualInfo* glXChooseVisual( Display *dpy, int screen, int *attrib_list ) ]
EXT_visual_rating [ source: EXT\GLX_EXT_visual_rating.txt ]
	- Strings = [ GLX_EXT_visual_rating ]
EXT_colorspace [ source: EXT\WGL_EXT_colorspace.txt ]
	- Strings = [ WGL_EXT_colorspace ]
WGL_EXT_create_context_es_profile WGL_EXT_create_context_es2_profile [ source: EXT\WGL_EXT_create_context_es2_profile.txt ]
	- Strings = [ WGL_EXT_create_context_es_profile WGL_EXT_create_context_es2_profile strings ]
EXT_depth_float [ source: EXT\WGL_EXT_depth_float.txt ]
	- Strings = [ WGL_EXT_depth_float ]
EXT_display_color_table [ UNDONE_SPECsource: EXT\WGL_EXT_display_color_table.txt ]
	- Strings = [ WGL_EXT_display_color_table ]
	- Funcs:
		- wglCreateDisplayColorTableEXT [ GLboolean wglCreateDisplayColorTableEXT(GLushort id) ]
		- wglLoadDisplayColorTableEXT [ GLboolean wglLoadDisplayColorTableEXT(GLushort *table, GLuint length) ]
		- wglBindDisplayColorTableEXT [ GLboolean wglBindDisplayColorTableEXT(GLushort id) ]
		- wglDestroyDisplayColorTableEXT [ void wglDestroyDisplayColorTableEXT(GLushort id) ]
EXT_extensions_string [ source: EXT\WGL_EXT_extensions_string.txt ]
	- Strings = [ WGL_EXT_extensions_string ]
	- Funcs:
		- wglGetExtensionsStringEXT [ char *wglGetExtensionsStringEXT(void) ]
EXT_make_current_read [ source: EXT\WGL_EXT_make_current_read.txt ]
	- Strings = [ WGL_EXT_make_current_read ]
	- Funcs:
		- wglMakeContextCurrentEXT [ BOOL wglMakeContextCurrentEXT(HDC hDrawDC, HDC hReadDC, HGLRC hglrc) ]
		- wglGetCurrentReadDCEXT [ HDC wglGetCurrentReadDCEXT(VOID) ]
EXT_multisample [ source: EXT\WGL_EXT_multisample.txt ]
	- Strings = [ GL_EXT_multisample WGL_EXT_multisample ]
	- Funcs:
		- glSampleMaskEXT [ void SampleMaskEXT(clampf value, boolean invert) ]
		- glSamplePatternEXT [ void SamplePatternEXT(enum pattern) ]
EXT_pbuffer [ source: EXT\WGL_EXT_pbuffer.txt ]
	- Strings = [ WGL_EXT_pbuffer ]
	- Funcs:
		- wglCreatePbufferEXT [ HPBUFFEREXT wglCreatePbufferEXT(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList) ]
		- wglGetPbufferDCEXT [ HDC wglGetPbufferDCEXT(HPBUFFEREXT hPbuffer) ]
		- wglReleasePbufferDCEXT [ int wglReleasePbufferDCEXT(HPBUFFEREXT hPbuffer, HDC hDC) ]
		- wglDestroyPbufferEXT [ BOOL wglDestroyPbufferEXT(HPBUFFEREXT hPbuffer) ]
		- wglQueryPbufferEXT [ BOOL wglQueryPbufferEXT(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue) ]
EXT_pixel_format [ source: EXT\WGL_EXT_pixel_format.txt ]
	- Strings = [ WGL_EXT_pixel_format ]
	- Funcs:
		- wglGetPixelFormatAttribivEXT [ BOOL wglGetPixelFormatAttribivEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues) ]
		- wglGetPixelFormatAttribfvEXT [ BOOL wglGetPixelFormatAttribfvEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues) ]
		- wglChoosePixelFormatEXT [ BOOL wglChoosePixelFormatEXT(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats) ]
EXT_swap_control [ source: EXT\WGL_EXT_swap_control.txt ]
	- Strings = [ WGL_EXT_swap_control ]
	- Funcs:
		- wglSwapIntervalEXT [ BOOL wglSwapIntervalEXT(int interval) ]
		- wglGetSwapIntervalEXT [ int wglGetSwapIntervalEXT(void) ]
EXT_swap_control_tear [ source: EXT\WGL_EXT_swap_control_tear.txt ]
	- Strings = [ WGL_EXT_swap_control_tear ]
FJ_shader_binary_GCCSO [ source: FJ\FJ_shader_binary_GCCSO.txt ]
	- Strings = [ GL_FJ_shader_binary_GCCSO ]
GREMEDY_frame_terminator [ source: GREMEDY\GREMEDY_frame_terminator.txt ]
	- Strings = [ GL_GREMEDY_frame_terminator ]
	- Funcs:
		- glFrameTerminatorGREMEDY [ void FrameTerminatorGREMEDY(void) ]
GREMEDY_string_marker [ source: GREMEDY\GREMEDY_string_marker.txt ]
	- Strings = [ GL_GREMEDY_string_marker ]
	- Funcs:
		- glStringMarkerGREMEDY [ void StringMarkerGREMEDY(sizei len, const void *string) ]
HP_convolution_border_modes [ source: HP\HP_convolution_border_modes.txt ]
	- Strings = [ GL_HP_convolution_border_modes ]
HP_image_transform [ source: HP\HP_image_transform.txt ]
	- Strings = [ GL_HP_image_transform ]
	- Funcs:
		- glImageTransformParameteriHP [ void ImageTransformParameteriHP(enum target, enum pname, const int param) ]
		- glImageTransformParameterfHP [ void ImageTransformParameterfHP(enum target, enum pname, const float param) ]
		- glImageTransformParameterivHP [ void ImageTransformParameterivHP(enum target, enum pname, const int* params) ]
		- glImageTransformParameterfvHP [ void ImageTransformParameterfvHP(enum target, enum pname, const float* params) ]
		- glGetImageTransformParameterivHP [ void GetImageTransformParameterivHP(enum target, enum pname, const int* params) ]
		- glGetImageTransformParameterfvHP [ void GetImageTransformParameterfvHP(enum target, enum pname, const float* params) ]
HP_occlusion_test [ UNDONE_SPECsource: HP\HP_occlusion_test.txt ]
	- Strings = [ GL_HP_occlusion_test Number 137 Overview GL_FALSE GL_FALSE GL_TRUE GL_TRUE ]
HP_texture_lighting [ UNDONE_SPECsource: HP\HP_texture_lighting.txt ]
	- Strings = [ GL_HP_texture_lighting ]
WGL_I3D_digital_video_control [ source: I3D\WGL_I3D_digital_video_control.txt ]
	- Strings = [ WGL_I3D_digital_video_control ]
	- Funcs:
		- wglGetDigitalVideoParametersI3D [ BOOL wglGetDigitalVideoParametersI3D(HDC hDC, int iAttribute, int *piValue) ]
		- wglSetDigitalVideoParametersI3D [ BOOL wglSetDigitalVideoParametersI3D(HDC hDC, int iAttribute, const int *piValue) ]
WGL_I3D_gamma [ source: I3D\WGL_I3D_gamma.txt ]
	- Strings = [ WGL_I3D_gamma ]
	- Funcs:
		- wglGetGammaTableParametersI3D [ BOOL wglGetGammaTableParametersI3D(HDC hDC, int iAttribute, int *piValue) ]
		- wglSetGammaTableParametersI3D [ BOOL wglSetGammaTableParametersI3D(HDC hDC, int iAttribute, const int *piValue) ]
		- wglGetGammaTableI3D [ BOOL wglGetGammaTableI3D(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue) ]
		- wglSetGammaTableI3D [ BOOL wglSetGammaTableI3D(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue) ]
WGL_I3D_genlock [ source: I3D\WGL_I3D_genlock.txt ]
	- Strings = [ WGL_I3D_genlock ]
	- Funcs:
		- wglEnableGenlockI3D [ BOOL wglEnableGenlockI3D(HDC hDC) ]
		- wglDisableGenlockI3D [ BOOL wglDisableGenlockI3D(HDC hDC) ]
		- wglIsEnabledGenlockI3D [ BOOL wglIsEnabledGenlockI3D(HDC hDC, BOOL *pFlag) ]
		- wglGenlockSourceI3D [ BOOL wglGenlockSourceI3D(HDC hDC, UINT uSource) ]
		- wglGetGenlockSourceI3D [ BOOL wglGetGenlockSourceI3D(HDC hDC, UINT *uSource) ]
		- wglGenlockSourceEdgeI3D [ BOOL wglGenlockSourceEdgeI3D(HDC hDC, UINT uEdge) ]
		- wglGetGenlockSourceEdgeI3D [ BOOL wglGetGenlockSourceEdgeI3D(HDC hDC, UINT *uEdge) ]
		- wglGenlockSampleRateI3D [ BOOL wglGenlockSampleRateI3D(HDC hDC, UINT uRate) ]
		- wglGetGenlockSampleRateI3D [ BOOL wglGetGenlockSampleRateI3D(HDC hDC, UINT *uRate) ]
		- wglGenlockSourceDelayI3D [ BOOL wglGenlockSourceDelayI3D(HDC hDC, UINT uDelay) ]
		- wglGetGenlockSourceDelayI3D [ BOOL wglGetGenlockSourceDelayI3D(HDC hDC, UINT *uDelay) ]
		- wglQueryGenlockMaxSourceDelayI3D [ BOOL wglQueryGenlockMaxSourceDelayI3D(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay) ]
WGL_I3D_image_buffer [ source: I3D\WGL_I3D_image_buffer.txt ]
	- Strings = [ WGL_I3D_image_buffer ]
	- Funcs:
		- wglCreateImageBufferI3D [ LPVOID wglCreateImageBufferI3D(HDC hDC, DWORD dwSize, UINT uFlags) ]
		- wglDestroyImageBufferI3D [ BOOL wglDestroyImageBufferI3D(HDC hDC, LPVOID pAddress) ]
		- wglAssociateImageBufferEventsI3D [ BOOL wglAssociateImageBufferEventsI3D(HDC hdc, HANDLE *pEvent, LPVOID *pAddress, DWORD *pSize, UINT count) ]
		- wglReleaseImageBufferEventsI3D [ BOOL wglReleaseImageBufferEventsI3D(HDC hdc, LPVOID *pAddress, UINT count) ]
WGL_I3D_swap_frame_lock [ source: I3D\WGL_I3D_swap_frame_lock.txt ]
	- Strings = [ WGL_I3D_swap_frame_lock ]
	- Funcs:
		- wglEnableFrameLockI3D [ BOOL wglEnableFrameLockI3D(VOID) ]
		- wglDisableFrameLockI3D [ BOOL wglDisableFrameLockI3D(VOID) ]
		- wglIsEnabledFrameLockI3D [ BOOL wglIsEnabledFrameLockI3D(BOOL *pFlag) ]
		- wglQueryFrameLockMasterI3D [ BOOL wglQueryFrameLockMasterI3D(BOOL *pFlag) ]
WGL_I3D_swap_frame_usage [ source: I3D\WGL_I3D_swap_frame_usage.txt ]
	- Strings = [ WGL_I3D_swap_frame_usage ]
	- Funcs:
		- wglGetFrameUsageI3D [ BOOL wglGetFrameUsageI3D(float *pUsage) ]
		- wglBeginFrameTrackingI3D [ BOOL wglBeginFrameTrackingI3D(void) ]
		- wglEndFrameTrackingI3D [ BOOL wglEndFrameTrackingI3D(void) ]
		- wglQueryFrameTrackingI3D [ BOOL wglQueryFrameTrackingI3D(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage) ]
IBM_cull_vertex [ source: IBM\IBM_cull_vertex.txt ]
	- Strings = [ GL_IBM_cull_vertex ]
IBM_multimode_draw_arrays [ source: IBM\IBM_multimode_draw_arrays.txt ]
	- Strings = [ GL_IBM_multimode_draw_arrays ]
	- Funcs:
		- glMultiModeDrawArraysIBM [ void glMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride) ]
		- glMultiModeDrawElementsIBM [ void glMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const void * const *indices, GLsizei primcount, GLint modestride) ]
IBM_rasterpos_clip [ source: IBM\IBM_rasterpos_clip.txt ]
	- Strings = [ GL_IBM_rasterpos_clip ]
IBM_static_data [ source: IBM\IBM_static_data.txt ]
	- Strings = [ GL_IBM_static_data ]
	- Funcs:
		- glFlushStaticDataIBM [ void FlushStaticDataIBM(GLenum target) ]
IBM_texture_mirrored_repeat [ source: IBM\IBM_texture_mirrored_repeat.txt ]
	- Strings = [ GL_IBM_texture_mirrored_repeat ]
IBM_vertex_array_lists [ source: IBM\IBM_vertex_array_lists.txt ]
	- Strings = [ GL_IBM_vertex_array_lists ]
	- Funcs:
		- glColorPointerListIBM [ void ColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glSecondaryColorPointerListIBM [ void SecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glEdgeFlagPointerListIBM [ void EdgeFlagPointerListIBM (GLint stride, const GLboolean **pointer, GLint ptrstride) ]
		- glFogCoordPointerListIBM [ void FogCoordPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glIndexPointerListIBM [ void IndexPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glNormalPointerListIBM [ void NormalPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glTexCoordPointerListIBM [ void TexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
		- glVertexPointerListIBM [ void VertexPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) ]
IGLOO_swap_triangle_strip_vertex_pointerXXX [ UNDONE_SPECsource: IGLOO\IGLOO_swap_triangle_strip_vertex_pointerXXX.txt ]
	- Strings = [ GL_IGLOO_swap_triangle_strip_vertex_pointerXXX glXQueryExtensionsString ]
	- Funcs:
		- glSwapTriangleStripVertexPointerXXX [ void SwapTriangleStripVertexPointerXXX(void) ]
IGLOO_toggle_color_and_light [ UNDONE_SPECsource: IGLOO\IGLOO_toggle_color_and_lightXXX.txt ]
	- Strings = [ GL_IGLOO_toggle_color_and_lightXXX glXQueryExtensionsString ]
	- Funcs:
		- glIGLOOToggleColorAndLightXXX [ void IGLOOToggleColorAndLightXXX(GLboolean switch) ]
IGLOO_viewport_offsetXXX This not an EXT SGI SGIS or SGIX extension. It violates the prefix rules. Also the XXX violates the no-caps in the body of the name rule. [ UNDONE_SPECsource: IGLOO\IGLOO_viewport_offsetXXX.txt ]
	- Strings = [ GL_IGLOO_viewport_offsetXXX ]
IMG_bindless_texture [ source: IMG\IMG_bindless_texture.txt ]
	- Strings = [ GL_IMG_bindless_texture ]
	- Funcs:
		- glGetTextureHandleIMG [ uint64 GetTextureHandleIMG(uint texture) ]
		- glGetTextureSamplerHandleIMG [ uint64 GetTextureSamplerHandleIMG(uint texture, uint sampler) ]
		- glUniformHandleui64IMG [ void UniformHandleui64IMG(int location, uint64 value) ]
		- glUniformHandleui64vIMG [ void UniformHandleui64vIMG(int location, sizei count, const uint64 *value) ]
		- glProgramUniformHandleui64IMG [ void ProgramUniformHandleui64IMG(uint program, int location, uint64 value) ]
		- glProgramUniformHandleui64vIMG [ void ProgramUniformHandleui64vIMG(uint program, int location, sizei count, const uint64 *values) ]
IMG_framebuffer_downsample [ source: IMG\IMG_framebuffer_downsample.txt ]
	- Strings = [ GL_IMG_framebuffer_downsample ]
	- Funcs:
		- glFramebufferTexture2DDownsampleIMG [ void FramebufferTexture2DDownsampleIMG( enum target, enum attachment, enum textarget, uint texture, int level, int xscale, int yscale) ]
		- glFramebufferTextureLayerDownsampleIMG [ void FramebufferTextureLayerDownsampleIMG( enum target, enum attachment, uint texture, int level, int layer, int xscale, int yscale) ]
IMG_multisampled_render_to_texture [ source: IMG\IMG_multisampled_render_to_texture.txt ]
	- Strings = [ GL_IMG_multisampled_render_to_texture ]
	- Funcs:
		- glRenderbufferStorageMultisampleIMG [ void RenderbufferStorageMultisampleIMG( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
		- glFramebufferTexture2DMultisampleIMG [ void FramebufferTexture2DMultisampleIMG( enum target, enum attachment, enum textarget, uint texture, int level, sizei samples) ]
IMG_program_binary [ source: IMG\IMG_program_binary.txt ]
	- Strings = [ GL_IMG_program_binary ]
IMG_read_format [ source: IMG\IMG_read_format.txt ]
	- Strings = [ GL_IMG_read_format ]
IMG_shader_binary [ source: IMG\IMG_shader_binary.txt ]
	- Strings = [ GL_IMG_shader_binary ]
IMG_texture_compression_pvrtc [ source: IMG\IMG_texture_compression_pvrtc.txt ]
	- Strings = [ GL_IMG_texture_compression_pvrtc ]
IMG_texture_compression_pvrtc2 [ source: IMG\IMG_texture_compression_pvrtc2.txt ]
	- Strings = [ GL_IMG_texture_compression_pvrtc2 ]
IMG_texture_env_enhanced_fixed_function [ source: IMG\IMG_texture_env_enhanced_fixed_function.txt ]
	- Strings = [ GL_IMG_texture_env_enhanced_fixed_function ]
IMG_texture_filter_cubic [ source: IMG\IMG_texture_filter_cubic.txt ]
	- Strings = [ GL_IMG_texture_filter_cubic ]
IMG_user_clip_plane [ source: IMG\IMG_user_clip_plane.txt ]
	- Strings = [ GL_IMG_user_clip_plane ]
	- Funcs:
		- glClipPlanefIMG [ void ClipPlanefIMG( GLenum p, GLfloat eqn[4] ) ]
		- glClipPlanexIMG [ void ClipPlanexIMG( GLenum p, GLfixed eqn[4] ) ]
INGR_color_clamp [ source: INGR\INGR_color_clamp.txt ]
	- Strings = [ GL_INGR_color_clamp ]
INGR_interlace_read [ source: INGR\INGR_interlace_read.txt ]
	- Strings = [ GL_INGR_interlace_read ]
INTEL_swap_event [ source: INTEL\GLX_INTEL_swap_event.txt ]
	- Strings = [ GLX_INTEL_swap_event ]
INTEL_blackhole_render [ source: INTEL\INTEL_blackhole_render.txt ]
	- Strings = [ GL_INTEL_blackhole_render ]
INTEL_conservative_rasterization [ source: INTEL\INTEL_conservative_rasterization.txt ]
	- Strings = [ GL_INTEL_conservative_rasterization ]
INTEL_fragment_shader_ordering [ source: INTEL\INTEL_fragment_shader_ordering.txt ]
	- Strings = [ GL_INTEL_fragment_shader_ordering ]
INTEL_framebuffer_CMAA [ source: INTEL\INTEL_framebuffer_CMAA.txt ]
	- Strings = [ GL_INTEL_framebuffer_CMAA ]
	- Funcs:
		- glApplyFramebufferAttachmentCMAAINTEL [ void ApplyFramebufferAttachmentCMAAINTEL() ]
INTEL_map_texture [ source: INTEL\INTEL_map_texture.txt ]
	- Strings = [ GL_INTEL_map_texture ]
	- Funcs:
		- glMapTexture2DINTEL [ void* MapTexture2DINTEL(uint texture, int level, bitfield access, int *stride, enum *layout) ]
		- glUnmapTexture2DINTEL [ void UnmapTexture2DINTEL(uint texture, int level) ]
		- glSyncTextureINTEL [ void SyncTextureINTEL(uint texture) ]
INTEL_parallel_arrays [ source: INTEL\INTEL_parallel_arrays.txt ]
	- Strings = [ GL_INTEL_parallel_arrays ]
	- Funcs:
		- glVertexPointervINTEL [ void VertexPointervINTEL(int size, enum type, const void** pointer) ]
		- glNormalPointervINTEL [ void NormalPointervINTEL(enum type, const void** pointer) ]
		- glColorPointervINTEL [ void ColorPointervINTEL(int size, enum type, const void** pointer) ]
		- glTexCoordPointervINTEL [ void TexCoordPointervINTEL(int size, enum type, const void** pointer) ]
INTEL_performance_query [ source: INTEL\INTEL_performance_query.txt ]
	- Strings = [ GL_INTEL_performance_query ]
	- Funcs:
		- glGetFirstPerfQueryIdINTEL [ void GetFirstPerfQueryIdINTEL(uint *queryId) ]
		- glGetNextPerfQueryIdINTEL [ void GetNextPerfQueryIdINTEL(uint queryId, uint *nextQueryId) ]
		- glGetPerfQueryIdByNameINTEL [ void GetPerfQueryIdByNameINTEL(char *queryName, uint *queryId) ]
		- glGetPerfQueryInfoINTEL [ void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, char *queryName, uint *dataSize, uint *noCounters, uint *noInstances, uint *capsMask) ]
		- glGetPerfCounterInfoINTEL [ void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, char *counterName, uint counterDescLength, char *counterDesc, uint *counterOffset, uint *counterDataSize, uint *counterTypeEnum, uint *counterDataTypeEnum, uint64 *rawCounterMaxValue) ]
		- glCreatePerfQueryINTEL [ void CreatePerfQueryINTEL(uint queryId, uint *queryHandle) ]
		- glDeletePerfQueryINTEL [ void DeletePerfQueryINTEL(uint queryHandle) ]
		- glBeginPerfQueryINTEL [ void BeginPerfQueryINTEL(uint queryHandle) ]
		- glEndPerfQueryINTEL [ void EndPerfQueryINTEL(uint queryHandle) ]
		- glGetPerfQueryDataINTEL [ void GetPerfQueryDataINTEL(uint queryHandle, uint flags, sizei dataSize, void *data, uint *bytesWritten) ]
INTEL_shader_integer_functions2 [ source: INTEL\INTEL_shader_integer_functions2.txt ]
	- Strings = [ GL_INTEL_shader_integer_functions2 ]
INTEL_texture_scissor [ source: INTEL\INTEL_texture_scissor.txt ]
	- Strings = [ GL_INTEL_texture_scissor ]
	- Funcs:
		- glTexScissorINTEL [ void TexScissorINTEL(GLenum target, GLclampf tlow, GLclampf thigh) ]
		- glTexScissorFuncINTEL [ void TexScissorFuncINTEL(GLenum target, Glenum lfunc, Glenum hfunc) ]
KHR_blend_equation_advanced [ source: KHR\KHR_blend_equation_advanced.txt ]
	- Strings = [ GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent ]
	- Funcs:
		- glBlendBarrierKHR [ void BlendBarrierKHR(void) ]
KHR_context_flush_control [ source: KHR\KHR_context_flush_control.txt ]
	- Strings = [ GL_KHR_context_flush_control EGL_KHR_context_flush_control GLX_ARB_context_flush_control WGL_ARB_context_flush_control ]
KHR_debug [ source: KHR\KHR_debug.txt ]
	- Strings = [ GL_KHR_debug ]
	- Funcs:
		- glDebugMessageControlKHR [ void DebugMessageControl(enum source, enum type, enum severity, sizei count, const uint* ids, boolean enabled) ]
		- glDebugMessageInsertKHR [ void DebugMessageInsert(enum source, enum type, uint id, enum severity, sizei length, const char* buf) ]
		- glDebugMessageCallbackKHR [ void DebugMessageCallback(DEBUGPROC callback, const void* userParam) ]
		- glGetDebugMessageLogKHR [ uint GetDebugMessageLog(uint count, sizei bufSize, enum* sources, enum* types, uint* ids, enum* severities, sizei* lengths, char* messageLog) ]
		- glGetPointervKHR [ void GetPointerv(enum pname, void** params) ]
		- glPushDebugGroupKHR [ void PushDebugGroup(enum source, uint id, sizei length, const char * message) ]
		- glPopDebugGroupKHR [ void PopDebugGroup(void) ]
		- glObjectLabelKHR [ void ObjectLabel(enum identifier, uint name, sizei length, const char *label) ]
		- glGetObjectLabelKHR [ void GetObjectLabel(enum identifier, uint name, sizei bufSize, sizei *length, char *label) ]
		- glObjectPtrLabelKHR [ void ObjectPtrLabel(void* ptr, sizei length, const char *label) ]
		- glGetObjectPtrLabelKHR [ void GetObjectPtrLabel(void* ptr, sizei bufSize, sizei *length, char *label) ]
KHR_no_error [ source: KHR\KHR_no_error.txt ]
	- Strings = [ GL_KHR_no_error ]
KHR_parallel_shader_compile [ source: KHR\KHR_parallel_shader_compile.txt ]
	- Strings = [ GL_KHR_parallel_shader_compile ]
	- Funcs:
		- glMaxShaderCompilerThreadsKHR [ void MaxShaderCompilerThreadsKHR(uint count) ]
KHR_robustness [ source: KHR\KHR_robustness.txt ]
	- Strings = [ GL_KHR_robustness ]
	- Funcs:
		- glGetGraphicsResetStatusKHR [ enum GetGraphicsResetStatus() ]
		- glReadnPixelsKHR [ void ReadnPixels(int x, int y, sizei width, sizei height, enum format, enum type, sizei bufSize, void *data) ]
		- glGetnUniformfvKHR [ void GetnUniformfv(uint program, int location, sizei bufSize, float *params) ]
		- glGetnUniformivKHR [ void GetnUniformiv(uint program, int location, sizei bufSize, int *params) ]
		- glGetnUniformuivKHR [ void GetnUniformuiv(uint program, int location, sizei bufSize, uint *params) ]
KHR_robust_buffer_access_behavior [ source: KHR\KHR_robust_buffer_access_behavior.txt ]
	- Strings = [ GL_KHR_robust_buffer_access_behavior ]
KHR_shader_subgroup [ source: KHR\KHR_shader_subgroup.txt ]
	- Strings = [ GL_KHR_shader_subgroup ]
KHR_texture_compression_astc_hdr [ source: KHR\KHR_texture_compression_astc_hdr.txt ]
	- Strings = [ GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_ldr ]
KHR_texture_compression_astc_sliced_3d [ source: KHR\KHR_texture_compression_astc_sliced_3d.txt ]
	- Strings = [ GL_KHR_texture_compression_astc_sliced_3d ]
MESA_agp_offset [ source: MESA\GLX_MESA_agp_offset.txt ]
	- Strings = [ GLX_MESA_agp_offset ]
	- Funcs:
		- glXGetAGPOffsetMESA [ int glXGetAGPOffsetMESA( const void *pointer ) ]
MESA_copy_sub_buffer [ source: MESA\GLX_MESA_copy_sub_buffer.txt ]
	- Strings = [ GLX_MESA_copy_sub_buffer ]
	- Funcs:
		- glXCopySubBufferMESA [ void glXCopySubBufferMESA( Display *dpy, GLXDrawable drawable, int x, int y, int width, int height ) ]
MESA_pixmap_colormap [ source: MESA\GLX_MESA_pixmap_colormap.txt ]
	- Strings = [ GLX_MESA_pixmap_colormap ]
	- Funcs:
		- glXCreateGLXPixmapMESA [ GLXPixmap glXCreateGLXPixmapMESA( Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap ) ]
MESA_query_renderer [ source: MESA\GLX_MESA_query_renderer.txt ]
	- Strings = [ GLX_MESA_query_renderer ]
	- Funcs:
		- glXQueryRendererIntegerMESA [ Bool glXQueryRendererIntegerMESA(Display *dpy, int screen, int renderer, int attribute, unsigned int *value) ]
		- glXQueryCurrentRendererIntegerMESA [ Bool glXQueryCurrentRendererIntegerMESA(int attribute, unsigned int *value) ]
		- glXQueryRendererStringMESA [ char *glXQueryRendererStringMESA(Display *dpy, int screen, int renderer, int attribute) ]
		- glXQueryCurrentRendererStringMESA [ char *glXQueryCurrentRendererStringMESA(int attribute) ]
MESA_release_buffers [ source: MESA\GLX_MESA_release_buffers.txt ]
	- Strings = [ GLX_MESA_release_buffers ]
	- Funcs:
		- glXReleaseBuffersMESA [ Bool glXReleaseBuffersMESA( Display *dpy, GLXDrawable d ) ]
MESA_set_3dfx_mode [ source: MESA\GLX_MESA_set_3dfx_mode.txt ]
	- Strings = [ GLX_MESA_set_3dfx_mode ]
	- Funcs:
		- glXSet3DfxModeMESA [ GLboolean glXSet3DfxModeMESA( GLint mode ) ]
MESA_swap_control [ source: MESA\GLX_MESA_swap_control.txt ]
	- Strings = [ GLX_MESA_swap_control ]
	- Funcs:
		- glXSwapIntervalMESA [ int glXSwapIntervalMESA(unsigned int interval) ]
		- glXGetSwapIntervalMESA [ int glXGetSwapIntervalMESA(void) ]
MESA_framebuffer_flip_y [ source: MESA\MESA_framebuffer_flip_y.txt ]
	- Strings = [ GL_MESA_framebuffer_flip_y ]
	- Funcs:
		- glFramebufferParameteriMESA [ void FramebufferParameteriMESA(enum target, enum pname, int param) ]
		- glGetFramebufferParameterivMESA [ void GetFramebufferParameterivMESA(enum target, enum pname, int *params) ]
MESA_pack_invert [ source: MESA\MESA_pack_invert.txt ]
	- Strings = [ GL_MESA_pack_invert ]
MESA_program_binary_formats [ source: MESA\MESA_program_binary_formats.txt ]
	- Strings = [ GL_MESA_program_binary_formats ]
MESA_resize_buffers [ source: MESA\MESA_resize_buffers.txt ]
	- Strings = [ GL_MESA_resize_buffers ]
	- Funcs:
		- glResizeBuffersMESA [ void glResizeBuffersMESA( void ) ]
MESA_shader_integer_functions [ source: MESA\MESA_shader_integer_functions.txt ]
	- Strings = [ GL_MESA_shader_integer_functions ]
MESA_tile_raster_order [ source: MESA\MESA_tile_raster_order.txt ]
	- Strings = [ GL_MESA_tile_raster_order ]
MESA_window_pos [ source: MESA\MESA_window_pos.txt ]
	- Strings = [ GL_MESA_window_pos ]
	- Funcs:
		- glWindowPos2dMESA [ void WindowPos2dMESA(double x, double y) ]
		- glWindowPos2fMESA [ void WindowPos2fMESA(float x, float y) ]
		- glWindowPos2iMESA [ void WindowPos2iMESA(int x, int y) ]
		- glWindowPos2sMESA [ void WindowPos2sMESA(short x, short y) ]
		- glWindowPos2ivMESA [ void WindowPos2ivMESA(const int *p) ]
		- glWindowPos2svMESA [ void WindowPos2svMESA(const short *p) ]
		- glWindowPos2fvMESA [ void WindowPos2fvMESA(const float *p) ]
		- glWindowPos2dvMESA [ void WindowPos2dvMESA(const double *p) ]
		- glWindowPos3iMESA [ void WindowPos3iMESA(int x, int y, int z) ]
		- glWindowPos3sMESA [ void WindowPos3sMESA(short x, short y, short z) ]
		- glWindowPos3fMESA [ void WindowPos3fMESA(float x, float y, float z) ]
		- glWindowPos3dMESA [ void WindowPos3dMESA(double x, double y, double z) ]
		- glWindowPos3ivMESA [ void WindowPos3ivMESA(const int *p) ]
		- glWindowPos3svMESA [ void WindowPos3svMESA(const short *p) ]
		- glWindowPos3fvMESA [ void WindowPos3fvMESA(const float *p) ]
		- glWindowPos3dvMESA [ void WindowPos3dvMESA(const double *p) ]
		- glWindowPos4iMESA [ void WindowPos4iMESA(int x, int y, int z, int w) ]
		- glWindowPos4sMESA [ void WindowPos4sMESA(short x, short y, short z, short w) ]
		- glWindowPos4fMESA [ void WindowPos4fMESA(float x, float y, float z, float w) ]
		- glWindowPos4dMESA [ void WindowPos4dMESA(double x, double y, double z, double w) ]
		- glWindowPos4ivMESA [ void WindowPos4ivMESA(const int *p) ]
		- glWindowPos4svMESA [ void WindowPos4svMESA(const short *p) ]
		- glWindowPos4fvMESA [ void WindowPos4fvMESA(const float *p) ]
		- glWindowPos4dvMESA [ void WindowPos4dvMESA(const double *p) ]
MESA_ycbcr_texture [ source: MESA\MESA_ycbcr_texture.txt ]
	- Strings = [ GL_MESA_ycbcr_texture ]
MESAX_texture_stack [ source: MESAX\MESAX_texture_stack.txt ]
	- Strings = [ GL_MESAX_texture_stack ]
NV_coverage_sample [ source: NV\EGL_NV_coverage_sample.txt ]
	- Strings = [ GL_NV_coverage_sample EGL_NV_coverage_sample ]
	- Funcs:
		- glCoverageMaskNV [ void CoverageMaskNV( boolean mask ) ]
		- glCoverageOperationNV [ void CoverageOperationNV( enum operation ) ]
NV_depth_nonlinear [ source: NV\EGL_NV_depth_nonlinear.txt ]
	- Strings = [ GL_NV_depth_nonlinear EGL_NV_depth_nonlinear ]
GLX_NV_copy_buffer [ source: NV\GLX_NV_copy_buffer.txt ]
	- Strings = [ GLX_NV_copy_buffer ]
	- Funcs:
		- glXCopyBufferSubDataNV [ void glXCopyBufferSubDataNV(Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) ]
		- glXNamedCopyBufferSubDataNV [ void glXNamedCopyBufferSubDataNV(Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) ]
NV_delay_before_swap [ source: NV\GLX_NV_delay_before_swap.txt ]
	- Strings = [ GLX_NV_delay_before_swap ]
	- Funcs:
		- glXDelayBeforeSwapNV [ Bool glXDelayBeforeSwapNV(Display *dpy, GLXDrawable drawable, GLfloat seconds) ]
NV_multigpu_context [ source: NV\GLX_NV_multigpu_context.txt ]
	- Strings = [ GLX_NV_multigpu_context ]
NV_swap_group [ source: NV\GLX_NV_swap_group.txt ]
	- Strings = [ GLX_NV_swap_group ]
	- Funcs:
		- glXJoinSwapGroupNV [ Bool glXJoinSwapGroupNV(Display *dpy, GLXDrawable drawable, GLuint group) ]
		- glXBindSwapBarrierNV [ Bool glXBindSwapBarrierNV(Display *dpy, GLuint group, GLuint barrier) ]
		- glXQuerySwapGroupNV [ Bool glXQuerySwapGroupNV(Display *dpy, GLXDrawable drawable, GLuint *group, GLuint *barrier) ]
		- glXQueryMaxSwapGroupsNV [ Bool glXQueryMaxSwapGroupsNV(Display *dpy, int screen, GLuint *maxGroups, GLuint *maxBarriers) ]
		- glXQueryFrameCountNV [ Bool glXQueryFrameCountNV(Display *dpy, int screen, GLuint *count) ]
		- glXResetFrameCountNV [ Bool glXResetFrameCountNV(Display *dpy, int screen) ]
NV_video_output [ source: NV\GLX_NV_video_out.txt ]
	- Strings = [ GLX_NV_video_out ]
	- Funcs:
		- glXGetVideoDeviceNV [ int glXGetVideoDeviceNV(Display *dpy, int screen, int numVideoDevices, GLXVideoDeviceNV *pVideoDevice) ]
		- glXReleaseVideoDeviceNV [ int glXReleaseVideoDeviceNV(Display *dpy, int screen, GLXVideoDeviceNV VideoDevice) ]
		- glXBindVideoImageNV [ int glXBindVideoImageNV(Display *dpy, GLXVideoDeviceNV VideoDevice, GLXPbuffer pbuf, int iVideoBuffer) ]
		- glXReleaseVideoImageNV [ int glXReleaseVideoImageNV(Display *dpy, GLXPbuffer pbuf) ]
		- glXSendPbufferToVideoNV [ int glXSendPbufferToVideoNV(Display *dpy, GLXPbuffer pbuf, int iBufferType, unsigned long *pulCounterPbuffer, GLboolean bBlock) ]
		- glXGetVideoInfoNV [ int glXGetVideoInfoNV(Display *dpy, int screen, GLXVideoDeviceNV VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo) ]
NV_3dvision_settings [ source: NV\NV_3dvision_settings.txt ]
	- Strings = [ GL_NV_3dvision_settings ]
	- Funcs:
		- glStereoParameterfNV [ void StereoParameterfNV(enum pname, float param) ]
		- glStereoParameteriNV [ void StereoParameteriNV(enum pname, int param) ]
NV_alpha_to_coverage_dither_control [ source: NV\NV_alpha_to_coverage_dither_control.txt ]
	- Strings = [ GL_NV_alpha_to_coverage_dither_control ]
	- Funcs:
		- glAlphaToCoverageDitherControlNV [ void AlphaToCoverageDitherControlNV(enum mode) ]
NV_bgr [ source: NV\NV_bgr.txt ]
	- Strings = [ GL_NV_bgr ]
NV_bindless_multi_draw_indirect [ source: NV\NV_bindless_multi_draw_indirect.txt ]
	- Strings = [ GL_NV_bindless_multi_draw_indirect ]
	- Funcs:
		- glMultiDrawArraysIndirectBindlessNV [ void MultiDrawArraysIndirectBindlessNV(enum mode, const void *indirect, sizei drawCount, sizei stride, int vertexBufferCount) ]
		- glMultiDrawElementsIndirectBindlessNV [ void MultiDrawElementsIndirectBindlessNV(enum mode, enum type, const void *indirect, sizei drawCount, sizei stride, int vertexBufferCount) ]
NV_bindless_multi_draw_indirect_count [ source: NV\NV_bindless_multi_draw_indirect_count.txt ]
	- Strings = [ GL_NV_bindless_multi_draw_indirect_count ]
	- Funcs:
		- glMultiDrawArraysIndirectBindlessCountNV [ void MultiDrawArraysIndirectBindlessCountNV(enum mode, const void *indirect, intptr drawCount, sizei maxDrawCount, sizei stride, int vertexBufferCount) ]
		- glMultiDrawElementsIndirectBindlessCountNV [ void MultiDrawElementsIndirectBindlessCountNV(enum mode, enum type, const void *indirect, intptr drawCount, sizei maxDrawCount, sizei stride, int vertexBufferCount) ]
NV_bindless_texture [ source: NV\NV_bindless_texture.txt ]
	- Strings = [ GL_NV_bindless_texture ]
	- Funcs:
		- glGetTextureHandleNV [ uint64 GetTextureHandleNV(uint texture) ]
		- glGetTextureSamplerHandleNV [ uint64 GetTextureSamplerHandleNV(uint texture, uint sampler) ]
		- glMakeTextureHandleResidentNV [ void MakeTextureHandleResidentNV(uint64 handle) ]
		- glMakeTextureHandleNonResidentNV [ void MakeTextureHandleNonResidentNV(uint64 handle) ]
		- glGetImageHandleNV [ uint64 GetImageHandleNV(uint texture, int level, boolean layered, int layer, enum format) ]
		- glMakeImageHandleResidentNV [ void MakeImageHandleResidentNV(uint64 handle, enum access) ]
		- glMakeImageHandleNonResidentNV [ void MakeImageHandleNonResidentNV(uint64 handle) ]
		- glUniformHandleui64NV [ void UniformHandleui64NV(int location, uint64 value) ]
		- glUniformHandleui64vNV [ void UniformHandleui64vNV(int location, sizei count, const uint64 *value) ]
		- glProgramUniformHandleui64NV [ void ProgramUniformHandleui64NV(uint program, int location, uint64 value) ]
		- glProgramUniformHandleui64vNV [ void ProgramUniformHandleui64vNV(uint program, int location, sizei count, const uint64 *values) ]
		- glIsTextureHandleResidentNV [ boolean IsTextureHandleResidentNV(uint64 handle) ]
		- glIsImageHandleResidentNV [ boolean IsImageHandleResidentNV(uint64 handle) ]
NV_blend_equation_advanced [ source: NV\NV_blend_equation_advanced.txt ]
	- Strings = [ GL_NV_blend_equation_advanced GL_NV_blend_equation_advanced_coherent ]
	- Funcs:
		- glBlendParameteriNV [ void BlendParameteriNV(enum pname, int value) ]
		- glBlendBarrierNV [ void BlendBarrierNV(void) ]
NV_blend_minmax_factor [ source: NV\NV_blend_minmax_factor.txt ]
	- Strings = [ GL_NV_blend_minmax_factor ]
NV_blend_square [ source: NV\NV_blend_square.txt ]
	- Strings = [ GL_NV_blend_square ]
NV_clip_space_w_scaling [ source: NV\NV_clip_space_w_scaling.txt ]
	- Strings = [ GL_NV_clip_space_w_scaling ]
	- Funcs:
		- glViewportPositionWScaleNV [ void ViewportPositionWScaleNV(uint index, float xcoeff, float ycoeff) ]
NV_command_list [ source: NV\NV_command_list.txt ]
	- Strings = [ GL_NV_command_list ]
	- Funcs:
		- glCreateStatesNV [ void CreateStatesNV(sizei n, uint *states) ]
		- glDeleteStatesNV [ void DeleteStatesNV(sizei n, const uint *states) ]
		- glIsStateNV [ boolean IsStateNV(uint state) ]
		- glStateCaptureNV [ void StateCaptureNV(uint state, enum mode) ]
		- glGetCommandHeaderNV [ uint GetCommandHeaderNV(enum tokenID, uint size) ]
		- glGetStageIndexNV [ ushort GetStageIndexNV(enum shadertype) ]
		- glDrawCommandsNV [ void DrawCommandsNV(enum primitiveMode, uint buffer, const intptr* indirects, const sizei* sizes, uint count) ]
		- glDrawCommandsAddressNV [ void DrawCommandsAddressNV(enum primitiveMode, const uint64* indirects, const sizei* sizes, uint count) ]
		- glDrawCommandsStatesNV [ void DrawCommandsStatesNV(uint buffer, const intptr* indirects, const sizei* sizes, const uint* states, const uint* fbos, uint count) ]
		- glDrawCommandsStatesAddressNV [ void DrawCommandsStatesAddressNV(const uint64* indirects, const sizei* sizes, const uint* states, const uint* fbos, uint count) ]
		- glCreateCommandListsNV [ void CreateCommandListsNV(sizei n, uint *lists) ]
		- glDeleteCommandListsNV [ void DeleteCommandListsNV(sizei n, const uint *lists) ]
		- glIsCommandListNV [ boolean IsCommandListNV(uint list) ]
		- glListDrawCommandsStatesClientNV [ void ListDrawCommandsStatesClientNV(uint list, uint segment, const void** indirects, const sizei* sizes, const uint* states, const uint* fbos, uint count) ]
		- glCommandListSegmentsNV [ void CommandListSegmentsNV(uint list, uint segments) ]
		- glCompileCommandListNV [ void CompileCommandListNV(uint list) ]
		- glCallCommandListNV [ void CallCommandListNV(uint list) ]
NV_compute_program5 [ source: NV\NV_compute_program5.txt ]
	- Strings = [ GL_NV_compute_program5 ]
NV_compute_shader_derivatives [ source: NV\NV_compute_shader_derivatives.txt ]
	- Strings = [ GL_NV_compute_shader_derivatives ]
NV_conditional_render [ source: NV\NV_conditional_render.txt ]
	- Strings = [ GL_NV_conditional_render ]
	- Funcs:
		- glBeginConditionalRenderNV [ void BeginConditionalRenderNV(uint id, enum mode) ]
		- glEndConditionalRenderNV [ void EndConditionalRenderNV(void) ]
NV_conservative_raster [ source: NV\NV_conservative_raster.txt ]
	- Strings = [ GL_NV_conservative_raster ]
	- Funcs:
		- glSubpixelPrecisionBiasNV [ void SubpixelPrecisionBiasNV(uint xbits, uint ybits) ]
NV_conservative_raster_dilate [ source: NV\NV_conservative_raster_dilate.txt ]
	- Strings = [ GL_NV_conservative_raster_dilate ]
	- Funcs:
		- glConservativeRasterParameterfNV [ void ConservativeRasterParameterfNV(enum pname, float value) ]
NV_conservative_raster_pre_snap [ source: NV\NV_conservative_raster_pre_snap.txt ]
	- Strings = [ GL_NV_conservative_raster_pre_snap ]
NV_conservative_raster_pre_snap_triangles [ source: NV\NV_conservative_raster_pre_snap_triangles.txt ]
	- Strings = [ GL_NV_conservative_raster_pre_snap_triangles ]
	- Funcs:
		- glConservativeRasterParameteriNV [ void ConservativeRasterParameteriNV(enum pname, int param) ]
NV_conservative_raster_underestimation [ source: NV\NV_conservative_raster_underestimation.txt ]
	- Strings = [ GL_NV_conservative_raster_underestimation ]
NV_copy_buffer [ source: NV\NV_copy_buffer.txt ]
	- Strings = [ GL_NV_copy_buffer ]
	- Funcs:
		- glCopyBufferSubDataNV [ void CopyBufferSubDataNV(enum readtarget, enum writetarget, intptr readoffset, intptr writeoffset, sizeiptr size) ]
NV_copy_depth_to_color [ source: NV\NV_copy_depth_to_color.txt ]
	- Strings = [ GL_NV_copy_depth_to_color ]
NV_copy_image [ source: NV\NV_copy_image.txt ]
	- Strings = [ GL_NV_copy_image WGL_NV_copy_image GLX_NV_copy_image ]
	- Funcs:
		- glCopyImageSubDataNV [ void CopyImageSubDataNV( uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei width, sizei height, sizei depth) ]
		- glXCopyImageSubDataNV [ void glXCopyImageSubDataNV(Display *dpy, GLXContext srcCtx, uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, GLXContext dstCtx, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei width, sizei height, sizei depth) ]
NV_deep_texture3D [ source: NV\NV_deep_texture3D.txt ]
	- Strings = [ GL_NV_deep_texture3D ]
NV_depth_buffer_float [ source: NV\NV_depth_buffer_float.txt ]
	- Strings = [ GL_NV_depth_buffer_float ]
	- Funcs:
		- glDepthRangedNV [ void DepthRangedNV(double n, double f) ]
		- glClearDepthdNV [ void ClearDepthdNV(double d) ]
		- glDepthBoundsdNV [ void DepthBoundsdNV(double zmin, double zmax) ]
NV_depth_clamp [ source: NV\NV_depth_clamp.txt ]
	- Strings = [ GL_NV_depth_clamp ]
NV_draw_buffers [ source: NV\NV_draw_buffers.txt ]
	- Strings = [ GL_NV_draw_buffers ]
	- Funcs:
		- glDrawBuffersNV [ void DrawBuffersNV(sizei n, const enum *bufs) ]
NV_draw_instanced [ source: NV\NV_draw_instanced.txt ]
	- Strings = [ GL_NV_draw_instanced ]
	- Funcs:
		- glDrawArraysInstancedNV [ void DrawArraysInstancedNV(enum mode, int first, sizei count, sizei primcount) ]
		- glDrawElementsInstancedNV [ void DrawElementsInstancedNV(enum mode, sizei count, enum type, const void *indices, sizei primcount) ]
NV_draw_texture [ source: NV\NV_draw_texture.txt ]
	- Strings = [ GL_NV_draw_texture ]
	- Funcs:
		- glDrawTextureNV [ void DrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) ]
NV_draw_vulkan_image [ source: NV\NV_draw_vulkan_image.txt ]
	- Strings = [ GL_NV_draw_vulkan_image ]
	- Funcs:
		- glDrawVkImageNV [ void DrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) ]
		- glGetVkProcAddrNV [ VULKANPROCNV GetVkProcAddrNV(const GLchar *name) ]
		- glWaitVkSemaphoreNV [ void WaitVkSemaphoreNV (GLuint64 vkSemaphore) ]
		- glSignalVkSemaphoreNV [ void SignalVkSemaphoreNV (GLuint64 vkSemaphore) ]
		- glSignalVkFenceNV [ void SignalVkFenceNV (GLuint64 vkFence) ]
NV_EGL_stream_consumer_external [ source: NV\NV_EGL_stream_consumer_external.txt ]
	- Strings = [ GL_NV_EGL_stream_consumer_external ]
NV_evaluators [ source: NV\NV_evaluators.txt ]
	- Strings = [ GL_NV_evaluators ]
	- Funcs:
		- glMapControlPointsNV [ void MapControlPointsNV(enum target, uint index, enum type, sizei ustride, sizei vstride, int uorder, int vorder, boolean packed, const void *points) ]
		- glMapParameterivNV [ void MapParameterivNV(enum target, enum pname, const int *params) ]
		- glMapParameterfvNV [ void MapParameterfvNV(enum target, enum pname, const float *params) ]
		- glGetMapControlPointsNV [ void GetMapControlPointsNV(enum target, uint index, enum type, sizei ustride, sizei vstride, boolean packed, void *points) ]
		- glGetMapParameterivNV [ void GetMapParameterivNV(enum target, enum pname, int *params) ]
		- glGetMapParameterfvNV [ void GetMapParameterfvNV(enum target, enum pname, float *params) ]
		- glGetMapAttribParameterivNV [ void GetMapAttribParameterivNV(enum target, uint index, enum pname, int *params) ]
		- glGetMapAttribParameterfvNV [ void GetMapAttribParameterfvNV(enum target, uint index, enum pname, float *params) ]
		- glEvalMapsNV [ void EvalMapsNV(enum target, enum mode) ]
NV_explicit_attrib_location [ source: NV\NV_explicit_attrib_location.txt ]
	- Strings = [ GL_NV_explicit_attrib_location ]
NV_explicit_multisample [ source: NV\NV_explicit_multisample.txt ]
	- Strings = [ GL_NV_explicit_multisample ]
	- Funcs:
		- glGetBooleanIndexedvEXT [ void GetBooleanIndexedvEXT(enum value, uint index, boolean *data) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum value, uint index, int *data) ]
		- glGetMultisamplefvNV [ void GetMultisamplefvNV(enum pname, uint index, float *val) ]
		- glSampleMaskIndexedNV [ void SampleMaskIndexedNV(uint index, bitfield mask) ]
		- glTexRenderbufferNV [ void TexRenderbufferNV(enum target, uint renderbuffer) ]
NV_fbo_color_attachments [ source: NV\NV_fbo_color_attachments.txt ]
	- Strings = [ GL_NV_fbo_color_attachments ]
NV_fence [ source: NV\NV_fence.txt ]
	- Strings = [ GL_NV_fence ]
	- Funcs:
		- glGenFencesNV [ void GenFencesNV(sizei n, uint *fences) ]
		- glDeleteFencesNV [ void DeleteFencesNV(sizei n, const uint *fences) ]
		- glSetFenceNV [ void SetFenceNV(uint fence, enum condition) ]
		- glTestFenceNV [ boolean TestFenceNV(uint fence) ]
		- glFinishFenceNV [ void FinishFenceNV(uint fence) ]
		- glIsFenceNV [ boolean IsFenceNV(uint fence) ]
		- glGetFenceivNV [ void GetFenceivNV(uint fence, enum pname, int *params) ]
NV_fill_rectangle [ source: NV\NV_fill_rectangle.txt ]
	- Strings = [ GL_NV_fill_rectangle ]
NV_float_buffer [ source: NV\NV_float_buffer.txt ]
	- Strings = [ GL_NV_float_buffer WGL_NV_float_buffer GLX_NV_float_buffer ]
NV_fog_distance [ source: NV\NV_fog_distance.txt ]
	- Strings = [ GL_NV_fog_distance ]
NV_fragment_coverage_to_color [ source: NV\NV_fragment_coverage_to_color.txt ]
	- Strings = [ GL_NV_fragment_coverage_to_color ]
	- Funcs:
		- glFragmentCoverageColorNV [ void FragmentCoverageColorNV(uint color) ]
NV_fragment_program [ source: NV\NV_fragment_program.txt ]
	- Strings = [ GL_NV_fragment_program ]
	- Funcs:
		- glProgramNamedParameter4fNV [ void ProgramNamedParameter4fNV(uint id, sizei len, const ubyte *name, float x, float y, float z, float w) ]
		- glProgramNamedParameter4dNV [ void ProgramNamedParameter4dNV(uint id, sizei len, const ubyte *name, double x, double y, double z, double w) ]
		- glProgramNamedParameter4fvNV [ void ProgramNamedParameter4fvNV(uint id, sizei len, const ubyte *name, const float v[]) ]
		- glProgramNamedParameter4dvNV [ void ProgramNamedParameter4dvNV(uint id, sizei len, const ubyte *name, const double v[]) ]
		- glGetProgramNamedParameterfvNV [ void GetProgramNamedParameterfvNV(uint id, sizei len, const ubyte *name, float *params) ]
		- glGetProgramNamedParameterdvNV [ void GetProgramNamedParameterdvNV(uint id, sizei len, const ubyte *name, double *params) ]
		- glProgramLocalParameter4dARB [ void ProgramLocalParameter4dARB(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramLocalParameter4dvARB [ void ProgramLocalParameter4dvARB(enum target, uint index, const double *params) ]
		- glProgramLocalParameter4fARB [ void ProgramLocalParameter4fARB(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramLocalParameter4fvARB [ void ProgramLocalParameter4fvARB(enum target, uint index, const float *params) ]
		- glGetProgramLocalParameterdvARB [ void GetProgramLocalParameterdvARB(enum target, uint index, double *params) ]
		- glGetProgramLocalParameterfvARB [ void GetProgramLocalParameterfvARB(enum target, uint index, float *params) ]
NV_fragment_program2 [ source: NV\NV_fragment_program2.txt ]
	- Strings = [ GL_NV_fragment_program2 ]
NV_fragment_program4 [ source: NV\NV_fragment_program4.txt ]
NV_fragment_program_option [ source: NV\NV_fragment_program_option.txt ]
	- Strings = [ GL_NV_fragment_program_option ]
NV_fragment_shader_barycentric [ source: NV\NV_fragment_shader_barycentric.txt ]
	- Strings = [ GL_NV_fragment_shader_barycentric ]
NV_fragment_shader_interlock [ source: NV\NV_fragment_shader_interlock.txt ]
	- Strings = [ GL_NV_fragment_shader_interlock ]
NV_framebuffer_blit [ source: NV\NV_framebuffer_blit.txt ]
	- Strings = [ GL_NV_framebuffer_blit ]
	- Funcs:
		- glBlitFramebufferNV [ void BlitFramebufferNV(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
NV_framebuffer_mixed_samples [ source: NV\NV_framebuffer_mixed_samples.txt ]
	- Strings = [ GL_NV_framebuffer_mixed_samples GL_EXT_raster_multisample ]
	- Funcs:
		- glRasterSamplesEXT [ void RasterSamplesEXT(uint samples, boolean fixedsamplelocations) ]
		- glCoverageModulationTableNV [ void CoverageModulationTableNV(sizei n, const float *v) ]
		- glGetCoverageModulationTableNV [ void GetCoverageModulationTableNV(sizei bufsize, float *v) ]
		- glCoverageModulationNV [ void CoverageModulationNV(enum components) ]
NV_framebuffer_multisample [ source: NV\NV_framebuffer_multisample.txt ]
	- Strings = [ GL_NV_framebuffer_multisample ]
	- Funcs:
		- glRenderbufferStorageMultisampleNV [ void RenderbufferStorageMultisampleNV( enum target, sizei samples, enum internalformat, sizei width, sizei height) ]
NV_framebuffer_multisample_coverage [ source: NV\NV_framebuffer_multisample_coverage.txt ]
	- Strings = [ GL_NV_framebuffer_multisample_coverage ]
	- Funcs:
		- glRenderbufferStorageMultisampleCoverageNV [ void RenderbufferStorageMultisampleCoverageNV( enum target, sizei coverageSamples, sizei colorSamples, enum internalformat, sizei width, sizei height) ]
NV_generate_mipmap_sRGB [ source: NV\NV_generate_mipmap_sRGB.txt ]
	- Strings = [ GL_NV_generate_mipmap_sRGB ]
NV_geometry_program4 [ source: NV\NV_geometry_program4.txt ]
	- Funcs:
		- glProgramVertexLimitNV [ void ProgramVertexLimitNV(enum target, int limit) ]
		- glFramebufferTextureEXT [ void FramebufferTextureEXT(enum target, enum attachment, uint texture, int level) ]
		- glFramebufferTextureLayerEXT [ void FramebufferTextureLayerEXT(enum target, enum attachment, uint texture, int level, int layer) ]
		- glFramebufferTextureFaceEXT [ void FramebufferTextureFaceEXT(enum target, enum attachment, uint texture, int level, enum face) ]
NV_geometry_shader4 [ source: NV\NV_geometry_shader4.txt ]
	- Strings = [ GL_NV_geometry_shader4 ]
NV_geometry_shader_passthrough [ source: NV\NV_geometry_shader_passthrough.txt ]
	- Strings = [ GL_NV_geometry_shader_passthrough ]
NV_gpu_multicast [ source: NV\NV_gpu_multicast.txt ]
	- Strings = [ GL_NV_gpu_multicast ]
	- Funcs:
		- glRenderGpuMaskNV [ void RenderGpuMaskNV(bitfield mask) ]
		- glMulticastBufferSubDataNV [ void MulticastBufferSubDataNV( bitfield gpuMask, uint buffer, intptr offset, sizeiptr size, const void *data) ]
		- glMulticastCopyBufferSubDataNV [ void MulticastCopyBufferSubDataNV( uint readGpu, bitfield writeGpuMask, uint readBuffer, uint writeBuffer, intptr readOffset, intptr writeOffset, sizeiptr size) ]
		- glMulticastCopyImageSubDataNV [ void MulticastCopyImageSubDataNV( uint srcGpu, bitfield dstGpuMask, uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei srcWidth, sizei srcHeight, sizei srcDepth) ]
		- glMulticastBlitFramebufferNV [ void MulticastBlitFramebufferNV(uint srcGpu, uint dstGpu, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, bitfield mask, enum filter) ]
		- glMulticastFramebufferSampleLocationsfvNV [ void MulticastFramebufferSampleLocationsfvNV(uint gpu, uint framebuffer, uint start, sizei count, const float *v) ]
		- glMulticastBarrierNV [ void MulticastBarrierNV(void) ]
		- glMulticastWaitSyncNV [ void MulticastWaitSyncNV(uint signalGpu, bitfield waitGpuMask) ]
		- glMulticastGetQueryObjectivNV [ void MulticastGetQueryObjectivNV(uint gpu, uint id, enum pname, int *params) ]
		- glMulticastGetQueryObjectuivNV [ void MulticastGetQueryObjectuivNV(uint gpu, uint id, enum pname, uint *params) ]
		- glMulticastGetQueryObjecti64vNV [ void MulticastGetQueryObjecti64vNV(uint gpu, uint id, enum pname, int64 *params) ]
		- glMulticastGetQueryObjectui64vNV [ void MulticastGetQueryObjectui64vNV(uint gpu, uint id, enum pname, uint64 *params) ]
NV_gpu_program4 [ source: NV\NV_gpu_program4.txt ]
	- Strings = [ GL_NV_gpu_program4 ]
	- Funcs:
		- glProgramLocalParameterI4iNV [ void ProgramLocalParameterI4iNV(enum target, uint index, int x, int y, int z, int w) ]
		- glProgramLocalParameterI4ivNV [ void ProgramLocalParameterI4ivNV(enum target, uint index, const int *params) ]
		- glProgramLocalParametersI4ivNV [ void ProgramLocalParametersI4ivNV(enum target, uint index, sizei count, const int *params) ]
		- glProgramLocalParameterI4uiNV [ void ProgramLocalParameterI4uiNV(enum target, uint index, uint x, uint y, uint z, uint w) ]
		- glProgramLocalParameterI4uivNV [ void ProgramLocalParameterI4uivNV(enum target, uint index, const uint *params) ]
		- glProgramLocalParametersI4uivNV [ void ProgramLocalParametersI4uivNV(enum target, uint index, sizei count, const uint *params) ]
		- glProgramEnvParameterI4iNV [ void ProgramEnvParameterI4iNV(enum target, uint index, int x, int y, int z, int w) ]
		- glProgramEnvParameterI4ivNV [ void ProgramEnvParameterI4ivNV(enum target, uint index, const int *params) ]
		- glProgramEnvParametersI4ivNV [ void ProgramEnvParametersI4ivNV(enum target, uint index, sizei count, const int *params) ]
		- glProgramEnvParameterI4uiNV [ void ProgramEnvParameterI4uiNV(enum target, uint index, uint x, uint y, uint z, uint w) ]
		- glProgramEnvParameterI4uivNV [ void ProgramEnvParameterI4uivNV(enum target, uint index, const uint *params) ]
		- glProgramEnvParametersI4uivNV [ void ProgramEnvParametersI4uivNV(enum target, uint index, sizei count, const uint *params) ]
		- glGetProgramLocalParameterIivNV [ void GetProgramLocalParameterIivNV(enum target, uint index, int *params) ]
		- glGetProgramLocalParameterIuivNV [ void GetProgramLocalParameterIuivNV(enum target, uint index, uint *params) ]
		- glGetProgramEnvParameterIivNV [ void GetProgramEnvParameterIivNV(enum target, uint index, int *params) ]
		- glGetProgramEnvParameterIuivNV [ void GetProgramEnvParameterIuivNV(enum target, uint index, uint *params) ]
NV_gpu_program5 [ source: NV\NV_gpu_program5.txt ]
	- Strings = [ GL_NV_gpu_program5 GL_NV_gpu_program_fp64 ]
NV_gpu_program5_mem_extended [ source: NV\NV_gpu_program5_mem_extended.txt ]
	- Strings = [ GL_NV_gpu_program5_mem_extended ]
NV_gpu_shader5 [ source: NV\NV_gpu_shader5.txt ]
	- Strings = [ GL_NV_gpu_shader5 ]
	- Funcs:
		- glUniform1i64NV [ void Uniform1i64NV(int location, int64EXT x) ]
		- glUniform2i64NV [ void Uniform2i64NV(int location, int64EXT x, int64EXT y) ]
		- glUniform3i64NV [ void Uniform3i64NV(int location, int64EXT x, int64EXT y, int64EXT z) ]
		- glUniform4i64NV [ void Uniform4i64NV(int location, int64EXT x, int64EXT y, int64EXT z, int64EXT w) ]
		- glUniform1i64vNV [ void Uniform1i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform2i64vNV [ void Uniform2i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform3i64vNV [ void Uniform3i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform4i64vNV [ void Uniform4i64vNV(int location, sizei count, const int64EXT *value) ]
		- glUniform1ui64NV [ void Uniform1ui64NV(int location, uint64EXT x) ]
		- glUniform2ui64NV [ void Uniform2ui64NV(int location, uint64EXT x, uint64EXT y) ]
		- glUniform3ui64NV [ void Uniform3ui64NV(int location, uint64EXT x, uint64EXT y, uint64EXT z) ]
		- glUniform4ui64NV [ void Uniform4ui64NV(int location, uint64EXT x, uint64EXT y, uint64EXT z, uint64EXT w) ]
		- glUniform1ui64vNV [ void Uniform1ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform2ui64vNV [ void Uniform2ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform3ui64vNV [ void Uniform3ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glUniform4ui64vNV [ void Uniform4ui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glGetUniformi64vNV [ void GetUniformi64vNV(uint program, int location, int64EXT *params) ]
		- glGetUniformui64vNV [ void GetUniformui64vNV(uint program, int location, uint64EXT *params) ]
		- glProgramUniform1i64NV [ void ProgramUniform1i64NV(uint program, int location, int64EXT x) ]
		- glProgramUniform2i64NV [ void ProgramUniform2i64NV(uint program, int location, int64EXT x, int64EXT y) ]
		- glProgramUniform3i64NV [ void ProgramUniform3i64NV(uint program, int location, int64EXT x, int64EXT y, int64EXT z) ]
		- glProgramUniform4i64NV [ void ProgramUniform4i64NV(uint program, int location, int64EXT x, int64EXT y, int64EXT z, int64EXT w) ]
		- glProgramUniform1i64vNV [ void ProgramUniform1i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform2i64vNV [ void ProgramUniform2i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform3i64vNV [ void ProgramUniform3i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform4i64vNV [ void ProgramUniform4i64vNV(uint program, int location, sizei count, const int64EXT *value) ]
		- glProgramUniform1ui64NV [ void ProgramUniform1ui64NV(uint program, int location, uint64EXT x) ]
		- glProgramUniform2ui64NV [ void ProgramUniform2ui64NV(uint program, int location, uint64EXT x, uint64EXT y) ]
		- glProgramUniform3ui64NV [ void ProgramUniform3ui64NV(uint program, int location, uint64EXT x, uint64EXT y, uint64EXT z) ]
		- glProgramUniform4ui64NV [ void ProgramUniform4ui64NV(uint program, int location, uint64EXT x, uint64EXT y, uint64EXT z, uint64EXT w) ]
		- glProgramUniform1ui64vNV [ void ProgramUniform1ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform2ui64vNV [ void ProgramUniform2ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform3ui64vNV [ void ProgramUniform3ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
		- glProgramUniform4ui64vNV [ void ProgramUniform4ui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
NV_half_float [ source: NV\NV_half_float.txt ]
	- Strings = [ GL_NV_half_float ]
	- Funcs:
		- glVertex2hNV [ void Vertex2hNV(half x, half y) ]
		- glVertex2hvNV [ void Vertex2hvNV(const half *v) ]
		- glVertex3hNV [ void Vertex3hNV(half x, half y, half z) ]
		- glVertex3hvNV [ void Vertex3hvNV(const half *v) ]
		- glVertex4hNV [ void Vertex4hNV(half x, half y, half z, half w) ]
		- glVertex4hvNV [ void Vertex4hvNV(const half *v) ]
		- glNormal3hNV [ void Normal3hNV(half nx, half ny, half nz) ]
		- glNormal3hvNV [ void Normal3hvNV(const half *v) ]
		- glColor3hNV [ void Color3hNV(half red, half green, half blue) ]
		- glColor3hvNV [ void Color3hvNV(const half *v) ]
		- glColor4hNV [ void Color4hNV(half red, half green, half blue, half alpha) ]
		- glColor4hvNV [ void Color4hvNV(const half *v) ]
		- glTexCoord1hNV [ void TexCoord1hNV(half s) ]
		- glTexCoord1hvNV [ void TexCoord1hvNV(const half *v) ]
		- glTexCoord2hNV [ void TexCoord2hNV(half s, half t) ]
		- glTexCoord2hvNV [ void TexCoord2hvNV(const half *v) ]
		- glTexCoord3hNV [ void TexCoord3hNV(half s, half t, half r) ]
		- glTexCoord3hvNV [ void TexCoord3hvNV(const half *v) ]
		- glTexCoord4hNV [ void TexCoord4hNV(half s, half t, half r, half q) ]
		- glTexCoord4hvNV [ void TexCoord4hvNV(const half *v) ]
		- glMultiTexCoord1hNV [ void MultiTexCoord1hNV(enum target, half s) ]
		- glMultiTexCoord1hvNV [ void MultiTexCoord1hvNV(enum target, const half *v) ]
		- glMultiTexCoord2hNV [ void MultiTexCoord2hNV(enum target, half s, half t) ]
		- glMultiTexCoord2hvNV [ void MultiTexCoord2hvNV(enum target, const half *v) ]
		- glMultiTexCoord3hNV [ void MultiTexCoord3hNV(enum target, half s, half t, half r) ]
		- glMultiTexCoord3hvNV [ void MultiTexCoord3hvNV(enum target, const half *v) ]
		- glMultiTexCoord4hNV [ void MultiTexCoord4hNV(enum target, half s, half t, half r, half q) ]
		- glMultiTexCoord4hvNV [ void MultiTexCoord4hvNV(enum target, const half *v) ]
		- glVertexAttrib1hNV [ void VertexAttrib1hNV(uint index, half x) ]
		- glVertexAttrib1hvNV [ void VertexAttrib1hvNV(uint index, const half *v) ]
		- glVertexAttrib2hNV [ void VertexAttrib2hNV(uint index, half x, half y) ]
		- glVertexAttrib2hvNV [ void VertexAttrib2hvNV(uint index, const half *v) ]
		- glVertexAttrib3hNV [ void VertexAttrib3hNV(uint index, half x, half y, half z) ]
		- glVertexAttrib3hvNV [ void VertexAttrib3hvNV(uint index, const half *v) ]
		- glVertexAttrib4hNV [ void VertexAttrib4hNV(uint index, half x, half y, half z, half w) ]
		- glVertexAttrib4hvNV [ void VertexAttrib4hvNV(uint index, const half *v) ]
		- glVertexAttribs1hvNV [ void VertexAttribs1hvNV(uint index, sizei n, const half *v) ]
		- glVertexAttribs2hvNV [ void VertexAttribs2hvNV(uint index, sizei n, const half *v) ]
		- glVertexAttribs3hvNV [ void VertexAttribs3hvNV(uint index, sizei n, const half *v) ]
		- glVertexAttribs4hvNV [ void VertexAttribs4hvNV(uint index, sizei n, const half *v) ]
		- glFogCoordhNV [ void FogCoordhNV(half fog) ]
		- glFogCoordhvNV [ void FogCoordhvNV(const half *fog) ]
		- glSecondaryColor3hNV [ void SecondaryColor3hNV(half red, half green, half blue) ]
		- glSecondaryColor3hvNV [ void SecondaryColor3hvNV(const half *v) ]
		- glVertexWeighthNV [ void VertexWeighthNV(half weight) ]
		- glVertexWeighthvNV [ void VertexWeighthvNV(const half *weight) ]
NV_image_formats [ source: NV\NV_image_formats.txt ]
	- Strings = [ GL_NV_image_formats ]
NV_instanced_arrays [ source: NV\NV_instanced_arrays.txt ]
	- Strings = [ GL_NV_instanced_arrays ]
	- Funcs:
		- glVertexAttribDivisorNV [ void VertexAttribDivisorNV(uint index, uint divisor) ]
NV_internalformat_sample_query [ source: NV\NV_internalformat_sample_query.txt ]
	- Strings = [ GL_NV_internalformat_sample_query ]
	- Funcs:
		- glGetInternalformatSampleivNV [ void GetInternalformatSampleivNV(enum target, enum internalformat, sizei samples, enum pname, sizei bufSize, int *params) ]
NV_light_max_exponent [ source: NV\NV_light_max_exponent.txt ]
	- Strings = [ GL_NV_light_max_exponent ]
NV_memory_attachment [ source: NV\NV_memory_attachment.txt ]
	- Strings = [ GL_NV_memory_attachment ]
	- Funcs:
		- glGetMemoryObjectDetachedResourcesuivNV [ void GetMemoryObjectDetachedResourcesuivNV(uint memory, enum pname, int first, sizei count, uint *params) ]
		- glResetMemoryObjectParameterNV [ void ResetMemoryObjectParameterNV(uint memory, enum pname) ]
		- glTexAttachMemoryNV [ void TexAttachMemoryNV(enum target, uint memory, uint64 offset) ]
		- glBufferAttachMemoryNV [ void BufferAttachMemoryNV(enum target, uint memory, uint64 offset) ]
		- glTextureAttachMemoryNV [ void TextureAttachMemoryNV(uint texture, uint memory, uint64 offset) ]
		- glNamedBufferAttachMemoryNV [ void NamedBufferAttachMemoryNV(uint buffer, uint memory, uint64 offset) ]
NV_mesh_shader [ source: NV\NV_mesh_shader.txt ]
	- Strings = [ GL_NV_mesh_shader ]
	- Funcs:
		- glDrawMeshTasksNV [ void DrawMeshTasksNV(uint first, uint count) ]
		- glDrawMeshTasksIndirectNV [ void DrawMeshTasksIndirectNV(intptr indirect) ]
		- glMultiDrawMeshTasksIndirectNV [ void MultiDrawMeshTasksIndirectNV(intptr indirect, sizei drawcount, sizei stride) ]
		- glMultiDrawMeshTasksIndirectCountNV [ void MultiDrawMeshTasksIndirectCountNV( intptr indirect, intptr drawcount, sizei maxdrawcount, sizei stride) ]
NV_multisample_coverage [ source: NV\NV_multisample_coverage.txt ]
	- Strings = [ GL_NV_multisample_coverage GLX_NV_multisample_coverage WGL_NV_multisample_coverage ]
NV_multisample_filter_hint [ source: NV\NV_multisample_filter_hint.txt ]
	- Strings = [ GL_NV_multisample_filter_hint ]
NV_non_square_matrices [ source: NV\NV_non_square_matrices.txt ]
	- Strings = [ GL_NV_non_square_matrices ]
	- Funcs:
		- glUniformMatrix2x3fvNV [ void UniformMatrix2x3fvNV(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix3x2fvNV [ void UniformMatrix3x2fvNV(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix2x4fvNV [ void UniformMatrix2x4fvNV(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix4x2fvNV [ void UniformMatrix4x2fvNV(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix3x4fvNV [ void UniformMatrix3x4fvNV(int location, sizei count, boolean transpose, const float *value) ]
		- glUniformMatrix4x3fvNV [ void UniformMatrix4x3fvNV(int location, sizei count, boolean transpose, const float *value) ]
NV_occlusion_query [ source: NV\NV_occlusion_query.txt ]
	- Strings = [ GL_NV_occlusion_query ]
	- Funcs:
		- glGenOcclusionQueriesNV [ void GenOcclusionQueriesNV(sizei n, uint *ids) ]
		- glDeleteOcclusionQueriesNV [ void DeleteOcclusionQueriesNV(sizei n, const uint *ids) ]
		- glIsOcclusionQueryNV [ boolean IsOcclusionQueryNV(uint id) ]
		- glBeginOcclusionQueryNV [ void BeginOcclusionQueryNV(uint id) ]
		- glEndOcclusionQueryNV [ void EndOcclusionQueryNV(void) ]
		- glGetOcclusionQueryivNV [ void GetOcclusionQueryivNV(uint id, enum pname, int *params) ]
		- glGetOcclusionQueryuivNV [ void GetOcclusionQueryuivNV(uint id, enum pname, uint *params) ]
NV_packed_depth_stencil [ source: NV\NV_packed_depth_stencil.txt ]
	- Strings = [ GL_NV_packed_depth_stencil ]
NV_packed_float NV_packed_float_linear [ source: NV\NV_packed_float.txt ]
	- Strings = [ GL_NV_packed_float GL_NV_packed_float_linear ]
NV_pack_subimage [ source: NV\NV_pack_subimage.txt ]
	- Strings = [ GL_NV_pack_subimage ]
NV_parameter_buffer_object [ source: NV\NV_parameter_buffer_object.txt ]
	- Funcs:
		- glBindBufferRangeNV [ void BindBufferRangeNV(enum target, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glBindBufferOffsetNV [ void BindBufferOffsetNV(enum target, uint index, uint buffer, intptr offset) ]
		- glBindBufferBaseNV [ void BindBufferBaseNV(enum target, uint index, uint buffer) ]
		- glProgramBufferParametersfvNV [ void ProgramBufferParametersfvNV(enum target, uint bindingIndex, uint wordIndex, sizei count, const float *params) ]
		- glProgramBufferParametersIivNV [ void ProgramBufferParametersIivNV(enum target, uint bindingIndex, uint wordIndex, sizei count, const int *params) ]
		- glProgramBufferParametersIuivNV [ void ProgramBufferParametersIuivNV(enum target, uint bindingIndex, uint wordIndex, sizei count, const uint *params) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum value, uint index, int *data) ]
NV_parameter_buffer_object2 [ source: NV\NV_parameter_buffer_object2.txt ]
	- Strings = [ GL_NV_parameter_buffer_object2 ]
NV_path_rendering [ source: NV\NV_path_rendering.txt ]
	- Strings = [ GL_NV_path_rendering ]
	- Funcs:
		- glPathCommandsNV [ void PathCommandsNV(uint path, sizei numCommands, const ubyte *commands, sizei numCoords, enum coordType, const void *coords) ]
		- glPathCoordsNV [ void PathCoordsNV(uint path, sizei numCoords, enum coordType, const void *coords) ]
		- glPathSubCommandsNV [ void PathSubCommandsNV(uint path, sizei commandStart, sizei commandsToDelete, sizei numCommands, const ubyte *commands, sizei numCoords, enum coordType, const void *coords) ]
		- glPathSubCoordsNV [ void PathSubCoordsNV(uint path, sizei coordStart, sizei numCoords, enum coordType, const void *coords) ]
		- glPathStringNV [ void PathStringNV(uint path, enum format, sizei length, const void *pathString) ]
		- glPathGlyphsNV [ void PathGlyphsNV(uint firstPathName, enum fontTarget, const void *fontName, bitfield fontStyle, sizei numGlyphs, enum type, const void *charcodes, enum handleMissingGlyphs, uint pathParameterTemplate, float emScale) ]
		- glPathGlyphRangeNV [ void PathGlyphRangeNV(uint firstPathName, enum fontTarget, const void *fontName, bitfield fontStyle, uint firstGlyph, sizei numGlyphs, enum handleMissingGlyphs, uint pathParameterTemplate, float emScale) ]
		- glPathGlyphIndexArrayNV [ enum PathGlyphIndexArrayNV(uint firstPathName, enum fontTarget, const void *fontName, bitfield fontStyle, uint firstGlyphIndex, sizei numGlyphs, uint pathParameterTemplate, float emScale) ]
		- glPathMemoryGlyphIndexArrayNV [ enum PathMemoryGlyphIndexArrayNV(uint firstPathName, enum fontTarget, sizeiptr fontSize, const void *fontData, sizei faceIndex, uint firstGlyphIndex, sizei numGlyphs, uint pathParameterTemplate, float emScale) ]
		- glPathGlyphIndexRangeNV [ enum PathGlyphIndexRangeNV(enum fontTarget, const void *fontName, bitfield fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount[2]) ]
		- glWeightPathsNV [ void WeightPathsNV(uint resultPath, sizei numPaths, const uint paths[], const float weights[]) ]
		- glCopyPathNV [ void CopyPathNV(uint resultPath, uint srcPath) ]
		- glInterpolatePathsNV [ void InterpolatePathsNV(uint resultPath, uint pathA, uint pathB, float weight) ]
		- glTransformPathNV [ void TransformPathNV(uint resultPath, uint srcPath, enum transformType, const float *transformValues) ]
		- glPathParameterivNV [ void PathParameterivNV(uint path, enum pname, const int *value) ]
		- glPathParameteriNV [ void PathParameteriNV(uint path, enum pname, int value) ]
		- glPathParameterfvNV [ void PathParameterfvNV(uint path, enum pname, const float *value) ]
		- glPathParameterfNV [ void PathParameterfNV(uint path, enum pname, float value) ]
		- glPathDashArrayNV [ void PathDashArrayNV(uint path, sizei dashCount, const float *dashArray) ]
		- glGenPathsNV [ uint GenPathsNV(sizei range) ]
		- glDeletePathsNV [ void DeletePathsNV(uint path, sizei range) ]
		- glIsPathNV [ boolean IsPathNV(uint path) ]
		- glPathStencilFuncNV [ void PathStencilFuncNV(enum func, int ref, uint mask) ]
		- glPathStencilDepthOffsetNV [ void PathStencilDepthOffsetNV(float factor, float units) ]
		- glStencilFillPathNV [ void StencilFillPathNV(uint path, enum fillMode, uint mask) ]
		- glStencilStrokePathNV [ void StencilStrokePathNV(uint path, int reference, uint mask) ]
		- glStencilFillPathInstancedNV [ void StencilFillPathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, enum fillMode, uint mask, enum transformType, const float *transformValues) ]
		- glStencilStrokePathInstancedNV [ void StencilStrokePathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, int reference, uint mask, enum transformType, const float *transformValues) ]
		- glPathCoverDepthFuncNV [ void PathCoverDepthFuncNV(enum zfunc) ]
		- glPathColorGenNV [ void PathColorGenNV(enum color, enum genMode, enum colorFormat, const float *coeffs) ]
		- glPathTexGenNV [ void PathTexGenNV(enum texCoordSet, enum genMode, int components, const float *coeffs) ]
		- glPathFogGenNV [ void PathFogGenNV(enum genMode) ]
		- glCoverFillPathNV [ void CoverFillPathNV(uint path, enum coverMode) ]
		- glCoverStrokePathNV [ void CoverStrokePathNV(uint path, enum coverMode) ]
		- glCoverFillPathInstancedNV [ void CoverFillPathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, enum coverMode, enum transformType, const float *transformValues) ]
		- glCoverStrokePathInstancedNV [ void CoverStrokePathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, enum coverMode, enum transformType, const float *transformValues) ]
		- glStencilThenCoverFillPathNV [ void StencilThenCoverFillPathNV(uint path, enum fillMode, uint mask, enum coverMode) ]
		- glStencilThenCoverStrokePathNV [ void StencilThenCoverStrokePathNV(uint path, int reference, uint mask, enum coverMode) ]
		- glStencilThenCoverFillPathInstancedNV [ void StencilThenCoverFillPathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, enum fillMode, uint mask, enum coverMode, enum transformType, const float *transformValues) ]
		- glStencilThenCoverStrokePathInstancedNV [ void StencilThenCoverStrokePathInstancedNV(sizei numPaths, enum pathNameType, const void *paths, uint pathBase, int reference, uint mask, enum coverMode, enum transformType, const float *transformValues) ]
		- glProgramPathFragmentInputGenNV [ void ProgramPathFragmentInputGenNV(uint program, int location, enum genMode, int components, const float *coeffs) ]
		- glGetPathParameterivNV [ void GetPathParameterivNV(uint path, enum pname, int *value) ]
		- glGetPathParameterfvNV [ void GetPathParameterfvNV(uint path, enum pname, float *value) ]
		- glGetPathCommandsNV [ void GetPathCommandsNV(uint path, ubyte *commands) ]
		- glGetPathCoordsNV [ void GetPathCoordsNV(uint path, float *coords) ]
		- glGetPathDashArrayNV [ void GetPathDashArrayNV(uint path, float *dashArray) ]
		- glGetPathMetricsNV [ void GetPathMetricsNV(bitfield metricQueryMask, sizei numPaths, enum pathNameType, const void *paths, uint pathBase, sizei stride, float *metrics) ]
		- glGetPathMetricRangeNV [ void GetPathMetricRangeNV(bitfield metricQueryMask, uint firstPathName, sizei numPaths, sizei stride, float *metrics) ]
		- glGetPathSpacingNV [ void GetPathSpacingNV(enum pathListMode, sizei numPaths, enum pathNameType, const void *paths, uint pathBase, float advanceScale, float kerningScale, enum transformType, float *returnedSpacing) ]
		- glGetPathColorGenivNV [ void GetPathColorGenivNV(enum color, enum pname, int *value) ]
		- glGetPathColorGenfvNV [ void GetPathColorGenfvNV(enum color, enum pname, float *value) ]
		- glGetPathTexGenivNV [ void GetPathTexGenivNV(enum texCoordSet, enum pname, int *value) ]
		- glGetPathTexGenfvNV [ void GetPathTexGenfvNV(enum texCoordSet, enum pname, float *value) ]
		- glIsPointInFillPathNV [ boolean IsPointInFillPathNV(uint path, uint mask, float x, float y) ]
		- glIsPointInStrokePathNV [ boolean IsPointInStrokePathNV(uint path, float x, float y) ]
		- glGetPathLengthNV [ float GetPathLengthNV(uint path, sizei startSegment, sizei numSegments) ]
		- glPointAlongPathNV [ boolean PointAlongPathNV(uint path, sizei startSegment, sizei numSegments, float distance, float *x, float *y, float *tangentX, float *tangentY) ]
		- glMatrixLoad3x2fNV [ void MatrixLoad3x2fNV(enum matrixMode, const float *m) ]
		- glMatrixLoad3x3fNV [ void MatrixLoad3x3fNV(enum matrixMode, const float *m) ]
		- glMatrixLoadTranspose3x3fNV [ void MatrixLoadTranspose3x3fNV(enum matrixMode, const float *m) ]
		- glMatrixMult3x2fNV [ void MatrixMult3x2fNV(enum matrixMode, const float *m) ]
		- glMatrixMult3x3fNV [ void MatrixMult3x3fNV(enum matrixMode, const float *m) ]
		- glMatrixMultTranspose3x3fNV [ void MatrixMultTranspose3x3fNV(enum matrixMode, const float *m) ]
		- glGetProgramResourcefvNV [ void GetProgramResourcefvNV(uint program, enum programInterface, uint index, sizei propCount, const enum *props, sizei bufSize, sizei *length, float *params) ]
NV_path_rendering_shared_edge [ source: NV\NV_path_rendering_shared_edge.txt ]
	- Strings = [ GL_NV_path_rendering_shared_edge ]
NV_pixel_buffer_object [ source: NV\NV_pixel_buffer_object.txt ]
	- Strings = [ GL_NV_pixel_buffer_object ]
NV_pixel_data_range [ source: NV\NV_pixel_data_range.txt ]
	- Strings = [ GL_NV_pixel_data_range ]
	- Funcs:
		- glPixelDataRangeNV [ void PixelDataRangeNV(enum target, sizei length, void *pointer) ]
		- glFlushPixelDataRangeNV [ void FlushPixelDataRangeNV(enum target) ]
NV_platform_binary [ source: NV\NV_platform_binary.txt ]
	- Strings = [ GL_NV_platform_binary ]
NV_point_sprite [ source: NV\NV_point_sprite.txt ]
	- Strings = [ GL_NV_point_sprite ]
	- Funcs:
		- glPointParameteriNV [ void PointParameteriNV(enum pname, int param) ]
		- glPointParameterivNV [ void PointParameterivNV(enum pname, const int *params) ]
NV_polygon_mode [ source: NV\NV_polygon_mode.txt ]
	- Strings = [ GL_NV_polygon_mode ]
	- Funcs:
		- glPolygonModeNV [ void PolygonModeNV(enum face, enum mode) ]
NV_present_video [ source: NV\NV_present_video.txt ]
	- Strings = [ GL_NV_present_video GLX_NV_present_video WGL_NV_present_video ]
	- Funcs:
		- glPresentFrameKeyedNV [ void PresentFrameKeyedNV(uint video_slot, uint64EXT minPresentTime, uint beginPresentTimeId, uint presentDurationId, enum type, enum target0, uint fill0, uint key0, enum target1, uint fill1, uint key1) ]
		- glPresentFrameDualFillNV [ void PresentFrameDualFillNV(uint video_slot, uint64EXT minPresentTime, uint beginPresentTimeId, uint presentDurationId, enum type, enum target0, uint fill0, enum target1, uint fill1, enum target2, uint fill2, enum target3, uint fill3) ]
		- glGetVideoivNV [ void GetVideoivNV(uint video_slot, enum pname, int *params) ]
		- glGetVideouivNV [ void GetVideouivNV(uint video_slot, enum pname, uint *params) ]
		- glGetVideoi64vNV [ void GetVideoi64vNV(uint video_slot, enum pname, int64EXT *params) ]
		- glGetVideoui64vNV [ void GetVideoui64vNV(uint video_slot, enum pname, uint64EXT *params) ]
		- glXEnumerateVideoDevicesNV [ int *glXEnumerateVideoDevicesNV(Display *dpy, int screen, int *nelements) ]
		- glXBindVideoDeviceNV [ int glXBindVideoDeviceNV(Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list) ]
		- wglEnumerateVideoDevicesNV [ int wglEnumerateVideoDevicesNV(HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList) ]
		- wglBindVideoDeviceNV [ BOOL wglBindVideoDeviceNV(HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList) ]
		- wglQueryCurrentContextNV [ BOOL wglQueryCurrentContextNV(int iAttribute, int *piValue) ]
NV_primitive_restart [ source: NV\NV_primitive_restart.txt ]
	- Strings = [ GL_NV_primitive_restart ]
	- Funcs:
		- glPrimitiveRestartNV [ void PrimitiveRestartNV(void) ]
		- glPrimitiveRestartIndexNV [ void PrimitiveRestartIndexNV(uint index) ]
NV_query_resource [ source: NV\NV_query_resource.txt ]
	- Strings = [ GL_NV_query_resource ]
	- Funcs:
		- glQueryResourceNV [ int QueryResourceNV(enum queryType, int pname, unsigned int bufSize, int *buffer) ]
NV_query_resource_tag [ source: NV\NV_query_resource_tag.txt ]
	- Strings = [ GL_NV_query_resource_tag ]
	- Funcs:
		- glGenQueryResourceTagNV [ void GenQueryResourceTagNV(GLsizei n, GLuint *tagIds) ]
		- glDeleteQueryResourceTagNV [ void DeleteQueryResourceTagNV(GLsizei n, const GLuint *tagIds) ]
		- glQueryResourceTagNV [ void QueryResourceTagNV(GLuint tagId, const GLchar *tagString) ]
NV_read_buffer NV_read_buffer_front [ source: NV\NV_read_buffer.txt ]
	- Strings = [ GL_NV_read_buffer GL_NV_read_buffer_front ]
	- Funcs:
		- glReadBufferNV [ void ReadBufferNV(GLenum mode) ]
NV_read_depth NV_read_stencil NV_read_depth_stencil [ source: NV\NV_read_depth_stencil.txt ]
	- Strings = [ GL_NV_read_depth GL_NV_read_stencil GL_NV_read_depth_stencil ]
NV_register_combiners [ source: NV\NV_register_combiners.txt ]
	- Strings = [ GL_NV_register_combiners ]
	- Funcs:
		- glCombinerParameterfvNV [ void CombinerParameterfvNV(GLenum pname, const GLfloat *params) ]
		- glCombinerParameterivNV [ void CombinerParameterivNV(GLenum pname, const GLint *params) ]
		- glCombinerParameterfNV [ void CombinerParameterfNV(GLenum pname, GLfloat param) ]
		- glCombinerParameteriNV [ void CombinerParameteriNV(GLenum pname, GLint param) ]
		- glCombinerInputNV [ void CombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) ]
		- glCombinerOutputNV [ void CombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum) ]
		- glFinalCombinerInputNV [ void FinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) ]
		- glGetCombinerInputParameterfvNV [ void GetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params) ]
		- glGetCombinerInputParameterivNV [ void GetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params) ]
		- glGetCombinerOutputParameterfvNV [ void GetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params) ]
		- glGetCombinerOutputParameterivNV [ void GetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params) ]
		- glGetFinalCombinerInputParameterfvNV [ void GetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params) ]
		- glGetFinalCombinerInputParameterivNV [ void GetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params) ]
NV_register_combiners2 [ source: NV\NV_register_combiners2.txt ]
	- Strings = [ GL_NV_register_combiners2 ]
	- Funcs:
		- glCombinerStageParameterfvNV [ void CombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params) ]
		- glGetCombinerStageParameterfvNV [ void GetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params) ]
NV_representative_fragment_test [ source: NV\NV_representative_fragment_test.txt ]
	- Strings = [ GL_NV_representative_fragment_test ]
NV_robustness_video_memory_purge [ source: NV\NV_robustness_video_memory_purge.txt ]
	- Strings = [ GL_NV_robustness_video_memory_purge GLX_NV_robustness_video_memory_purge EGL_NV_robustness_video_memory_purge ]
NV_sample_locations [ source: NV\NV_sample_locations.txt ]
	- Strings = [ GL_NV_sample_locations ]
	- Funcs:
		- glFramebufferSampleLocationsfvNV [ void FramebufferSampleLocationsfvNV(enum target, uint start, sizei count, const float *v) ]
		- glNamedFramebufferSampleLocationsfvNV [ void NamedFramebufferSampleLocationsfvNV(uint framebuffer, uint start, sizei count, const float *v) ]
		- glResolveDepthValuesNV [ void ResolveDepthValuesNV(void) ]
NV_sample_mask_override_coverage [ source: NV\NV_sample_mask_override_coverage.txt ]
	- Strings = [ GL_NV_sample_mask_override_coverage ]
NV_scissor_exclusive [ source: NV\NV_scissor_exclusive.txt ]
	- Strings = [ GL_NV_scissor_exclusive ]
	- Funcs:
		- glScissorExclusiveArrayvNV [ void ScissorExclusiveArrayvNV(uint first, sizei count, const int *v) ]
		- glScissorExclusiveNV [ void ScissorExclusiveNV(int x, int y, sizei width, sizei height) ]
NV_shader_atomic_counters [ source: NV\NV_shader_atomic_counters.txt ]
	- Strings = [ GL_NV_shader_atomic_counters ]
NV_shader_atomic_float [ source: NV\NV_shader_atomic_float.txt ]
	- Strings = [ GL_NV_shader_atomic_float ]
NV_shader_atomic_float64 [ source: NV\NV_shader_atomic_float64.txt ]
	- Strings = [ GL_NV_shader_atomic_float64 ]
NV_shader_atomic_fp16_vector [ source: NV\NV_shader_atomic_fp16_vector.txt ]
	- Strings = [ GL_NV_shader_atomic_fp16_vector ]
NV_shader_atomic_int64 [ source: NV\NV_shader_atomic_int64.txt ]
	- Strings = [ GL_NV_shader_atomic_int64 ]
NV_shader_buffer_load [ source: NV\NV_shader_buffer_load.txt ]
	- Strings = [ GL_NV_shader_buffer_load ]
	- Funcs:
		- glMakeBufferResidentNV [ void MakeBufferResidentNV(enum target, enum access) ]
		- glMakeBufferNonResidentNV [ void MakeBufferNonResidentNV(enum target) ]
		- glIsBufferResidentNV [ boolean IsBufferResidentNV(enum target) ]
		- glMakeNamedBufferResidentNV [ void MakeNamedBufferResidentNV(uint buffer, enum access) ]
		- glMakeNamedBufferNonResidentNV [ void MakeNamedBufferNonResidentNV(uint buffer) ]
		- glIsNamedBufferResidentNV [ boolean IsNamedBufferResidentNV(uint buffer) ]
		- glGetBufferParameterui64vNV [ void GetBufferParameterui64vNV(enum target, enum pname, uint64EXT *params) ]
		- glGetNamedBufferParameterui64vNV [ void GetNamedBufferParameterui64vNV(uint buffer, enum pname, uint64EXT *params) ]
		- glGetIntegerui64vNV [ void GetIntegerui64vNV(enum value, uint64EXT *result) ]
		- glUniformui64NV [ void Uniformui64NV(int location, uint64EXT value) ]
		- glUniformui64vNV [ void Uniformui64vNV(int location, sizei count, const uint64EXT *value) ]
		- glGetUniformui64vNV [ void GetUniformui64vNV(uint program, int location, uint64EXT *params) ]
		- glProgramUniformui64NV [ void ProgramUniformui64NV(uint program, int location, uint64EXT value) ]
		- glProgramUniformui64vNV [ void ProgramUniformui64vNV(uint program, int location, sizei count, const uint64EXT *value) ]
NV_shader_buffer_store [ source: NV\NV_shader_buffer_store.txt ]
NV_shader_noperspective_interpolation [ source: NV\NV_shader_noperspective_interpolation.txt ]
	- Strings = [ GL_NV_shader_noperspective_interpolation ]
NV_shader_storage_buffer_object [ source: NV\NV_shader_storage_buffer_object.txt ]
	- Strings = [ GL_NV_shader_storage_buffer_object ]
NV_shader_subgroup_partitioned [ source: NV\NV_shader_subgroup_partitioned.txt ]
	- Strings = [ GL_NV_shader_subgroup_partitioned ]
NV_shader_texture_footprint [ source: NV\NV_shader_texture_footprint.txt ]
	- Strings = [ GL_NV_shader_texture_footprint ]
NV_shader_thread_group [ source: NV\NV_shader_thread_group.txt ]
	- Strings = [ GL_NV_shader_thread_group ]
NV_shader_thread_shuffle [ source: NV\NV_shader_thread_shuffle.txt ]
	- Strings = [ GL_NV_shader_thread_shuffle ]
NV_shading_rate_image [ source: NV\NV_shading_rate_image.txt ]
	- Strings = [ GL_NV_shading_rate_image ]
	- Funcs:
		- glBindShadingRateImageNV [ void BindShadingRateImageNV(uint texture) ]
		- glShadingRateImagePaletteNV [ void ShadingRateImagePaletteNV(uint viewport, uint first, sizei count, const enum *rates) ]
		- glGetShadingRateImagePaletteNV [ void GetShadingRateImagePaletteNV(uint viewport, uint entry, enum *rate) ]
		- glShadingRateImageBarrierNV [ void ShadingRateImageBarrierNV(boolean synchronize) ]
		- glShadingRateImageBarrierNV [ void ShadingRateImageBarrierNV(enum order) ]
		- glShadingRateSampleOrderCustomNV [ void ShadingRateSampleOrderCustomNV(enum rate, uint samples, const int *locations) ]
		- glGetShadingRateSampleLocationivNV [ void GetShadingRateSampleLocationivNV(enum rate, uint samples, uint index, int *location) ]
		- glShadingRateSampleOrderNV [ %Broken% ]
NV_shadow_samplers_array [ source: NV\NV_shadow_samplers_array.txt ]
	- Strings = [ GL_NV_shadow_samplers_array ]
NV_shadow_samplers_cube [ source: NV\NV_shadow_samplers_cube.txt ]
	- Strings = [ GL_NV_shadow_samplers_cube ]
NV_sRGB_formats [ source: NV\NV_sRGB_formats.txt ]
	- Strings = [ GL_NV_sRGB_formats ]
NV_stereo_view_rendering [ source: NV\NV_stereo_view_rendering.txt ]
	- Strings = [ GL_NV_stereo_view_rendering ]
NV_tessellation_program5 [ source: NV\NV_tessellation_program5.txt ]
NV_texgen_emboss [ source: NV\NV_texgen_emboss.txt ]
	- Strings = [ GL_NV_texgen_emboss ]
NV_texgen_reflection [ source: NV\NV_texgen_reflection.txt ]
	- Strings = [ GL_NV_texgen_reflection ]
NV_texture_array [ source: NV\NV_texture_array.txt ]
	- Strings = [ GL_NV_texture_array ]
	- Funcs:
		- glTexImage3DNV [ void TexImage3DNV(enum target, int level, enum internalFormat, sizei width, sizei height, sizei depth, int border, enum format, enum type, const void *pixels) ]
		- glTexSubImage3DNV [ void TexSubImage3DNV(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void *pixels) ]
		- glCopyTexSubImage3DNV [ void CopyTexSubImage3DNV(enum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
		- glCompressedTexImage3DNV [ void CompressedTexImage3DNV(enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, sizei imageSize, const void *data) ]
		- glCompressedTexSubImage3DNV [ void CompressedTexSubImage3DNV(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glFramebufferTextureLayerNV [ void FramebufferTextureLayerNV(enum target, enum attachment, uint texture, int level, int layer) ]
NV_texture_barrier [ source: NV\NV_texture_barrier.txt ]
	- Strings = [ GL_NV_texture_barrier ]
	- Funcs:
		- glTextureBarrierNV [ void TextureBarrierNV(void) ]
NV_texture_border_clamp [ source: NV\NV_texture_border_clamp.txt ]
	- Strings = [ GL_NV_texture_border_clamp ]
NV_texture_compression_latc [ source: NV\NV_texture_compression_latc.txt ]
	- Strings = [ GL_NV_texture_compression_latc ]
NV_texture_compression_s3tc [ source: NV\NV_texture_compression_s3tc.txt ]
	- Strings = [ GL_NV_texture_compression_s3tc ]
NV_texture_compression_s3tc_update [ source: NV\NV_texture_compression_s3tc_update.txt ]
	- Strings = [ GL_NV_texture_compression_s3tc_update ]
NV_texture_compression_vtc [ source: NV\NV_texture_compression_vtc.txt ]
	- Strings = [ GL_NV_texture_compression_vtc ]
NV_texture_env_combine4 [ source: NV\NV_texture_env_combine4.txt ]
	- Strings = [ GL_NV_texture_env_combine4 ]
NV_texture_expand_normal [ source: NV\NV_texture_expand_normal.txt ]
	- Strings = [ GL_NV_texture_expand_normal ]
NV_texture_multisample [ source: NV\NV_texture_multisample.txt ]
	- Strings = [ GL_NV_texture_multisample ]
	- Funcs:
		- glTexImage2DMultisampleCoverageNV [ void TexImage2DMultisampleCoverageNV(enum target, sizei coverageSamples, sizei colorSamples, int internalFormat, sizei width, sizei height, boolean fixedSampleLocations) ]
		- glTexImage3DMultisampleCoverageNV [ void TexImage3DMultisampleCoverageNV(enum target, sizei coverageSamples, sizei colorSamples, int internalFormat, sizei width, sizei height, sizei depth, boolean fixedSampleLocations) ]
		- glTextureImage2DMultisampleNV [ void TextureImage2DMultisampleNV(uint texture, enum target, sizei samples, int internalFormat, sizei width, sizei height, boolean fixedSampleLocations) ]
		- glTextureImage3DMultisampleNV [ void TextureImage3DMultisampleNV(uint texture, enum target, sizei samples, int internalFormat, sizei width, sizei height, sizei depth, boolean fixedSampleLocations) ]
		- glTextureImage2DMultisampleCoverageNV [ void TextureImage2DMultisampleCoverageNV(uint texture, enum target, sizei coverageSamples, sizei colorSamples, int internalFormat, sizei width, sizei height, boolean fixedSampleLocations) ]
		- glTextureImage3DMultisampleCoverageNV [ void TextureImage3DMultisampleCoverageNV(uint texture, enum target, sizei coverageSamples, sizei colorSamples, int internalFormat, sizei width, sizei height, sizei depth, boolean fixedSampleLocations) ]
NV_texture_npot_2D_mipmap [ source: NV\NV_texture_npot_2D_mipmap.txt ]
	- Strings = [ GL_NV_texture_npot_2D_mipmap ]
NV_texture_rectangle [ source: NV\NV_texture_rectangle.txt ]
	- Strings = [ GL_NV_texture_rectangle ]
NV_texture_rectangle_compressed [ source: NV\NV_texture_rectangle_compressed.txt ]
	- Strings = [ GL_NV_texture_rectangle_compressed ]
NV_texture_shader [ source: NV\NV_texture_shader.txt ]
	- Strings = [ GL_NV_texture_shader ]
NV_texture_shader2 [ source: NV\NV_texture_shader2.txt ]
	- Strings = [ GL_NV_texture_shader2 ]
NV_texture_shader3 [ source: NV\NV_texture_shader3.txt ]
	- Strings = [ GL_NV_texture_shader3 ]
NV_transform_feedback [ source: NV\NV_transform_feedback.txt ]
	- Strings = [ GL_NV_transform_feedback ]
	- Funcs:
		- glBindBufferRangeNV [ void BindBufferRangeNV(enum target, uint index, uint buffer, intptr offset, sizeiptr size) ]
		- glBindBufferOffsetNV [ void BindBufferOffsetNV(enum target, uint index, uint buffer, intptr offset) ]
		- glBindBufferBaseNV [ void BindBufferBaseNV(enum target, uint index, uint buffer) ]
		- glTransformFeedbackAttribsNV [ void TransformFeedbackAttribsNV(sizei count, const int *attribs, enum bufferMode) ]
		- glTransformFeedbackVaryingsNV [ void TransformFeedbackVaryingsNV(uint program, sizei count, const int *locations, enum bufferMode) ]
		- glBeginTransformFeedbackNV [ void BeginTransformFeedbackNV(enum primitiveMode) ]
		- glEndTransformFeedbackNV [ void EndTransformFeedbackNV() ]
		- glGetVaryingLocationNV [ int GetVaryingLocationNV(uint program, const char *name) ]
		- glGetActiveVaryingNV [ void GetActiveVaryingNV(uint program, uint index, sizei bufSize, sizei *length, sizei *size, enum *type, char *name) ]
		- glActiveVaryingNV [ void ActiveVaryingNV(uint program, const char *name) ]
		- glGetTransformFeedbackVaryingNV [ void GetTransformFeedbackVaryingNV(uint program, uint index, int *location) ]
		- glGetIntegerIndexedvEXT [ void GetIntegerIndexedvEXT(enum param, uint index, int *values) ]
		- glGetBooleanIndexedvEXT [ void GetBooleanIndexedvEXT(enum param, uint index, boolean *values) ]
NV_transform_feedback2 [ source: NV\NV_transform_feedback2.txt ]
	- Strings = [ GL_NV_transform_feedback2 ]
	- Funcs:
		- glBindTransformFeedbackNV [ void BindTransformFeedbackNV(enum target, uint id) ]
		- glDeleteTransformFeedbacksNV [ void DeleteTransformFeedbacksNV(sizei n, const uint *ids) ]
		- glGenTransformFeedbacksNV [ void GenTransformFeedbacksNV(sizei n, uint *ids) ]
		- glIsTransformFeedbackNV [ boolean IsTransformFeedbackNV(uint id) ]
		- glPauseTransformFeedbackNV [ void PauseTransformFeedbackNV(void) ]
		- glResumeTransformFeedbackNV [ void ResumeTransformFeedbackNV(void) ]
		- glDrawTransformFeedbackNV [ void DrawTransformFeedbackNV(enum mode, uint id) ]
NV_uniform_buffer_unified_memory [ source: NV\NV_uniform_buffer_unified_memory.txt ]
	- Strings = [ GL_NV_uniform_buffer_unified_memory ]
NV_vdpau_interop [ source: NV\NV_vdpau_interop.txt ]
	- Strings = [ GL_NV_vdpau_interop ]
	- Funcs:
		- glVDPAUInitNV [ void VDPAUInitNV (const void *vdpDevice, const void *getProcAddress) ]
		- glVDPAUFiniNV [ void VDPAUFiniNV (void) ]
		- glVDPAURegisterVideoSurfaceNV [ vdpauSurfaceNV VDPAURegisterVideoSurfaceNV (const void *vdpSurface, enum target, sizei numTextureNames, const uint *textureNames) ]
		- glVDPAURegisterOutputSurfaceNV [ vdpauSurfaceNV VDPAURegisterOutputSurfaceNV (const void *vdpSurface, enum target, sizei numTextureNames, const uint *textureNames) ]
		- glVDPAUIsSurfaceNV [ boolean VDPAUIsSurfaceNV (vdpauSurfaceNV surface) ]
		- glVDPAUUnregisterSurfaceNV [ void VDPAUUnregisterSurfaceNV (vdpauSurfaceNV surface) ]
		- glVDPAUGetSurfaceivNV [ void VDPAUGetSurfaceivNV (vdpauSurfaceNV surface, enum pname, sizei bufSize, sizei *length, int *values) ]
		- glVDPAUSurfaceAccessNV [ void VDPAUSurfaceAccessNV (vdpauSurfaceNV surface, enum access) ]
		- glVDPAUMapSurfacesNV [ void VDPAUMapSurfacesNV (sizei numSurfaces, const vdpauSurfaceNV *surfaces) ]
		- glVDPAUUnmapSurfacesNV [ void VDPAUUnmapSurfacesNV (sizei numSurface, const vdpauSurfaceNV *surfaces) ]
NV_vdpau_interop2 [ source: NV\NV_vdpau_interop2.txt ]
	- Strings = [ GL_NV_vdpau_interop2 ]
	- Funcs:
		- glVDPAURegisterVideoSurfaceWithPictureStructureNV [ vdpauSurfaceNV VDPAURegisterVideoSurfaceWithPictureStructureNV (const void *vdpSurface, enum target, sizei numTextureNames, const uint *textureNames, boolean isFrameStructure) ]
NV_vertex_array_range [ source: NV\NV_vertex_array_range.txt ]
	- Strings = [ GL_NV_vertex_array_range ]
	- Funcs:
		- glVertexArrayRangeNV [ void VertexArrayRangeNV(sizei length, void *pointer) ]
		- glFlushVertexArrayRangeNV [ void FlushVertexArrayRangeNV(void) ]
		- wglAllocateMemoryNV [ void *wglAllocateMemoryNV(sizei size, float readFrequency, float writeFrequency, float priority) ]
		- wglFreeMemoryNV [ void wglFreeMemoryNV(void *pointer) ]
NV_vertex_array_range2 [ source: NV\NV_vertex_array_range2.txt ]
	- Strings = [ GL_NV_vertex_array_range2 ]
NV_vertex_attrib_integer_64bit [ source: NV\NV_vertex_attrib_integer_64bit.txt ]
	- Strings = [ GL_NV_vertex_attrib_integer_64bit ]
	- Funcs:
		- glVertexAttribL1i64NV [ void VertexAttribL1i64NV(uint index, int64EXT x) ]
		- glVertexAttribL2i64NV [ void VertexAttribL2i64NV(uint index, int64EXT x, int64EXT y) ]
		- glVertexAttribL3i64NV [ void VertexAttribL3i64NV(uint index, int64EXT x, int64EXT y, int64EXT z) ]
		- glVertexAttribL4i64NV [ void VertexAttribL4i64NV(uint index, int64EXT x, int64EXT y, int64EXT z, int64EXT w) ]
		- glVertexAttribL1i64vNV [ void VertexAttribL1i64vNV(uint index, const int64EXT *v) ]
		- glVertexAttribL2i64vNV [ void VertexAttribL2i64vNV(uint index, const int64EXT *v) ]
		- glVertexAttribL3i64vNV [ void VertexAttribL3i64vNV(uint index, const int64EXT *v) ]
		- glVertexAttribL4i64vNV [ void VertexAttribL4i64vNV(uint index, const int64EXT *v) ]
		- glVertexAttribL1ui64NV [ void VertexAttribL1ui64NV(uint index, uint64EXT x) ]
		- glVertexAttribL2ui64NV [ void VertexAttribL2ui64NV(uint index, uint64EXT x, uint64EXT y) ]
		- glVertexAttribL3ui64NV [ void VertexAttribL3ui64NV(uint index, uint64EXT x, uint64EXT y, uint64EXT z) ]
		- glVertexAttribL4ui64NV [ void VertexAttribL4ui64NV(uint index, uint64EXT x, uint64EXT y, uint64EXT z, uint64EXT w) ]
		- glVertexAttribL1ui64vNV [ void VertexAttribL1ui64vNV(uint index, const uint64EXT *v) ]
		- glVertexAttribL2ui64vNV [ void VertexAttribL2ui64vNV(uint index, const uint64EXT *v) ]
		- glVertexAttribL3ui64vNV [ void VertexAttribL3ui64vNV(uint index, const uint64EXT *v) ]
		- glVertexAttribL4ui64vNV [ void VertexAttribL4ui64vNV(uint index, const uint64EXT *v) ]
		- glGetVertexAttribLi64vNV [ void GetVertexAttribLi64vNV(uint index, enum pname, int64EXT *params) ]
		- glGetVertexAttribLui64vNV [ void GetVertexAttribLui64vNV(uint index, enum pname, uint64EXT *params) ]
		- glVertexAttribLFormatNV [ void VertexAttribLFormatNV(uint index, int size, enum type, sizei stride) ]
NV_vertex_buffer_unified_memory [ source: NV\NV_vertex_buffer_unified_memory.txt ]
	- Strings = [ GL_NV_vertex_buffer_unified_memory ]
	- Funcs:
		- glBufferAddressRangeNV [ void BufferAddressRangeNV(enum pname, uint index, uint64EXT address, sizeiptr length) ]
		- glVertexFormatNV [ void VertexFormatNV(int size, enum type, sizei stride) ]
		- glNormalFormatNV [ void NormalFormatNV(enum type, sizei stride) ]
		- glColorFormatNV [ void ColorFormatNV(int size, enum type, sizei stride) ]
		- glIndexFormatNV [ void IndexFormatNV(enum type, sizei stride) ]
		- glTexCoordFormatNV [ void TexCoordFormatNV(int size, enum type, sizei stride) ]
		- glEdgeFlagFormatNV [ void EdgeFlagFormatNV(sizei stride) ]
		- glSecondaryColorFormatNV [ void SecondaryColorFormatNV(int size, enum type, sizei stride) ]
		- glFogCoordFormatNV [ void FogCoordFormatNV(enum type, sizei stride) ]
		- glVertexAttribFormatNV [ void VertexAttribFormatNV(uint index, int size, enum type, boolean normalized, sizei stride) ]
		- glVertexAttribIFormatNV [ void VertexAttribIFormatNV(uint index, int size, enum type, sizei stride) ]
		- glGetIntegerui64i_vNV [ void GetIntegerui64i_vNV(enum value, uint index, uint64EXT result[]) ]
NV_vertex_program [ source: NV\NV_vertex_program.txt ]
	- Strings = [ GL_NV_vertex_program ]
	- Funcs:
		- glBindProgramNV [ void BindProgramNV(enum target, uint id) ]
		- glDeleteProgramsNV [ void DeleteProgramsNV(sizei n, const uint *ids) ]
		- glExecuteProgramNV [ void ExecuteProgramNV(enum target, uint id, const float *params) ]
		- glGenProgramsNV [ void GenProgramsNV(sizei n, uint *ids) ]
		- glAreProgramsResidentNV [ boolean AreProgramsResidentNV(sizei n, const uint *ids, boolean *residences) ]
		- glRequestResidentProgramsNV [ void RequestResidentProgramsNV(sizei n, uint *ids) ]
		- glGetProgramParameterfvNV [ void GetProgramParameterfvNV(enum target, uint index, enum pname, float *params) ]
		- glGetProgramParameterdvNV [ void GetProgramParameterdvNV(enum target, uint index, enum pname, double *params) ]
		- glGetProgramivNV [ void GetProgramivNV(uint id, enum pname, int *params) ]
		- glGetProgramStringNV [ void GetProgramStringNV(uint id, enum pname, ubyte *program) ]
		- glGetTrackMatrixivNV [ void GetTrackMatrixivNV(enum target, uint address, enum pname, int *params) ]
		- glGetVertexAttribdvNV [ void GetVertexAttribdvNV(uint index, enum pname, double *params) ]
		- glGetVertexAttribfvNV [ void GetVertexAttribfvNV(uint index, enum pname, float *params) ]
		- glGetVertexAttribivNV [ void GetVertexAttribivNV(uint index, enum pname, int *params) ]
		- glGetVertexAttribPointervNV [ void GetVertexAttribPointervNV(uint index, enum pname, void **pointer) ]
		- glIsProgramNV [ boolean IsProgramNV(uint id) ]
		- glLoadProgramNV [ void LoadProgramNV(enum target, uint id, sizei len, const ubyte *program) ]
		- glProgramParameter4fNV [ void ProgramParameter4fNV(enum target, uint index, float x, float y, float z, float w) ]
		- glProgramParameter4dNV [ void ProgramParameter4dNV(enum target, uint index, double x, double y, double z, double w) ]
		- glProgramParameter4dvNV [ void ProgramParameter4dvNV(enum target, uint index, const double *params) ]
		- glProgramParameter4fvNV [ void ProgramParameter4fvNV(enum target, uint index, const float *params) ]
		- glProgramParameters4dvNV [ void ProgramParameters4dvNV(enum target, uint index, sizei num, const double *params) ]
		- glProgramParameters4fvNV [ void ProgramParameters4fvNV(enum target, uint index, sizei num, const float *params) ]
		- glTrackMatrixNV [ void TrackMatrixNV(enum target, uint address, enum matrix, enum transform) ]
		- glVertexAttribPointerNV [ void VertexAttribPointerNV(uint index, int size, enum type, sizei stride, const void *pointer) ]
		- glVertexAttrib1sNV [ void VertexAttrib1sNV(uint index, short x) ]
		- glVertexAttrib1fNV [ void VertexAttrib1fNV(uint index, float x) ]
		- glVertexAttrib1dNV [ void VertexAttrib1dNV(uint index, double x) ]
		- glVertexAttrib2sNV [ void VertexAttrib2sNV(uint index, short x, short y) ]
		- glVertexAttrib2fNV [ void VertexAttrib2fNV(uint index, float x, float y) ]
		- glVertexAttrib2dNV [ void VertexAttrib2dNV(uint index, double x, double y) ]
		- glVertexAttrib3sNV [ void VertexAttrib3sNV(uint index, short x, short y, short z) ]
		- glVertexAttrib3fNV [ void VertexAttrib3fNV(uint index, float x, float y, float z) ]
		- glVertexAttrib3dNV [ void VertexAttrib3dNV(uint index, double x, double y, double z) ]
		- glVertexAttrib4sNV [ void VertexAttrib4sNV(uint index, short x, short y, short z, short w) ]
		- glVertexAttrib4fNV [ void VertexAttrib4fNV(uint index, float x, float y, float z, float w) ]
		- glVertexAttrib4dNV [ void VertexAttrib4dNV(uint index, double x, double y, double z, double w) ]
		- glVertexAttrib4ubNV [ void VertexAttrib4ubNV(uint index, ubyte x, ubyte y, ubyte z, ubyte w) ]
		- glVertexAttrib1svNV [ void VertexAttrib1svNV(uint index, const short *v) ]
		- glVertexAttrib1fvNV [ void VertexAttrib1fvNV(uint index, const float *v) ]
		- glVertexAttrib1dvNV [ void VertexAttrib1dvNV(uint index, const double *v) ]
		- glVertexAttrib2svNV [ void VertexAttrib2svNV(uint index, const short *v) ]
		- glVertexAttrib2fvNV [ void VertexAttrib2fvNV(uint index, const float *v) ]
		- glVertexAttrib2dvNV [ void VertexAttrib2dvNV(uint index, const double *v) ]
		- glVertexAttrib3svNV [ void VertexAttrib3svNV(uint index, const short *v) ]
		- glVertexAttrib3fvNV [ void VertexAttrib3fvNV(uint index, const float *v) ]
		- glVertexAttrib3dvNV [ void VertexAttrib3dvNV(uint index, const double *v) ]
		- glVertexAttrib4svNV [ void VertexAttrib4svNV(uint index, const short *v) ]
		- glVertexAttrib4fvNV [ void VertexAttrib4fvNV(uint index, const float *v) ]
		- glVertexAttrib4dvNV [ void VertexAttrib4dvNV(uint index, const double *v) ]
		- glVertexAttrib4ubvNV [ void VertexAttrib4ubvNV(uint index, const ubyte *v) ]
		- glVertexAttribs1svNV [ void VertexAttribs1svNV(uint index, sizei n, const short *v) ]
		- glVertexAttribs1fvNV [ void VertexAttribs1fvNV(uint index, sizei n, const float *v) ]
		- glVertexAttribs1dvNV [ void VertexAttribs1dvNV(uint index, sizei n, const double *v) ]
		- glVertexAttribs2svNV [ void VertexAttribs2svNV(uint index, sizei n, const short *v) ]
		- glVertexAttribs2fvNV [ void VertexAttribs2fvNV(uint index, sizei n, const float *v) ]
		- glVertexAttribs2dvNV [ void VertexAttribs2dvNV(uint index, sizei n, const double *v) ]
		- glVertexAttribs3svNV [ void VertexAttribs3svNV(uint index, sizei n, const short *v) ]
		- glVertexAttribs3fvNV [ void VertexAttribs3fvNV(uint index, sizei n, const float *v) ]
		- glVertexAttribs3dvNV [ void VertexAttribs3dvNV(uint index, sizei n, const double *v) ]
		- glVertexAttribs4svNV [ void VertexAttribs4svNV(uint index, sizei n, const short *v) ]
		- glVertexAttribs4fvNV [ void VertexAttribs4fvNV(uint index, sizei n, const float *v) ]
		- glVertexAttribs4dvNV [ void VertexAttribs4dvNV(uint index, sizei n, const double *v) ]
		- glVertexAttribs4ubvNV [ void VertexAttribs4ubvNV(uint index, sizei n, const ubyte *v) ]
NV_vertex_program1_1 [ source: NV\NV_vertex_program1_1.txt ]
	- Strings = [ GL_NV_vertex_program1_1 ]
NV_vertex_program2 [ source: NV\NV_vertex_program2.txt ]
	- Strings = [ GL_NV_vertex_program2 ]
NV_vertex_program2_option [ source: NV\NV_vertex_program2_option.txt ]
	- Strings = [ GL_NV_vertex_program2_option ]
NV_vertex_program3 [ source: NV\NV_vertex_program3.txt ]
	- Strings = [ GL_NV_vertex_program3 ]
NV_vertex_program4 [ source: NV\NV_vertex_program4.txt ]
	- Funcs:
		- glVertexAttribI1iEXT [ void VertexAttribI1iEXT(uint index, int x) ]
		- glVertexAttribI2iEXT [ void VertexAttribI2iEXT(uint index, int x, int y) ]
		- glVertexAttribI3iEXT [ void VertexAttribI3iEXT(uint index, int x, int y, int z) ]
		- glVertexAttribI4iEXT [ void VertexAttribI4iEXT(uint index, int x, int y, int z, int w) ]
		- glVertexAttribI1uiEXT [ void VertexAttribI1uiEXT(uint index, uint x) ]
		- glVertexAttribI2uiEXT [ void VertexAttribI2uiEXT(uint index, uint x, uint y) ]
		- glVertexAttribI3uiEXT [ void VertexAttribI3uiEXT(uint index, uint x, uint y, uint z) ]
		- glVertexAttribI4uiEXT [ void VertexAttribI4uiEXT(uint index, uint x, uint y, uint z, uint w) ]
		- glVertexAttribI1ivEXT [ void VertexAttribI1ivEXT(uint index, const int *v) ]
		- glVertexAttribI2ivEXT [ void VertexAttribI2ivEXT(uint index, const int *v) ]
		- glVertexAttribI3ivEXT [ void VertexAttribI3ivEXT(uint index, const int *v) ]
		- glVertexAttribI4ivEXT [ void VertexAttribI4ivEXT(uint index, const int *v) ]
		- glVertexAttribI1uivEXT [ void VertexAttribI1uivEXT(uint index, const uint *v) ]
		- glVertexAttribI2uivEXT [ void VertexAttribI2uivEXT(uint index, const uint *v) ]
		- glVertexAttribI3uivEXT [ void VertexAttribI3uivEXT(uint index, const uint *v) ]
		- glVertexAttribI4uivEXT [ void VertexAttribI4uivEXT(uint index, const uint *v) ]
		- glVertexAttribI4bvEXT [ void VertexAttribI4bvEXT(uint index, const byte *v) ]
		- glVertexAttribI4svEXT [ void VertexAttribI4svEXT(uint index, const short *v) ]
		- glVertexAttribI4ubvEXT [ void VertexAttribI4ubvEXT(uint index, const ubyte *v) ]
		- glVertexAttribI4usvEXT [ void VertexAttribI4usvEXT(uint index, const ushort *v) ]
		- glVertexAttribIPointerEXT [ void VertexAttribIPointerEXT(uint index, int size, enum type, sizei stride, const void *pointer) ]
		- glGetVertexAttribIivEXT [ void GetVertexAttribIivEXT(uint index, enum pname, int *params) ]
		- glGetVertexAttribIuivEXT [ void GetVertexAttribIuivEXT(uint index, enum pname, uint *params) ]
NV_video_capture [ source: NV\NV_video_capture.txt ]
	- Strings = [ GL_NV_video_capture GLX_NV_video_capture WGL_NV_video_capture ]
	- Funcs:
		- glBeginVideoCaptureNV [ void BeginVideoCaptureNV(uint video_capture_slot) ]
		- glBindVideoCaptureStreamBufferNV [ void BindVideoCaptureStreamBufferNV(uint video_capture_slot, uint stream, enum frame_region, intptrARB offset) ]
		- glBindVideoCaptureStreamTextureNV [ void BindVideoCaptureStreamTextureNV(uint video_capture_slot, uint stream, enum frame_region, enum target, uint texture) ]
		- glEndVideoCaptureNV [ void EndVideoCaptureNV(uint video_capture_slot) ]
		- glGetVideoCaptureivNV [ void GetVideoCaptureivNV(uint video_capture_slot, enum pname, int *params) ]
		- glGetVideoCaptureStreamivNV [ void GetVideoCaptureStreamivNV(uint video_capture_slot, uint stream, enum pname, glint *params) ]
		- glGetVideoCaptureStreamfvNV [ void GetVideoCaptureStreamfvNV(uint video_capture_slot, uint stream, enum pname, glfloat *params) ]
		- glGetVideoCaptureStreamdvNV [ void GetVideoCaptureStreamdvNV(uint video_capture_slot, uint stream, enum pname, gldouble *params) ]
		- glVideoCaptureNV [ enum VideoCaptureNV(uint video_capture_slot, uint *sequence_num, uint64EXT *capture_time) ]
		- glVideoCaptureStreamParameterivNV [ void VideoCaptureStreamParameterivNV(uint video_capture_slot, uint stream, GLenum pname, const glint *params) ]
		- glVideoCaptureStreamParameterfvNV [ void VideoCaptureStreamParameterfvNV(uint video_capture_slot, uint stream, GLenum pname, const glfloat *params) ]
		- glVideoCaptureStreamParameterdvNV [ void VideoCaptureStreamParameterdvNV(uint video_capture_slot, uint stream, GLenum pname, const gldouble *params) ]
		- glXBindVideoCaptureDeviceNV [ int glXBindVideoCaptureDeviceNV(Display *dpy, unsigned int video_capture_slot, GLXVideoCaptureDeviceNV device) ]
		- glXEnumerateVideoCaptureDevicesNV [ GLXVideoCaptureDeviceNV * glXEnumerateVideoCaptureDevicesNV(Display *dpy, int screen, int *nelements) ]
		- glXLockVideoCaptureDeviceNV [ void glXLockVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device) ]
		- glXQueryVideoCaptureDeviceNV [ int glXQueryVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device, int attribute, int *value) ]
		- glXReleaseVideoCaptureDeviceNV [ void glXReleaseVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device) ]
		- wglBindVideoCaptureDeviceNV [ BOOL wglBindVideoCaptureDeviceNV(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice) ]
		- wglEnumerateVideoCaptureDevicesNV [ UINT wglEnumerateVideoCaptureDevicesNV(HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList) ]
		- wglLockVideoCaptureDeviceNV [ BOOL wglLockVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice) ]
		- wglQueryVideoCaptureDeviceNV [ BOOL wglQueryVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue) ]
		- wglReleaseVideoCaptureDeviceNV [ BOOL wglReleaseVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice) ]
NV_viewport_array [ source: NV\NV_viewport_array.txt ]
	- Strings = [ GL_NV_viewport_array ]
	- Funcs:
		- glViewportArrayvNV [ void ViewportArrayvNV(uint first, sizei count, const float * v) ]
		- glViewportIndexedfNV [ void ViewportIndexedfNV(uint index, float x, float y, float w, float h) ]
		- glViewportIndexedfvNV [ void ViewportIndexedfvNV(uint index, const float * v) ]
		- glScissorArrayvNV [ void ScissorArrayvNV(uint first, sizei count, const int * v) ]
		- glScissorIndexedNV [ void ScissorIndexedNV(uint index, int left, int bottom, sizei width, sizei height) ]
		- glScissorIndexedvNV [ void ScissorIndexedvNV(uint index, const int * v) ]
		- glDepthRangeArrayfvNV [ void DepthRangeArrayfvNV(uint first, sizei count, const float * v) ]
		- glDepthRangeIndexedfNV [ void DepthRangeIndexedfNV(uint index, float n, float f) ]
		- glGetFloati_vNV [ void GetFloati_vNV(enum target, uint index, float *data) ]
		- glEnableiNV [ void EnableiNV(enum target, uint index) ]
		- glDisableiNV [ void DisableiNV(enum target, uint index) ]
		- glIsEnablediNV [ boolean IsEnablediNV(enum target, uint index) ]
NV_viewport_array2 [ source: NV\NV_viewport_array2.txt ]
	- Strings = [ GL_NV_viewport_array2 ]
NV_viewport_swizzle [ source: NV\NV_viewport_swizzle.txt ]
	- Strings = [ GL_NV_viewport_swizzle ]
	- Funcs:
		- glViewportSwizzleNV [ void ViewportSwizzleNV(uint index, enum swizzlex, enum swizzley, enum swizzlez, enum swizzlew) ]
NV_delay_before_swap [ source: NV\WGL_NV_delay_before_swap.txt ]
	- Strings = [ WGL_NV_delay_before_swap ]
	- Funcs:
		- wglDelayBeforeSwapNV [ BOOL wglDelayBeforeSwapNV(HDC hDC, GLfloat seconds) ]
NV_DX_interop [ source: NV\WGL_NV_DX_interop.txt ]
	- Strings = [ WGL_NV_DX_interop ]
	- Funcs:
		- wglDXSetResourceShareHandleNV [ BOOL wglDXSetResourceShareHandleNV(void *dxObject, HANDLE shareHandle) ]
		- wglDXOpenDeviceNV [ HANDLE wglDXOpenDeviceNV(void *dxDevice) ]
		- wglDXCloseDeviceNV [ BOOL wglDXCloseDeviceNV(HANDLE hDevice) ]
		- wglDXRegisterObjectNV [ HANDLE wglDXRegisterObjectNV(HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access) ]
		- wglDXUnregisterObjectNV [ BOOL wglDXUnregisterObjectNV(HANDLE hDevice, HANDLE hObject) ]
		- wglDXObjectAccessNV [ BOOL wglDXObjectAccessNV(HANDLE hObject, GLenum access) ]
		- wglDXLockObjectsNV [ BOOL wglDXLockObjectsNV(HANDLE hDevice, GLint count, HANDLE *hObjects) ]
		- wglDXUnlockObjectsNV [ BOOL wglDXUnlockObjectsNV(HANDLE hDevice, GLint count, HANDLE *hObjects) ]
NV_DX_interop2 [ source: NV\WGL_NV_DX_interop2.txt ]
	- Strings = [ WGL_NV_DX_interop2 ]
WGL_NV_gpu_affinity [ source: NV\WGL_NV_gpu_affinity.txt ]
	- Strings = [ WGL_NV_gpu_affinity ]
	- Funcs:
		- wglEnumGpusNV [ BOOL wglEnumGpusNV(UINT iGpuIndex, HGPUNV *phGpu) ]
		- wglEnumGpuDevicesNV [ BOOL wglEnumGpuDevicesNV(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice) ]
		- wglCreateAffinityDCNV [ HDC wglCreateAffinityDCNV(const HGPUNV *phGpuList) ]
		- wglEnumGpusFromAffinityDCNV [ BOOL wglEnumGpusFromAffinityDCNV(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu) ]
		- wglDeleteDCNV [ BOOL wglDeleteDCNV(HDC hdc) ]
NV_multigpu_context [ source: NV\WGL_NV_multigpu_context.txt ]
	- Strings = [ WGL_NV_multigpu_context ]
NV_render_depth_texture [ source: NV\WGL_NV_render_depth_texture.txt ]
	- Strings = [ WGL_NV_render_depth_texture ]
NV_render_texture_rectangle [ source: NV\WGL_NV_render_texture_rectangle.txt ]
	- Strings = [ WGL_NV_render_texture_rectangle ]
NV_swap_group [ source: NV\WGL_NV_swap_group.txt ]
	- Strings = [ WGL_NV_swap_group ]
	- Funcs:
		- wglJoinSwapGroupNV [ BOOL wglJoinSwapGroupNV(HDC hDC, GLuint group) ]
		- wglBindSwapBarrierNV [ BOOL wglBindSwapBarrierNV(GLuint group, GLuint barrier) ]
		- wglQuerySwapGroupNV [ BOOL wglQuerySwapGroupNV(HDC hDC, GLuint *group, GLuint *barrier) ]
		- wglQueryMaxSwapGroupsNV [ BOOL wglQueryMaxSwapGroupsNV(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers) ]
		- wglQueryFrameCountNV [ BOOL wglQueryFrameCountNV(HDC hDC, GLuint *count) ]
		- wglResetFrameCountNV [ BOOL wglResetFrameCountNV(HDC hDC) ]
NV_video_output [ source: NV\WGL_NV_video_output.txt ]
	- Strings = [ WGL_NV_video_output ]
	- Funcs:
		- wglGetVideoDeviceNV [ BOOL wglGetVideoDeviceNV(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice) ]
		- wglReleaseVideoDeviceNV [ BOOL wglReleaseVideoDeviceNV(HPVIDEODEV hVideoDevice) ]
		- wglBindVideoImageNV [ BOOL wglBindVideoImageNV (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer) ]
		- wglReleaseVideoImageNV [ BOOL wglReleaseVideoImageNV (HPBUFFERARB hPbuffer, int iVideoBuffer) ]
		- wglSendPbufferToVideoNV [ BOOL wglSendPbufferToVideoNV (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock) ]
		- wglGetVideoInfoNV [ BOOL wglGetVideoInfoNV (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo) ]
NVX_blend_equation_advanced_multi_draw_buffers [ source: NVX\NVX_blend_equation_advanced_multi_draw_buffers.txt ]
	- Strings = [ GL_NVX_blend_equation_advanced_multi_draw_buffers ]
NVX_conditional_render [ source: NVX\NVX_conditional_render.txt ]
	- Strings = [ GL_NVX_conditional_render ]
	- Funcs:
		- glBeginConditionalRenderNVX [ void BeginConditionalRenderNVX(uint id) ]
		- glEndConditionalRenderNVX [ void EndConditionalRenderNVX(void) ]
NVX_gpu_memory_info [ source: NVX\NVX_gpu_memory_info.txt ]
	- Strings = [ GL_NVX_gpu_memory_info ]
NVX_gpu_multicast2 [ source: NVX\NVX_gpu_multicast2.txt ]
	- Strings = [ GL_NVX_gpu_multicast2 ]
	- Funcs:
		- glAsyncCopyImageSubDataNVX [ uint AsyncCopyImageSubDataNVX( sizei waitSemaphoreCount, const uint *waitSemaphoreArray, const uint64 *waitValueArray, uint srcGpu, GLbitfield dstGpuMask, uint srcName, GLenum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, GLenum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei srcWidth, sizei srcHeight, sizei srcDepth, sizei signalSemaphoreCount, const uint *signalSemaphoreArray, const uint64 *signalValueArray) ]
		- glAsyncCopyBufferSubDataNVX [ sync AsyncCopyBufferSubDataNVX( sizei waitSemaphoreCount, const uint *waitSemaphoreArray, const uint64 *fenceValueArray, uint readGpu, GLbitfield writeGpuMask, uint readBuffer, uint writeBuffer, GLintptr readOffset, GLintptr writeOffset, sizeiptr size, sizei signalSemaphoreCount, const uint *signalSemaphoreArray, const uint64 *signalValueArray) ]
		- glUploadGpuMaskNVX [ void UploadGpuMaskNVX(bitfield mask) ]
		- glMulticastViewportArrayvNVX [ void MulticastViewportArrayvNVX(uint gpu, uint first, sizei count, const float *v) ]
		- glMulticastScissorArrayvNVX [ void MulticastScissorArrayvNVX(uint gpu, uint first, sizei count, const int *v) ]
		- glMulticastViewportPositionWScaleNVX [ void MulticastViewportPositionWScaleNVX(uint gpu, uint index, float xcoeff, float ycoeff) ]
NVX_linked_gpu_multicast [ source: NVX\NVX_linked_gpu_multicast.txt ]
	- Strings = [ GL_NVX_linked_gpu_multicast ]
	- Funcs:
		- glLGPUNamedBufferSubDataNVX [ void LGPUNamedBufferSubDataNVX( bitfield gpuMask, uint buffer, intptr offset, sizeiptr size, const void *data) ]
		- glLGPUCopyImageSubDataNVX [ void LGPUCopyImageSubDataNVX( uint sourceGpu, bitfield destinationGpuMask, uint srcName, enum srcTarget, int srcLevel, int srcX, int srxY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei width, sizei height, sizei depth) ]
		- glLGPUInterlockNVX [ void LGPUInterlockNVX(void) ]
NVX_progress_fence [ source: NVX\NVX_progress_fence.txt ]
	- Strings = [ GL_NVX_progress_fence ]
	- Funcs:
		- glCreateProgressFenceNVX [ uint CreateProgressFenceNVX() ]
		- glSignalSemaphoreui64NVX [ void SignalSemaphoreui64NVX(uint signalGpu, sizei fenceObjectCount, const uint *semaphoreArray, const uint64 *fenceValueArray) ]
		- glWaitSemaphoreui64NVX [ void WaitSemaphoreui64NVX(uint waitGpu, sizei fenceObjectCount, const uint *semaphoreArray, const uint64 *fenceValueArray) ]
		- glClientWaitSemaphoreui64NVX [ void ClientWaitSemaphoreui64NVX(sizei fenceObjectCount, const uint *semaphoreArray, const uint64 *fenceValueArray) ]
KHR_fence_sync [ source: OES\EGL_KHR_fence_sync.txt ]
	- Strings = [ EGL_KHR_fence_sync GL_OES_EGL_sync VG_KHR_EGL_sync ]
	- Funcs:
		- eglCreateSyncKHR [ EGLSyncKHR eglCreateSyncKHR( EGLDisplay dpy, EGLenum type, const EGLint *attrib_list) ]
		- eglDestroySyncKHR [ EGLBoolean eglDestroySyncKHR( EGLDisplay dpy, EGLSyncKHR sync) ]
		- eglClientWaitSyncKHR [ EGLint eglClientWaitSyncKHR( EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout) ]
		- eglGetSyncAttribKHR [ EGLBoolean eglGetSyncAttribKHR( EGLDisplay dpy, EGLSyncKHR sync, EGLint attribute, EGLint *value) ]
OES_blend_equation_separate [ source: OES\OES_blend_equation_separate.txt ]
	- Strings = [ GL_OES_blend_equation_separate ]
	- Funcs:
		- glBlendEquationSeparateOES [ void BlendEquationSeparateOES(enum modeRGB, enum modeAlpha) ]
OES_blend_func_separate [ source: OES\OES_blend_func_separate.txt ]
	- Strings = [ GL_OES_blend_func_separate ]
	- Funcs:
		- glBlendFuncSeparateOES [ void BlendFuncSeparateOES(enum sfactorRGB, enum dfactorRGB, enum sfactorAlpha, enum dfactorAlpha) ]
OES_blend_subtract [ source: OES\OES_blend_subtract.txt ]
	- Strings = [ GL_OES_blend_subtract ]
	- Funcs:
		- glBlendEquationOES [ void BlendEquationOES(enum mode) ]
OES_byte_coordinates [ source: OES\OES_byte_coordinates.txt ]
	- Strings = [ GL_OES_byte_coordinates ]
OES_compressed_ETC1_RGB8_texture: [ source: OES\OES_compressed_ETC1_RGB8_texture.txt ]
	- Strings = [ GL_OES_compressed_ETC1_RGB8_texture ]
OES_compressed_paletted_texture [ source: OES\OES_compressed_paletted_texture.txt ]
	- Strings = [ GL_OES_compressed_paletted_texture ]
OES_copy_image [ source: OES\OES_copy_image.txt ]
	- Strings = [ GL_OES_copy_image ]
	- Funcs:
		- glCopyImageSubDataOES [ void CopyImageSubDataOES( uint srcName, enum srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, enum dstTarget, int dstLevel, int dstX, int dstY, int dstZ, sizei srcWidth, sizei srcHeight, sizei srcDepth) ]
OES_depth24 [ source: OES\OES_depth24.txt ]
	- Strings = [ GL_OES_depth24 ]
OES_depth32 [ source: OES\OES_depth32.txt ]
	- Strings = [ GL_OES_depth32 ]
OES_depth_texture [ source: OES\OES_depth_texture.txt ]
	- Strings = [ GL_OES_depth_texture ]
OES_depth_texture_cube_map [ source: OES\OES_depth_texture_cube_map.txt ]
	- Strings = [ GL_OES_depth_texture_cube_map ]
OES_draw_buffers_indexed [ source: OES\OES_draw_buffers_indexed.txt ]
	- Strings = [ GL_OES_draw_buffers_indexed ]
	- Funcs:
		- glEnableiOES [ void EnableiOES(enum target, uint index) ]
		- glDisableiOES [ void DisableiOES(enum target, uint index) ]
		- glBlendEquationiOES [ void BlendEquationiOES(uint buf, enum mode) ]
		- glBlendEquationSeparateiOES [ void BlendEquationSeparateiOES(uint buf, enum modeRGB, enum modeAlpha) ]
		- glBlendFunciOES [ void BlendFunciOES(uint buf, enum src, enum dst) ]
		- glBlendFuncSeparateiOES [ void BlendFuncSeparateiOES(uint buf, enum srcRGB, enum dstRGB, enum srcAlpha, enum dstAlpha) ]
		- glColorMaskiOES [ void ColorMaskiOES(uint buf, boolean r, boolean g, boolean b, boolean a) ]
		- glIsEnablediOES [ boolean IsEnablediOES(enum target, uint index) ]
OES_draw_elements_base_vertex [ source: OES\OES_draw_elements_base_vertex.txt ]
	- Strings = [ GL_OES_draw_elements_base_vertex ]
	- Funcs:
		- glDrawElementsBaseVertexOES [ void DrawElementsBaseVertexOES(enum mode, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawRangeElementsBaseVertexOES [ void DrawRangeElementsBaseVertexOES(enum mode, uint start, uint end, sizei count, enum type, const void *indices, int basevertex) ]
		- glDrawElementsInstancedBaseVertexOES [ void DrawElementsInstancedBaseVertexOES(enum mode, sizei count, enum type, const void *indices, sizei instancecount, int basevertex) ]
		- glMultiDrawElementsBaseVertexEXT [ void MultiDrawElementsBaseVertexEXT(enum mode, const sizei *count, enum type, const void * const *indices, sizei primcount, const int *basevertex) ]
OES_draw_texture [ source: OES\OES_draw_texture.txt ]
	- Strings = [ GL_OES_draw_texture ]
	- Funcs:
		- glDrawTexsOES [ void DrawTexsOES(glshort X, glshort Y, glshort Z, glshort W, glshort H) ]
		- glDrawTexiOES [ void DrawTexiOES(glint X, glint Y, glint Z, glint W, glint H) ]
		- glDrawTexfOES [ void DrawTexfOES(glfloat X, glfloat Y, glfloat Z, glfloat W, glfloat H) ]
		- glDrawTexxOES [ void DrawTexxOES(glfixed X, glfixed Y, glfixed Z, glfixed W, glfixed H) ]
		- glDrawTexsvOES [ void DrawTexsvOES(glshort * coords) ]
		- glDrawTexivOES [ void DrawTexivOES(glint * coords) ]
		- glDrawTexfvOES [ void DrawTexfvOES(glfloat * coords) ]
		- glDrawTexxvOES [ void DrawTexxvOES(glfixed * coords) ]
		- glTexParameteriv [ void TexParameteriv(enum target, enum pname, glint *param) ]
		- glTexParameterfv [ void TexParameterfv(enum target, enum pname, glfloat *param) ]
		- glTexParameterxv [ void TexParameterxv(enum target, enum pname, glfixed *param) ]
OES_EGL_image [ source: OES\OES_EGL_image.txt ]
	- Strings = [ GL_OES_EGL_image ]
	- Funcs:
		- glEGLImageTargetTexture2DOES [ void EGLImageTargetTexture2DOES(enum target, eglImageOES image) ]
		- glEGLImageTargetRenderbufferStorageOES [ void EGLImageTargetRenderbufferStorageOES(enum target, eglImageOES image) ]
OES_EGL_image_external [ source: OES\OES_EGL_image_external.txt ]
	- Strings = [ GL_OES_EGL_image_external ]
	- Funcs:
		- glEGLImageTargetTexture2DOES [ void EGLImageTargetTexture2DOES(enum target, eglImageOES image) ]
OES_EGL_image_external_essl3 [ source: OES\OES_EGL_image_external_essl3.txt ]
	- Strings = [ GL_OES_EGL_image_external_essl3 ]
OES_element_index_uint [ source: OES\OES_element_index_uint.txt ]
	- Strings = [ GL_OES_element_index_uint ]
OES_extended_matrix_palette [ source: OES\OES_extended_matrix_palette.txt ]
	- Strings = [ GL_OES_extended_matrix_palette ]
OES_fbo_render_mipmap [ source: OES\OES_fbo_render_mipmap.txt ]
	- Strings = [ GL_OES_fbo_render_mipmap ]
OES_fixed_point [ source: OES\OES_fixed_point.txt ]
	- Strings = [ GL_OES_fixed_point ]
	- Funcs:
		- glVertex2xOES [ void Vertex2xOES(glfixed coords) ]
		- glVertex3xOES [ void Vertex3xOES(glfixed coords) ]
		- glVertex4xOES [ void Vertex4xOES(glfixed coords) ]
		- glVertex2xvOES [ void Vertex2xvOES(glfixed * coords) ]
		- glVertex3xvOES [ void Vertex3xvOES(glfixed * coords) ]
		- glVertex4xvOES [ void Vertex4xvOES(glfixed * coords) ]
		- glNormal3xOES [ void Normal3xOES(T coords) ]
		- glNormal3xvOES [ void Normal3xvOES(T * coords) ]
		- glTexCoord1xOES [ void TexCoord1xOES(glfixed coords) ]
		- glTexCoord2xOES [ void TexCoord2xOES(glfixed coords) ]
		- glTexCoord3xOES [ void TexCoord3xOES(glfixed coords) ]
		- glTexCoord4xOES [ void TexCoord4xOES(glfixed coords) ]
		- glTexCoord1xvOES [ void TexCoord1xvOES(glfixed * coords) ]
		- glTexCoord2xvOES [ void TexCoord2xvOES(glfixed * coords) ]
		- glTexCoord3xvOES [ void TexCoord3xvOES(glfixed * coords) ]
		- glTexCoord4xvOES [ void TexCoord4xvOES(glfixed * coords) ]
		- glMultiTexCoord1xOES [ void MultiTexCoord1xOES(enum texture, glfixed coords) ]
		- glMultiTexCoord2xOES [ void MultiTexCoord2xOES(enum texture, glfixed coords) ]
		- glMultiTexCoord3xOES [ void MultiTexCoord3xOES(enum texture, glfixed coords) ]
		- glMultiTexCoord4xOES [ void MultiTexCoord4xOES(enum texture, glfixed coords) ]
		- glMultiTexCoord1xvOES [ void MultiTexCoord1xvOES(enum texture, glfixed * coords) ]
		- glMultiTexCoord2xvOES [ void MultiTexCoord2xvOES(enum texture, glfixed * coords) ]
		- glMultiTexCoord3xvOES [ void MultiTexCoord3xvOES(enum texture, glfixed * coords) ]
		- glMultiTexCoord4xvOES [ void MultiTexCoord4xvOES(enum texture, glfixed * coords) ]
		- glColor3xOES [ void Color3xOES(glfixed components) ]
		- glColor4xOES [ void Color4xOES(glfixed components) ]
		- glColor3xvOES [ void Color3xvOES(glfixed * components) ]
		- glColor4xvOES [ void Color4xvOES(glfixed * components) ]
		- glIndexxOES [ void IndexxOES(T component) ]
		- glIndexxvOES [ void IndexxvOES(T * component) ]
		- glRectxOES [ void RectxOES(fixed x1, fixed y1, fixed x2, fixed y2) ]
		- glRectxvOES [ void RectxvOES(const fixed v1[2], const fixed v2[2]) ]
		- glDepthRangexOES [ void DepthRangexOES(clampx n, clampx f) ]
		- glLoadMatrixxOES [ void LoadMatrixxOES(const fixed m[16]) ]
		- glMultMatrixxOES [ void MultMatrixxOES(const fixed m[16]) ]
		- glLoadTransposeMatrixxOES [ void LoadTransposeMatrixxOES(const fixed m[16]) ]
		- glMultTransposeMatrixxOES [ void MultTransposeMatrixxOES(const fixed m[16]) ]
		- glRotatexOES [ void RotatexOES(fixed angle, fixed x, fixed y, fixed z) ]
		- glScalexOES [ void ScalexOES(fixed x, fixed y, fixed z) ]
		- glTranslatexOES [ void TranslatexOES(fixed x, fixed y, fixed z) ]
		- glFrustumxOES [ void FrustumxOES(fixed l, fixed r, fixed b, fixed t, fixed n, fixed f) ]
		- glOrthoxOES [ void OrthoxOES(fixed l, fixed r, fixed b, fixed t, fixed n, fixed f) ]
		- glTexGenxOES [ void TexGenxOES(enum coord, enum pname, T param) ]
		- glTexGenxvOES [ void TexGenxvOES(enum coord, enum pname, T * param) ]
		- glGetTexGenxvOES [ void GetTexGenxvOES(enum coord, enum pname, T* params) ]
		- glClipPlanexOES [ void ClipPlanexOES(enum plane, const fixed* equation) ]
		- glGetClipPlanexOES [ void GetClipPlanexOES(enum plane, fixed* equation) ]
		- glRasterPos2xOES [ void RasterPos2xOES(glfixed coords) ]
		- glRasterPos3xOES [ void RasterPos3xOES(glfixed coords) ]
		- glRasterPos4xOES [ void RasterPos4xOES(glfixed coords) ]
		- glRasterPos2xvOES [ void RasterPos2xvOES(glfixed * coords) ]
		- glRasterPos3xvOES [ void RasterPos3xvOES(glfixed * coords) ]
		- glRasterPos4xvOES [ void RasterPos4xvOES(glfixed * coords) ]
		- glMaterialxOES [ void MaterialxOES(enum face, enum pname, T param) ]
		- glMaterialxvOES [ void MaterialxvOES(enum face, enum pname, T * param) ]
		- glGetMaterialxOES [ void GetMaterialxOES(enum face, enum pname, T param) ]
		- glLightxOES [ void LightxOES(enum light, enum pname, T* params) ]
		- glLightxvOES [ void LightxvOES(enum light, enum pname, T* params) ]
		- glGetLightxOES [ void GetLightxOES(enum light, enum pname, T* params) ]
		- glLightModelxOES [ void LightModelxOES(enum pname, T param) ]
		- glLightModelxvOES [ void LightModelxvOES(enum pname, T * param) ]
		- glPointSizexOES [ void PointSizexOES(fixed size) ]
		- glPointParameterxvOES [ void PointParameterxvOES(enum pname, const fixed *params) ]
		- glLineWidthxOES [ void LineWidthxOES(fixed width) ]
		- glPolygonOffsetxOES [ void PolygonOffsetxOES(fixed factor, fixed units) ]
		- glPixelTransferxOES [ void PixelTransferxOES(enum pname, T param) ]
		- glConvolutionParameterxOES [ void ConvolutionParameterxOES(enum target, enum pname, T param) ]
		- glConvolutionParameterxvOES [ void ConvolutionParameterxvOES(enum target, enum pname, T * param) ]
		- glGetConvolutionParameterxvOES [ void GetConvolutionParameterxvOES(enum target, enum pname, T* params) ]
		- glGetHistogramParameterxvOES [ void GetHistogramParameterxvOES(enum target, enum pname, T *params) ]
		- glPixelZoomxOES [ void PixelZoomxOES(fixed xfactor, fixed yfactor) ]
		- glBitmapxOES [ void BitmapxOES(sizei width, sizei height, fixed xorig, fixed yorig, fixed xmove, fixed ymove, const ubyte* bitmap) ]
		- glTexParameterxOES [ void TexParameterxOES(enum target, enum pname, T param) ]
		- glTexParameterxvOES [ void TexParameterxvOES(enum target, enum pname, T * param) ]
		- glGetTexParameterxvOES [ void GetTexParameterxvOES(enum target, enum pname, T* params) ]
		- glGetTexLevelParameterxvOES [ void GetTexLevelParameterxvOES(enum target, int level, enum pname, T* params) ]
		- glPrioritizeTexturesxOES [ void PrioritizeTexturesxOES(sizei n, uint* textures, clampx* priorities) ]
		- glTexEnvxOES [ void TexEnvxOES(enum target, enum pname, T param) ]
		- glTexEnvxvOES [ void TexEnvxvOES(enum target, enum pname, T * param) ]
		- glGetTexEnvxvOES [ void GetTexEnvxvOES(enum target, enum pname, T* params) ]
		- glFogxOES [ void FogxOES(enum pname, T param) ]
		- glFogxvOES [ void FogxvOES(enum pname, T * param) ]
		- glSampleCoveragexOES [ void SampleCoveragexOES(clampx value, boolean invert) ]
		- glAlphaFuncxOES [ void AlphaFuncxOES(enum func, clampx ref) ]
		- glBlendColorxOES [ void BlendColorxOES(clampx red, clampx green, clampx blue, clampx alpha) ]
		- glClearColorxOES [ void ClearColorxOES(clampx red, clampx green, clampx blue, clampx alpha) ]
		- glClearDepthxOES [ void ClearDepthxOES(clampx depth) ]
		- glClearAccumxOES [ void ClearAccumxOES(clampx red, clampx green, clampx blue, clampx alpha) ]
		- glAccumxOES [ void AccumxOES(enum op, fixed value) ]
		- glMap1xOES [ void Map1xOES(enum target, T u1, T u2, int stride, int order, T points) ]
		- glMap2xOES [ void Map2xOES(enum target, T u1, T u2, int ustride, int uorder, T v1, T v2, int vstride, int vorder, T points) ]
		- glMapGrid1xOES [ void MapGrid1xOES(int n, T u1, T u2) ]
		- glMapGrid2xOES [ void MapGrid2xOES(int n, T u1, T u2, T v1, T v2) ]
		- glGetMapxvOES [ void GetMapxvOES(enum target, enum query, T* v) ]
		- glEvalCoord1xOES [ void EvalCoord1xOES(glfixed coord) ]
		- glEvalCoord2xOES [ void EvalCoord2xOES(glfixed coord) ]
		- glEvalCoord1xvOES [ void EvalCoord1xvOES(glfixed * coord) ]
		- glEvalCoord2xvOES [ void EvalCoord2xvOES(glfixed * coord) ]
		- glFeedbackBufferxOES [ void FeedbackBufferxOES(sizei n, enum type, fixed* buffer) ]
		- glPassThroughxOES [ void PassThroughxOES(fixed token) ]
		- glGetFixedvOES [ void GetFixedvOES(enum pname, fixed* params) ]
OES_fragment_precision_high [ source: OES\OES_fragment_precision_high.txt ]
	- Strings = [ GL_OES_fragment_precision_high ]
OES_framebuffer_object [ source: OES\OES_framebuffer_object.txt ]
	- Strings = [ GL_OES_framebuffer_object ]
	- Funcs:
		- glIsRenderbufferOES [ boolean IsRenderbufferOES(uint renderbuffer) ]
		- glBindRenderbufferOES [ void BindRenderbufferOES(enum target, uint renderbuffer) ]
		- glDeleteRenderbuffersOES [ void DeleteRenderbuffersOES(sizei n, const uint *renderbuffers) ]
		- glGenRenderbuffersOES [ void GenRenderbuffersOES(sizei n, uint *renderbuffers) ]
		- glRenderbufferStorageOES [ void RenderbufferStorageOES(enum target, enum internalformat, sizei width, sizei height) ]
		- glGetRenderbufferParameterivOES [ void GetRenderbufferParameterivOES(enum target, enum pname, int* params) ]
		- glIsFramebufferOES [ boolean IsFramebufferOES(uint framebuffer) ]
		- glBindFramebufferOES [ void BindFramebufferOES(enum target, uint framebuffer) ]
		- glDeleteFramebuffersOES [ void DeleteFramebuffersOES(sizei n, const uint *framebuffers) ]
		- glGenFramebuffersOES [ void GenFramebuffersOES(sizei n, uint *framebuffers) ]
		- glCheckFramebufferStatusOES [ enum CheckFramebufferStatusOES(enum target) ]
		- glFramebufferTexture2DOES [ void FramebufferTexture2DOES(enum target, enum attachment, enum textarget, uint texture, int level) ]
		- glFramebufferRenderbufferOES [ void FramebufferRenderbufferOES(enum target, enum attachment, enum renderbuffertarget, uint renderbuffer) ]
		- glGetFramebufferAttachmentParameterivOES [ void GetFramebufferAttachmentParameterivOES(enum target, enum attachment, enum pname, int *params) ]
		- glGenerateMipmapOES [ void GenerateMipmapOES(enum target) ]
OES_geometry_shader [ source: OES\OES_geometry_shader.txt ]
	- Strings = [ GL_OES_geometry_shader GL_OES_geometry_point_size ]
	- Funcs:
		- glFramebufferTextureOES [ void FramebufferTextureOES(enum target, enum attachment, uint texture, int level) ]
OES_get_program_binary [ source: OES\OES_get_program_binary.txt ]
	- Strings = [ GL_OES_get_program_binary ]
	- Funcs:
		- glGetProgramBinaryOES [ void GetProgramBinaryOES(uint program, sizei bufSize, sizei *length, enum *binaryFormat, void *binary) ]
		- glProgramBinaryOES [ void ProgramBinaryOES(uint program, enum binaryFormat, const void *binary, int length) ]
OES_gpu_shader5 [ source: OES\OES_gpu_shader5.txt ]
	- Strings = [ GL_OES_gpu_shader5 ]
OES_mapbuffer [ source: OES\OES_mapbuffer.txt ]
	- Strings = [ GL_OES_mapbuffer ]
	- Funcs:
		- glGetBufferPointervOES [ void GetBufferPointervOES(enum target, enum pname, void** params) ]
		- glMapBufferOES [ void *MapBufferOES(enum target, enum access) ]
		- glUnmapBufferOES [ boolean UnmapBufferOES(enum target) ]
OES_matrix_get [ source: OES\OES_matrix_get.txt ]
	- Strings = [ GL_OES_matrix_get ]
OES_matrix_palette [ source: OES\OES_matrix_palette.txt ]
	- Strings = [ GL_OES_matrix_palette ]
	- Funcs:
		- glCurrentPaletteMatrixOES [ void CurrentPaletteMatrixOES(uint index) ]
		- glLoadPaletteFromModelViewMatrixOES [ void LoadPaletteFromModelViewMatrixOES() ]
		- glMatrixIndexPointerOES [ void MatrixIndexPointerOES(int size, enum type, sizei stride, void *pointer) ]
		- glWeightPointerOES [ void WeightPointerOES(int size, enum type, sizei stride, void *pointer) ]
OES_packed_depth_stencil [ source: OES\OES_packed_depth_stencil.txt ]
	- Strings = [ GL_OES_packed_depth_stencil ]
OES_point_size_array [ source: OES\OES_point_size_array.txt ]
	- Strings = [ GL_OES_point_size_array ]
	- Funcs:
		- glPointSizePointerOES [ void PointSizePointerOES(enum type, sizei stride, const void *ptr ) ]
OES_point_sprite [ source: OES\OES_point_sprite.txt ]
	- Strings = [ GL_OES_point_sprite ]
OES_primitive_bounding_box [ source: OES\OES_primitive_bounding_box.txt ]
	- Strings = [ GL_OES_primitive_bounding_box ]
	- Funcs:
		- glPrimitiveBoundingBoxOES [ void PrimitiveBoundingBoxOES(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW) ]
OES_query_matrix [ source: OES\OES_query_matrix.txt ]
	- Strings = [ GL_OES_query_matrix ]
	- Funcs:
		- glQueryMatrixxOES [ GLbitfield glQueryMatrixxOES( GLfixed mantissa[16], GLint exponent[16] ) ]
OES_read_format [ source: OES\OES_read_format.txt ]
	- Strings = [ GL_OES_read_format ]
OES_required_internalformat [ source: OES\OES_required_internalformat.txt ]
	- Strings = [ GL_OES_required_internalformat ]
OES_rgb8_rgba8 [ source: OES\OES_rgb8_rgba8.txt ]
	- Strings = [ GL_OES_rgb8_rgba8 ]
OES_sample_shading [ source: OES\OES_sample_shading.txt ]
	- Strings = [ GL_OES_sample_shading ]
	- Funcs:
		- glMinSampleShadingOES [ void MinSampleShadingOES(float value) ]
OES_sample_variables [ source: OES\OES_sample_variables.txt ]
	- Strings = [ GL_OES_sample_variables ]
OES_shader_image_atomic [ source: OES\OES_shader_image_atomic.txt ]
	- Strings = [ GL_OES_shader_image_atomic ]
OES_shader_io_blocks [ source: OES\OES_shader_io_blocks.txt ]
	- Strings = [ GL_OES_shader_io_blocks ]
OES_shader_multisample_interpolation [ source: OES\OES_shader_multisample_interpolation.txt ]
	- Strings = [ GL_OES_shader_multisample_interpolation ]
OES_single_precision [ source: OES\OES_single_precision.txt ]
	- Strings = [ GL_OES_single_precision ]
	- Funcs:
		- glDepthRangefOES [ void DepthRangefOES(clampf n, clampf f) ]
		- glFrustumfOES [ void FrustumfOES(float l, float r, float b, float t, float n, float f) ]
		- glOrthofOES [ void OrthofOES(float l, float r, float b, float t, float n, float f) ]
		- glClipPlanefOES [ void ClipPlanefOES(enum plane, const float* equation) ]
		- glGetClipPlanefOES [ void GetClipPlanefOES(enum plane, float* equation) ]
		- glClearDepthfOES [ void glClearDepthfOES(clampf depth) ]
OES_standard_derivatives [ source: OES\OES_standard_derivatives.txt ]
	- Strings = [ GL_OES_standard_derivatives ]
OES_stencil1 [ source: OES\OES_stencil1.txt ]
	- Strings = [ GL_OES_stencil1 ]
OES_stencil4 [ source: OES\OES_stencil4.txt ]
	- Strings = [ GL_OES_stencil4 ]
OES_stencil8 [ source: OES\OES_stencil8.txt ]
	- Strings = [ GL_OES_stencil8 ]
OES_surfaceless_context [ source: OES\OES_surfaceless_context.txt ]
	- Strings = [ GL_OES_surfaceless_context ]
OES_tessellation_shader [ source: OES\OES_tessellation_shader.txt ]
	- Strings = [ GL_OES_tessellation_shader GL_OES_tessellation_point_size ]
	- Funcs:
		- glPatchParameteriOES [ void PatchParameteriOES(enum pname, int value) ]
OES_texture_3D [ source: OES\OES_texture_3D.txt ]
	- Strings = [ GL_OES_texture_3D ]
	- Funcs:
		- glTexImage3DOES [ void TexImage3DOES(enum target, int level, enum internalFormat, sizei width, sizei height, sizei depth, int border, enum format, enum type, const void *pixels) ]
		- glTexSubImage3DOES [ void TexSubImage3DOES(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, const void *pixels) ]
		- glCopyTexSubImage3DOES [ void CopyTexSubImage3DOES(enum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, sizei width, sizei height) ]
		- glCompressedTexImage3DOES [ void CompressedTexImage3DOES(enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, int border, sizei imageSize, const void *data) ]
		- glCompressedTexSubImage3DOES [ void CompressedTexSubImage3DOES(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, sizei imageSize, const void *data) ]
		- glFramebufferTexture3DOES [ void FramebufferTexture3DOES(enum target, enum attachment, enum textarget, uint texture, int level, int zoffset) ]
OES_texture_border_clamp [ source: OES\OES_texture_border_clamp.txt ]
	- Strings = [ GL_OES_texture_border_clamp ]
	- Funcs:
		- glTexParameterIivOES [ void TexParameterIivOES(enum target, enum pname, const int *params) ]
		- glTexParameterIuivOES [ void TexParameterIuivOES(enum target, enum pname, const uint *params) ]
		- glGetTexParameterIivOES [ void GetTexParameterIivOES(enum target, enum pname, int *params) ]
		- glGetTexParameterIuivOES [ void GetTexParameterIuivOES(enum target, enum pname, uint *params) ]
		- glSamplerParameterIivOES [ void SamplerParameterIivOES(uint sampler, enum pname, const int *params) ]
		- glSamplerParameterIuivOES [ void SamplerParameterIuivOES(uint sampler, enum pname, const uint *params) ]
		- glGetSamplerParameterIivOES [ void GetSamplerParameterIivOES(uint sampler, enum pname, int *params) ]
		- glGetSamplerParameterIuivOES [ void GetSamplerParameterIuivOES(uint sampler, enum pname, uint *params) ]
OES_texture_buffer [ source: OES\OES_texture_buffer.txt ]
	- Strings = [ GL_OES_texture_buffer ]
	- Funcs:
		- glTexBufferOES [ void TexBufferOES(enum target, enum internalformat, uint buffer) ]
		- glTexBufferRangeOES [ void TexBufferRangeOES(enum target, enum internalformat, uint buffer, intptr offset, sizeiptr size) ]
OES_texture_compression_astc [ source: OES\OES_texture_compression_astc.txt ]
	- Strings = [ GL_OES_texture_compression_astc GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_ldr ]
OES_texture_cube_map [ source: OES\OES_texture_cube_map.txt ]
	- Strings = [ GL_OES_texture_cube_map ]
	- Funcs:
		- glTexGenfOES [ void glTexGenfOES(GLenum coord, GLenum pname, GLfloat param) ]
		- glTexGenfvOES [ void glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params) ]
		- glTexGeniOES [ void glTexGeniOES(GLenum coord, GLenum pname, GLint param) ]
		- glTexGenivOES [ void glTexGenivOES(GLenum coord, GLenum pname, const GLint *params) ]
		- glTexGenxOES [ void glTexGenxOES(GLenum coord, GLenum pname, GLfixed param) ]
		- glTexGenxvOES [ void glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params) ]
		- glGetTexGenfvOES [ void glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params) ]
		- glGetTexGenivOES [ void glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params) ]
		- glGetTexGenxvOES [ void glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params) ]
OES_texture_cube_map_array [ source: OES\OES_texture_cube_map_array.txt ]
	- Strings = [ GL_OES_texture_cube_map_array ]
OES_texture_env_crossbar [ source: OES\OES_texture_env_crossbar.txt ]
	- Strings = [ GL_OES_texture_env_crossbar ]
OES_texture_half_float OES_texture_float [ source: OES\OES_texture_float.txt ]
	- Strings = [ GL_OES_texture_half_float GL_OES_texture_float ]
OES_texture_half_float_linear OES_texture_float_linear [ source: OES\OES_texture_float_linear.txt ]
	- Strings = [ GL_OES_texture_half_float_linear GL_OES_texture_float_linear ]
OES_texture_mirrored_repeat [ source: OES\OES_texture_mirrored_repeat.txt ]
	- Strings = [ GL_OES_texture_mirrored_repeat ]
OES_texture_npot [ source: OES\OES_texture_npot.txt ]
	- Strings = [ GL_OES_texture_npot ]
OES_texture_stencil8 [ source: OES\OES_texture_stencil8.txt ]
	- Strings = [ GL_OES_texture_stencil8 ]
OES_texture_storage_multisample_2d_array [ source: OES\OES_texture_storage_multisample_2d_array.txt ]
	- Strings = [ GL_OES_texture_storage_multisample_2d_array ]
	- Funcs:
		- glTexStorage3DMultisampleOES [ void TexStorage3DMultisampleOES(enum target, sizei samples, enum internalformat, sizei width, sizei height, sizei depth, boolean fixedsamplelocations) ]
OES_texture_view [ source: OES\OES_texture_view.txt ]
	- Strings = [ GL_OES_texture_view ]
	- Funcs:
		- glTextureViewOES [ void TextureViewOES(uint texture, enum target, uint origtexture, enum internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers) ]
OES_vertex_array_object [ source: OES\OES_vertex_array_object.txt ]
	- Strings = [ GL_OES_vertex_array_object ]
	- Funcs:
		- glBindVertexArrayOES [ void BindVertexArrayOES(uint array) ]
		- glDeleteVertexArraysOES [ void DeleteVertexArraysOES(sizei n, const uint *arrays) ]
		- glGenVertexArraysOES [ void GenVertexArraysOES(sizei n, uint *arrays) ]
		- glIsVertexArrayOES [ boolean IsVertexArrayOES(uint array) ]
OES_vertex_half_float [ source: OES\OES_vertex_half_float.txt ]
	- Strings = [ GL_OES_vertex_half_float ]
OES_vertex_type_10_10_10_2 [ source: OES\OES_vertex_type_10_10_10_2.txt ]
	- Strings = [ GL_OES_vertex_type_10_10_10_2 ]
OES_viewport_array [ source: OES\OES_viewport_array.txt ]
	- Strings = [ GL_OES_viewport_array ]
	- Funcs:
		- glViewportArrayvOES [ void ViewportArrayvOES(uint first, sizei count, const float * v) ]
		- glViewportIndexedfOES [ void ViewportIndexedfOES(uint index, float x, float y, float w, float h) ]
		- glViewportIndexedfvOES [ void ViewportIndexedfvOES(uint index, const float * v) ]
		- glScissorArrayvOES [ void ScissorArrayvOES(uint first, sizei count, const int * v) ]
		- glScissorIndexedOES [ void ScissorIndexedOES(uint index, int left, int bottom, sizei width, sizei height) ]
		- glScissorIndexedvOES [ void ScissorIndexedvOES(uint index, const int * v) ]
		- glDepthRangeArrayfvOES [ void DepthRangeArrayfvOES(uint first, sizei count, const float * v) ]
		- glDepthRangeIndexedfOES [ void DepthRangeIndexedfOES(uint index, float n, float f) ]
		- glGetFloati_vOES [ void GetFloati_vOES(enum target, uint index, float *data) ]
		- glEnableiOES [ void EnableiOES(enum target, uint index) ]
		- glDisableiOES [ void DisableiOES(enum target, uint index) ]
		- glIsEnablediOES [ boolean IsEnablediOES(enum target, uint index) ]
GLX_OML_swap_method [ source: OML\GLX_OML_swap_method.txt ]
	- Strings = [ GLX_OML_swap_method ]
OML_sync_control [ source: OML\GLX_OML_sync_control.txt ]
	- Strings = [ GLX_OML_sync_control ]
	- Funcs:
		- glXGetSyncValuesOML [ Bool glXGetSyncValuesOML(Display* dpy, GLXDrawable drawable, int64_t* ust, int64_t* msc, int64_t* sbc) ]
		- glXGetMscRateOML [ Bool glXGetMscRateOML(Display* dpy, GLXDrawable drawable, int32_t* numerator, int32_t* denominator) ]
		- glXSwapBuffersMscOML [ int64_t glXSwapBuffersMscOML(Display* dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder) ]
		- glXWaitForMscOML [ Bool glXWaitForMscOML(Display* dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t* ust, int64_t* msc, int64_t* sbc) ]
		- glXWaitForSbcOML [ Bool glXWaitForSbcOML(Display* dpy, GLXDrawable drawable, int64_t target_sbc, int64_t* ust, int64_t* msc, int64_t* sbc) ]
OML_interlace [ source: OML\OML_interlace.txt ]
	- Strings = [ GL_OML_interlace ]
OML_resample [ source: OML\OML_resample.txt ]
	- Strings = [ GL_OML_resample ]
OML_subsample [ source: OML\OML_subsample.txt ]
	- Strings = [ GL_OML_subsample ]
OML_sync_control [ source: OML\WGL_OML_sync_control.txt ]
	- Strings = [ WGL_OML_sync_control ]
	- Funcs:
		- wglGetSyncValuesOML [ BOOL wglGetSyncValuesOML(HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc) ]
		- wglGetMscRateOML [ BOOL wglGetMscRateOML(HDC hdc, INT32 *numerator, INT32 *denominator) ]
		- wglSwapBuffersMscOML [ INT64 wglSwapBuffersMscOML(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder) ]
		- wglSwapLayerBuffersMscOML [ INT64 wglSwapLayerBuffersMscOML(HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder) ]
		- wglWaitForMscOML [ BOOL wglWaitForMscOML(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc) ]
		- wglWaitForSbcOML [ BOOL wglWaitForSbcOML(HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc) ]
OVR_multiview [ source: OVR\OVR_multiview.txt ]
	- Strings = [ GL_OVR_multiview ]
	- Funcs:
		- glFramebufferTextureMultiviewOVR [ void FramebufferTextureMultiviewOVR( enum target, enum attachment, uint texture, int level, int baseViewIndex, sizei numViews ) ]
		- glNamedFramebufferTextureMultiviewOVR [ void NamedFramebufferTextureMultiviewOVR( uint framebuffer, enum attachment, uint texture, int level, int baseViewIndex, sizei numViews ) ]
OVR_multiview2 [ source: OVR\OVR_multiview2.txt ]
	- Strings = [ GL_OVR_multiview2 ]
OVR_multiview_multisampled_render_to_texture [ source: OVR\OVR_multiview_multisampled_render_to_texture.txt ]
	- Strings = [ GL_OVR_multiview_multisampled_render_to_texture ]
	- Funcs:
		- glFramebufferTextureMultisampleMultiviewOVR [ void FramebufferTextureMultisampleMultiviewOVR( enum target, enum attachment, uint texture, int level, sizei samples, int baseViewIndex, sizei numViews) ]
PGI_misc_hints [ source: PGI\PGI_misc_hints.txt ]
	- Strings = [ GL_PGI_misc_hints ]
	- Funcs:
		- glHintPGI [ %Broken% ]
PGI_vertex_hints [ source: PGI\PGI_vertex_hints.txt ]
	- Strings = [ GL_PGI_vertex_hints ]
QCOM_alpha_test [ source: QCOM\QCOM_alpha_test.txt ]
	- Strings = [ GL_QCOM_alpha_test ]
	- Funcs:
		- glAlphaFuncQCOM [ void AlphaFuncQCOM(enum func, clampf ref) ]
QCOM_binning_control [ source: QCOM\QCOM_binning_control.txt ]
	- Strings = [ GL_QCOM_binning_control ]
QCOM_driver_control [ source: QCOM\QCOM_driver_control.txt ]
	- Strings = [ GL_QCOM_driver_control ]
	- Funcs:
		- glGetDriverControlsQCOM [ void GetDriverControlsQCOM(int *num, sizei size, uint *driverControls) ]
		- glGetDriverControlStringQCOM [ void GetDriverControlStringQCOM(uint driverControl, sizei bufSize, sizei *length, char *driverControlString) ]
		- glEnableDriverControlQCOM [ void EnableDriverControlQCOM(uint driverControl) ]
		- glDisableDriverControlQCOM [ void DisableDriverControlQCOM(uint driverControl) ]
QCOM_extended_get [ source: QCOM\QCOM_extended_get.txt ]
	- Strings = [ GL_QCOM_extended_get ]
	- Funcs:
		- glExtGetTexturesQCOM [ void ExtGetTexturesQCOM(uint* textures, int maxTextures, int* numTextures) ]
		- glExtGetBuffersQCOM [ void ExtGetBuffersQCOM(uint* buffers, int maxBuffers, int* numBuffers) ]
		- glExtGetRenderbuffersQCOM [ void ExtGetRenderbuffersQCOM(uint* renderbuffers, int maxRenderbuffers, int* numRenderbuffers) ]
		- glExtGetFramebuffersQCOM [ void ExtGetFramebuffersQCOM(uint* framebuffers, int maxFramebuffers, int* numFramebuffers) ]
		- glExtGetTexLevelParameterivQCOM [ void ExtGetTexLevelParameterivQCOM(uint texture, enum face, int level, enum pname, int* params) ]
		- glExtTexObjectStateOverrideiQCOM [ void ExtTexObjectStateOverrideiQCOM(enum target, enum pname, int param) ]
		- glExtGetTexSubImageQCOM [ void ExtGetTexSubImageQCOM(enum target, int level, int xoffset, int yoffset, int zoffset, sizei width, sizei height, sizei depth, enum format, enum type, void *texels) ]
		- glExtGetBufferPointervQCOM [ void ExtGetBufferPointervQCOM(enum target, void **params) ]
QCOM_extended_get2 [ source: QCOM\QCOM_extended_get2.txt ]
	- Strings = [ GL_QCOM_extended_get2 ]
	- Funcs:
		- glExtGetShadersQCOM [ void ExtGetShadersQCOM(uint* shaders, int maxShaders, int* numShaders) ]
		- glExtGetProgramsQCOM [ void ExtGetProgramsQCOM(uint* programs, int maxPrograms, int* numPrograms) ]
		- glExtIsProgramBinaryQCOM [ boolean ExtIsProgramBinaryQCOM(uint program) ]
		- glExtGetProgramBinarySourceQCOM [ void ExtGetProgramBinarySourceQCOM(uint program, enum shadertype, char* source, int* length) ]
QCOM_framebuffer_foveated [ source: QCOM\QCOM_framebuffer_foveated.txt ]
	- Strings = [ GL_QCOM_framebuffer_foveated ]
	- Funcs:
		- glFramebufferFoveationConfigQCOM [ void FramebufferFoveationConfigQCOM(uint fbo, uint numLayers, uint focalPointsPerLayer, uint requestedFeatures, uint *providedFeatures) ]
		- glFramebufferFoveationParametersQCOM [ void FramebufferFoveationParametersQCOM(uint fbo, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea) ]
QCOM_performance_monitor_global_mode [ source: QCOM\QCOM_performance_monitor_global_mode.txt ]
	- Strings = [ GL_QCOM_perfmon_global_mode ]
QCOM_shader_framebuffer_fetch_noncoherent [ source: QCOM\QCOM_shader_framebuffer_fetch_noncoherent.txt ]
	- Strings = [ GL_QCOM_shader_framebuffer_fetch_noncoherent ]
	- Funcs:
		- glFramebufferFetchBarrierQCOM [ void FramebufferFetchBarrierQCOM(void) ]
QCOM_shader_framebuffer_fetch_rate [ source: QCOM\QCOM_shader_framebuffer_fetch_rate.txt ]
	- Strings = [ GL_QCOM_shader_framebuffer_fetch_rate ]
QCOM_texture_foveated [ source: QCOM\QCOM_texture_foveated.txt ]
	- Strings = [ GL_QCOM_texture_foveated ]
	- Funcs:
		- glTextureFoveationParametersQCOM [ void TextureFoveationParametersQCOM(uint texture, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea) ]
QCOM_texture_foveated_subsampled_layout [ source: QCOM\QCOM_texture_foveated_subsampled_layout.txt ]
	- Strings = [ GL_QCOM_texture_foveated_subsampled_layout ]
QCOM_tiled_rendering [ source: QCOM\QCOM_tiled_rendering.txt ]
	- Strings = [ GL_QCOM_tiled_rendering ]
	- Funcs:
		- glStartTilingQCOM [ void StartTilingQCOM(uint x, uint y, uint width, uint height, bitfield preserveMask) ]
		- glEndTilingQCOM [ void EndTilingQCOM(bitfield preserveMask) ]
QCOM_writeonly_rendering [ source: QCOM\QCOM_writeonly_rendering.txt ]
	- Strings = [ GL_QCOM_writeonly_rendering ]
QCOM_YUV_texture_gather [ source: QCOM\QCOM_YUV_texture_gather.txt ]
	- Strings = [ GL_QCOM_YUV_texture_gather ]
REND_screen_coordinates [ UNDONE_SPECsource: REND\REND_screen_coordinates.txt ]
	- Strings = [ GL_REND_screen_coordinates ]
S3_s3tc [ UNDONE_SPECsource: S3\S3_s3tc.txt ]
	- Strings = [ GL_S3_s3tc ]
SGI_filter4_parameters [ UNDONE_SPECsource: SGI\GLU_SGI_filter4_parameters.txt ]
	- Strings = [ GLU_SGI_filter4_parameters ]
	- Funcs:
		- gluTexFilterFuncSGI [ GLint gluTexFilterFuncSGI(GLenum target, GLenum filtertype, const GLfloat *parms, GLint n, GLfloat *weights) ]
SGI_cushion [ UNDONE_SPECsource: SGI\GLX_SGI_cushion.txt ]
	- Strings = [ GLX_SGI_cushion ]
	- Funcs:
		- glXCushionSGI [ void glXCushionSGI(Display *dpy, Window window, float cushion) ]
		- glXvoidglXCushionSGI [ command voidglXCushionSGI(Display *dpy, Window window, float cushion) ]
SGI_make_current_read [ source: SGI\GLX_SGI_make_current_read.txt ]
	- Strings = [ GLX_SGI_make_current_read ]
	- Funcs:
		- glXMakeCurrentReadSGI [ Bool glXMakeCurrentReadSGI(Display* dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx) ]
		- glXGetCurrentReadDrawableSGI [ GLXDrawable glXGetCurrentReadDrawableSGI(void) ]
SGI_swap_control [ source: SGI\GLX_SGI_swap_control.txt ]
	- Strings = [ GLX_SGI_swap_control ]
	- Funcs:
		- glXSwapIntervalSGI [ int glXSwapIntervalSGI(int interval) ]
SGI_transparent_pixel [ UNDONE_SPECsource: SGI\GLX_SGI_transparent_pixel.txt ]
	- Strings = [ GLX_SGI_transparent_pixel ]
SGI_video_sync [ source: SGI\GLX_SGI_video_sync.txt ]
	- Strings = [ GLX_SGI_video_sync ]
	- Funcs:
		- glXGetVideoSyncSGI [ int glXGetVideoSyncSGI(uint *count) ]
		- glXWaitVideoSyncSGI [ int glXWaitVideoSyncSGI(int divisor, int remainder, unsigned int *count) ]
SGI_color_matrix [ source: SGI\SGI_color_matrix.txt ]
	- Strings = [ GL_SGI_color_matrix ]
SGI_color_table [ source: SGI\SGI_color_table.txt ]
	- Strings = [ GL_SGI_color_table ]
	- Funcs:
		- glColorTableSGI [ void ColorTableSGI(enum target, enum internalformat, sizei width, enum format, enum type, const void* table) ]
		- glCopyColorTableSGI [ void CopyColorTableSGI(enum target, enum internalformat, int x, int y, sizei width) ]
		- glColorTableParameterivSGI [ void ColorTableParameterivSGI(enum target, enum pname, const int* params) ]
		- glColorTableParameterfvSGI [ void ColorTableParameterfvSGI(enum target, enum pname, const float* params) ]
		- glGetColorTableSGI [ void GetColorTableSGI(enum target, enum format, enum type, void* table) ]
		- glGetColorTableParameterivSGI [ void GetColorTableParameterivSGI(enum target, enum pname, int* params) ]
		- glGetColorTableParameterfvSGI [ void GetColorTableParameterfvSGI(enum target, enum pname, float* params) ]
SGI_complex [ source: SGI\SGI_complex.txt ]
	- Strings = [ GL_SGI_complex ]
SGI_complex_type [ UNDONE_SPECsource: SGI\SGI_complex_type.txt ]
	- Strings = [ GL_SGI_complex_type ]
SGI_fft [ source: SGI\SGI_fft.txt ]
	- Strings = [ GL_SGI_fft ]
	- Funcs:
		- glPixelTransformSGI [ void PixelTransformSGI(enum target) ]
		- glPixelTransformParameterfSGI [ void PixelTransformParameterfSGI(enum target, enum pname, float param) ]
		- glPixelTransformParameterfvSGI [ void PixelTransformParameterfvSGI(enum target, enum pname, const float* params) ]
		- glPixelTransformParameteriSGI [ void PixelTransformParameteriSGI(enum target, enum pname, int param) ]
		- glPixelTransformParameterivSGI [ void PixelTransformParameterivSGI(enum target, enum pname, const int* params) ]
		- glGetPixelTransformParameterfvSGI [ void GetPixelTransformParameterfvSGI(enum target, enum pname, float* params) ]
		- glGetPixelTransformParameterivSGI [ void GetPixelTransformParameterivSGI(enum target, enum pname, int* params) ]
SGI_texture_color_table [ source: SGI\SGI_texture_color_table.txt ]
	- Strings = [ GL_SGI_texture_color_table ]
SGIS_blended_overlay [ source: SGIS\GLX_SGIS_blended_overlay.txt ]
	- Strings = [ GLX_SGIS_blended_overlay ]
SGIS_color_range [ source: SGIS\GLX_SGIS_color_range.txt ]
	- Strings = [ GLX_SGIS_color_range GL_SGIS_color_range ]
SGIS_clip_band_hint [ UNDONE_SPECsource: SGIS\SGIS_clip_band_hint.txt ]
	- Strings = [ GL_SGIS_clip_band_hint ]
SGIS_detail_texture [ source: SGIS\SGIS_detail_texture.txt ]
	- Strings = [ GL_SGIS_detail_texture ]
	- Funcs:
		- glDetailTexFuncSGIS [ void DetailTexFuncSGIS(enum target, sizei n, const float* points) ]
		- glGetDetailTexFuncSGIS [ void GetDetailTexFuncSGIS(enum target, float* points) ]
SGIS_fog_function [ source: SGIS\SGIS_fog_function.txt ]
	- Strings = [ GL_SGIS_fog_function ]
	- Funcs:
		- glFogFuncSGIS [ void FogFuncSGIS(sizei n, const float* points) ]
		- glGetFogFuncSGIS [ void GetFogFuncSGIS(float *points) ]
SGIS_generate_mipmap [ source: SGIS\SGIS_generate_mipmap.txt ]
	- Strings = [ GL_SGIS_generate_mipmap ]
SGIS_line_texgen [ source: SGIS\SGIS_line_texgen.txt ]
	- Strings = [ GL_SGIS_line_texgen ]
SGIS_multisample [ source: SGIS\SGIS_multisample.txt ]
	- Strings = [ GL_SGIS_multisample GLX_SGIS_multisample ]
	- Funcs:
		- glSampleMaskSGIS [ void SampleMaskSGIS(clampf value, boolean invert) ]
		- glSamplePatternSGIS [ void SamplePatternSGIS(enum pattern) ]
SGIS_multitexture [ source: SGIS\SGIS_multitexture.txt ]
	- Strings = [ GL_SGIS_multitexture ]
	- Funcs:
		- glMultiTexCoord1sSGIS [ void MultiVec1sexCoord1sSGIS(enum target, Vec1s coords) ]
		- glMultiTexCoord1iSGIS [ void MultiVec1iexCoord1iSGIS(enum target, Vec1i coords) ]
		- glMultiTexCoord1fSGIS [ void MultiVec1fexCoord1fSGIS(enum target, Vec1f coords) ]
		- glMultiTexCoord1dSGIS [ void MultiVec1dexCoord1dSGIS(enum target, Vec1d coords) ]
		- glMultiTexCoord2sSGIS [ void MultiVec2sexCoord2sSGIS(enum target, Vec2s coords) ]
		- glMultiTexCoord2iSGIS [ void MultiVec2iexCoord2iSGIS(enum target, Vec2i coords) ]
		- glMultiTexCoord2fSGIS [ void MultiVec2fexCoord2fSGIS(enum target, Vec2f coords) ]
		- glMultiTexCoord2dSGIS [ void MultiVec2dexCoord2dSGIS(enum target, Vec2d coords) ]
		- glMultiTexCoord3sSGIS [ void MultiVec3sexCoord3sSGIS(enum target, Vec3s coords) ]
		- glMultiTexCoord3iSGIS [ void MultiVec3iexCoord3iSGIS(enum target, Vec3i coords) ]
		- glMultiTexCoord3fSGIS [ void MultiVec3fexCoord3fSGIS(enum target, Vec3f coords) ]
		- glMultiTexCoord3dSGIS [ void MultiVec3dexCoord3dSGIS(enum target, Vec3d coords) ]
		- glMultiTexCoord4sSGIS [ void MultiVec4sexCoord4sSGIS(enum target, Vec4s coords) ]
		- glMultiTexCoord4iSGIS [ void MultiVec4iexCoord4iSGIS(enum target, Vec4i coords) ]
		- glMultiTexCoord4fSGIS [ void MultiVec4fexCoord4fSGIS(enum target, Vec4f coords) ]
		- glMultiTexCoord4dSGIS [ void MultiVec4dexCoord4dSGIS(enum target, Vec4d coords) ]
		- glMultiTexCoord1svSGIS [ void MultiVec1sexCoord1svSGIS(enum target, Vec1s coords) ]
		- glMultiTexCoord1ivSGIS [ void MultiVec1iexCoord1ivSGIS(enum target, Vec1i coords) ]
		- glMultiTexCoord1fvSGIS [ void MultiVec1fexCoord1fvSGIS(enum target, Vec1f coords) ]
		- glMultiTexCoord1dvSGIS [ void MultiVec1dexCoord1dvSGIS(enum target, Vec1d coords) ]
		- glMultiTexCoord2svSGIS [ void MultiVec2sexCoord2svSGIS(enum target, Vec2s coords) ]
		- glMultiTexCoord2ivSGIS [ void MultiVec2iexCoord2ivSGIS(enum target, Vec2i coords) ]
		- glMultiTexCoord2fvSGIS [ void MultiVec2fexCoord2fvSGIS(enum target, Vec2f coords) ]
		- glMultiTexCoord2dvSGIS [ void MultiVec2dexCoord2dvSGIS(enum target, Vec2d coords) ]
		- glMultiTexCoord3svSGIS [ void MultiVec3sexCoord3svSGIS(enum target, Vec3s coords) ]
		- glMultiTexCoord3ivSGIS [ void MultiVec3iexCoord3ivSGIS(enum target, Vec3i coords) ]
		- glMultiTexCoord3fvSGIS [ void MultiVec3fexCoord3fvSGIS(enum target, Vec3f coords) ]
		- glMultiTexCoord3dvSGIS [ void MultiVec3dexCoord3dvSGIS(enum target, Vec3d coords) ]
		- glMultiTexCoord4svSGIS [ void MultiVec4sexCoord4svSGIS(enum target, Vec4s coords) ]
		- glMultiTexCoord4ivSGIS [ void MultiVec4iexCoord4ivSGIS(enum target, Vec4i coords) ]
		- glMultiTexCoord4fvSGIS [ void MultiVec4fexCoord4fvSGIS(enum target, Vec4f coords) ]
		- glMultiTexCoord4dvSGIS [ void MultiVec4dexCoord4dvSGIS(enum target, Vec4d coords) ]
		- glInterleavedTextureCoordSetsSGIS [ void InterleavedTextureCoordSetsSGIS(int factor) ]
		- glSelectTextureSGIS [ void SelectTextureSGIS(enum target) ]
		- glSelectTextureCoordSetSGIS [ void SelectTextureCoordSetSGIS(enum target) ]
		- glSelectTextureTransformSGIS [ void SelectTextureTransformSGIS(enum target) ]
SGIS_pixel_texture [ source: SGIS\SGIS_pixel_texture.txt ]
	- Strings = [ GL_SGIS_pixel_texture ]
	- Funcs:
		- glPixelTexGenParameteriSGIS [ void PixelTexGenParameteriSGIS(enum pname, glint param) ]
		- glPixelTexGenParameterfSGIS [ void PixelTexGenParameterfSGIS(enum pname, glfloat param) ]
		- glGetPixelTexGenParameterivSGIS [ void GetPixelTexGenParameterivSGIS(enum pname, glint * params) ]
		- glGetPixelTexGenParameterfvSGIS [ void GetPixelTexGenParameterfvSGIS(enum pname, glfloat * params) ]
		- glPixelTexGenParameterivSGIS [ %Broken% ]
		- glPixelTexGenParameterfvSGIS [ %Broken% ]
SGIS_point_line_texgen [ source: SGIS\SGIS_point_line_texgen.txt ]
	- Strings = [ GL_SGIS_point_line_texgen ]
SGIS_shared_multisample [ source: SGIS\SGIS_shared_multisample.txt ]
	- Strings = [ GL_SGIS_shared_multisample GLX_SGIS_shared_multisample ]
	- Funcs:
		- glMultisampleSubRectPosSGIS [ void glMultisampleSubRectPosSGIS(GLint x, GLint y) ]
SGIS_sharpen_texture [ source: SGIS\SGIS_sharpen_texture.txt ]
	- Strings = [ GL_SGIS_sharpen_texture ]
	- Funcs:
		- glSharpenTexFuncSGIS [ void SharpenTexFuncSGIS(enum target, sizei n, const float* points) ]
		- glGetSharpenTexFuncSGIS [ void GetSharpenTexFuncSGIS(enum target, float* points) ]
SGIS_texture4D [ UNDONE_SPECsource: SGIS\SGIS_texture4D.txt ]
	- Strings = [ GL_SGIS_texture4D ]
	- Funcs:
		- glTexImage4DSGIS [ void TexImage4DSGIS(enum target, int level, enum internalformat, sizei width, sizei height, sizei depth, sizei extent, int border, enum format, enum type, const void* pixels) ]
		- glTexSubImage4DSGIS [ void TexSubImage4DSGIS(enum target, int level, int xoffset, int yoffset, int zoffset, int woffset, sizei width, sizei height, sizei depth, sizei extent, enum format, enum type, const void* pixels) ]
SGIS_texture_border_clamp [ source: SGIS\SGIS_texture_border_clamp.txt ]
	- Strings = [ GL_SGIS_texture_border_clamp ]
SGIS_texture_color_mask [ source: SGIS\SGIS_texture_color_mask.txt ]
	- Strings = [ GL_SGIS_texture_color_mask ]
	- Funcs:
		- glTextureColorMaskSGIS [ support TextureColorMaskSGIS() ]
SGIS_texture_edge_clamp [ source: SGIS\SGIS_texture_edge_clamp.txt ]
	- Strings = [ GL_SGIS_texture_edge_clamp ]
SGIS_texture_filter4 [ source: SGIS\SGIS_texture_filter4.txt ]
	- Strings = [ GL_SGIS_texture_filter4 ]
	- Funcs:
		- glTexFilterFuncSGIS [ void TexFilterFuncSGIS(enum target, enum filter, sizei n, const float* weights) ]
		- glGetTexFilterFuncSGIS [ void GetTexFilterFuncSGIS(enum target, enum filter, float* weights) ]
SGIS_texture_lod [ source: SGIS\SGIS_texture_lod.txt ]
	- Strings = [ GL_SGIS_texture_lod ]
SGIS_texture_select [ source: SGIS\SGIS_texture_select.txt ]
	- Strings = [ GL_SGIS_texture_select ]
SGIX_color_type [ UNDONE_SPECsource: SGIX\GLX_SGIX_color_type.txt ]
	- Strings = [ GLX_SGIX_color_type GL_SGIX_color_type ]
SGIX_color_typeXXX [ UNDONE_SPECsource: SGIX\GLX_SGIX_color_typeXXX.txt ]
	- Strings = [ GLX_SGIX_color_typeXXX ]
SGIX_dmbuffer [ UNDONE_SPECsource: SGIX\GLX_SGIX_dm_buffer.txt ]
	- Strings = [ GLX_SGIX_dm_buffer ]
	- Funcs:
		- glXAssociateDMPbufferSGIX [ Bool glXAssociateDMPbufferSGIX(Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer) ]
		- glXCreateGLXPbufferSGIX [ GLXPbuffer glXCreateGLXPbufferSGIX(Display *dpy, GLXFBConfig config, unsigned int width, unsigned int height, int *attrib_list) ]
		- glXDestroyGLXPbufferSGIX [ void glXDestroyGLXPbufferSGIX(Display *dpy, GLXPbuffer pbuf) ]
SGIX_fbconfig [ source: SGIX\GLX_SGIX_fbconfig.txt ]
	- Strings = [ GLX_SGIX_fbconfig ]
	- Funcs:
		- glXGetFBConfigAttribSGIX [ int glXGetFBConfigAttribSGIX(Display *dpy, GLXFBConfigSGIX config, int attribute, int *value) ]
		- glXChooseFBConfigSGIX [ GLXFBConfigSGIX *glXChooseFBConfigSGIX(Display *dpy, int screen, const int *attrib_list, int *nelements) ]
		- glXCreateGLXPixmapWithConfigSGIX [ GLXPixmap glXCreateGLXPixmapWithConfigSGIX(Display *dpy, GLXFBConfig config, Pixmap pixmap) ]
		- glXCreateContextWithConfigSGIX [ GLXContext glXCreateContextWithConfigSGIX(Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct) ]
		- glXGetVisualFromFBConfigSGIX [ XVisualInfo *glXGetVisualFromFBConfigSGIX(Display *dpy, GLXFBConfig config) ]
		- glXGetFBConfigFromVisualSGIX [ GLXFBConfigSGIX glXGetFBConfigFromVisualSGIX(Display *dpy, XVisualInfo *vis) ]
SGIX_fbconfig_float [ UNDONE_SPECsource: SGIX\GLX_SGIX_fbconfig_float.txt ]
	- Strings = [ GLX_SGIX_fbconfig_float ]
	- Funcs:
		- glXGetFBConfigFltAttribSGIX [ int glXGetFBConfigFltAttribSGIX(Display *dpy, GLXFBConfigSGIX config, int attribute, double *value) ]
		- glXChooseFBConfigWithFltSGIX [ GLXFBConfigSGIX *glXChooseFBConfigWithFltSGIX( Display *dpy, int screen, const int *int_attrib_list, const double *flt_attrib_list, int *nelements) ]
SGIX_hyperpipe [ source: SGIX\GLX_SGIX_hyperpipe.txt ]
	- Strings = [ GLX_SGIX_hyperpipe ]
	- Funcs:
		- glXQueryHyperpipeNetworkSGIX [ GLXHyperpipeNetworkSGIX * glXQueryHyperpipeNetworkSGIX( Display *dpy, int *npipes) ]
		- glXHyperpipeConfigSGIX [ int glXHyperpipeConfigSGIX( Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId) ]
		- glXQueryHyperpipeConfigSGIX [ GLXHyperpipeConfigSGIX * glXQueryHyperpipeConfigSGIX( Display *dpy, int hpId, int *npipes) ]
		- glXDestroyHyperpipeConfigSGIX [ int glXDestroyHyperpipeConfigSGIX( Display * dpy, int hpId) ]
		- glXBindHyperpipeSGIX [ int glXBindHyperpipeSGIX( Display *dpy, int hpId) ]
		- glXQueryHyperpipeBestAttribSGIX [ int glXQueryHyperpipeBestAttribSGIX( Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList) ]
		- glXHyperpipeAttribSGIX [ int glXHyperpipeAttribSGIX( Display *dpy, int timeSlice, int attrib, int size, void *attribList) ]
		- glXQueryHyperpipeAttribSGIX [ int glXQueryHyperpipeAttribSGIX( Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList) ]
SGIX_pbuffer [ source: SGIX\GLX_SGIX_pbuffer.txt ]
	- Strings = [ GLX_SGIX_pbuffer ]
	- Funcs:
		- glXCreateGLXPbufferSGIX [ GLXPbuffer glXCreateGLXPbufferSGIX(Display *dpy, GLXFBConfig config, unsigned int width, unsigned int height, int *attrib_list) ]
		- glXDestroyGLXPbufferSGIX [ void glXDestroyGLXPbufferSGIX(Display *dpy, GLXPbuffer pbuf) ]
		- glXQueryGLXPbufferSGIX [ void glXQueryGLXPbufferSGIX(Display *dpy, GLXPbuffer pbuf, int attribute, unsigned int *value) ]
		- glXSelectEventSGIX [ void glXSelectEventSGIX(Display *dpy, GLXDrawable drawable, unsigned long mask) ]
		- glXGetSelectedEventSGIX [ void glXGetSelectedEventSGIX(Display *dpy, GLXDrawable drawable, unsigned long *mask) ]
SGIX_swap_barrier [ source: SGIX\GLX_SGIX_swap_barrier.txt ]
	- Strings = [ GLX_SGIX_swap_barrier ]
	- Funcs:
		- glXBindSwapBarrierSGIX [ void BindSwapBarrierSGIX(Display *dpy, GLXDrawable drawable, int barrier) ]
		- glXQueryMaxSwapBarriersSGIX [ Bool QueryMaxSwapBarriersSGIX(Display *dpy, int screen, int *max) ]
SGIX_swap_group [ source: SGIX\GLX_SGIX_swap_group.txt ]
	- Strings = [ GLX_SGIX_swap_group ]
	- Funcs:
		- glXJoinSwapGroupSGIX [ void JoinSwapGroupSGIX(Display *dpy, GLXDrawable drawable, GLXDrawable member) ]
SGIX_video_resize [ source: SGIX\GLX_SGIX_video_resize.txt ]
	- Strings = [ GLX_SGIX_video_resize ]
	- Funcs:
		- glXBindChannelToWindowSGIX [ int glXBindChannelToWindowSGIX( Display *display, int screen, int channel, Window window ) ]
		- glXChannelRectSGIX [ int glXChannelRectSGIX( Display *display, int screen, int channel, int x, int y, int w, int h ) ]
		- glXQueryChannelRectSGIX [ int glXQueryChannelRectSGIX( Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh ) ]
		- glXQueryChannelDeltasSGIX [ int glXQueryChannelDeltasSGIX( Display *display, int screen, int channel, int *x, int *y, int *w, int *h ) ]
		- glXChannelRectSyncSGIX [ int glXChannelRectSyncSGIX( Display *display, int screen, int channel, GLenum synctype) ]
SGIX_video_resize_float [ UNDONE_SPECsource: SGIX\GLX_SGIX_video_resize_float.txt ]
	- Strings = [ GLX_SGIX_video_resize_float ]
	- Funcs:
		- glXChannelRectfSGIX [ int glXChannelRectfSGIX( Display *display, int screen, int channel, float x, float y, float w, float h ) ]
		- glXQueryChannelRectfSGIX [ int glXQueryChannelRectfSGIX( Display *display, int screen, int channel, float *dx, float *dy, float *dw, float *dh ) ]
		- glXQueryChannelDeltasfSGIX [ int glXQueryChannelDeltasfSGIX( Display *display, int screen, int channel, float *x, float *y, float *w, float *h ) ]
SGIX_video_source [ UNDONE_SPECsource: SGIX\GLX_SGIX_video_source.txt ]
	- Strings = [ GLX_SGIX_video_source ]
	- Funcs:
		- glXCreateGLXVideoSourceSGIX [ GLXVideoSourceSGIX glXCreateGLXVideoSourceSGIX(Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode) ]
		- glXDestroyGLXVideoSourceSGIX [ void glXDestroyGLXVideoSourceSGIX(Display *dpy, GLXVideoSourceSGIX glxvideosource) ]
SGIX_visual_select_group [ source: SGIX\GLX_SGIX_visual_select_group.txt ]
	- Strings = [ GLX_SGIX_visual_select_group ]
SGIX_wait_group [ UNDONE_SPECsource: SGIX\GLX_SGIX_wait_group.txt ]
	- Strings = [ GLX_SGIX_wait_group ]
	- Funcs:
		- glXJoinWaitGroupSGIX [ void JoinWaitGroupSGIX(Display *dpy, GLXContext context, GLXContext member) ]
		- glXWaitGroupSGIX [ void WaitGroupSGIX(Display *dpy, GLXContext context) ]
SGIX_async [ UNDONE_SPECsource: SGIX\SGIX_async.txt ]
	- Strings = [ GL_SGIX_async ]
	- Funcs:
		- glAsyncMarkerSGIX [ void AsyncMarkerSGIX(uint marker) ]
		- glFinishAsyncSGIX [ int FinishAsyncSGIX(uint *markerp) ]
		- glPollAsyncSGIX [ int PollAsyncSGIX(uint *markerp) ]
		- glGenAsyncMarkersSGIX [ uint GenAsyncMarkersSGIX(sizei range) ]
		- glDeleteAsyncMarkersSGIX [ void DeleteAsyncMarkersSGIX(uint marker, sizei range) ]
		- glIsAsyncMarkerSGIX [ boolean IsAsyncMarkerSGIX(uint marker) ]
SGIX_async_histogram [ UNDONE_SPECsource: SGIX\SGIX_async_histogram.txt ]
	- Strings = [ GL_SGIX_async_histogram ]
SGIX_async_pixel [ UNDONE_SPECsource: SGIX\SGIX_async_pixel.txt ]
	- Strings = [ GL_SGIX_async_pixel ]
SGIX_bali_g_instruments [ UNDONE_SPECsource: SGIX\SGIX_bali_g_instruments.txt ]
	- Strings = [ GL_SGIX_bali_g_instruments ]
SGIX_bali_r_instruments [ UNDONE_SPECsource: SGIX\SGIX_bali_r_instruments.txt ]
	- Strings = [ GL_SGIX_bali_r_instruments ]
SGIX_bali_timer_instruments [ UNDONE_SPECsource: SGIX\SGIX_bali_timer_instruments.txt ]
	- Strings = [ GL_SGIX_bali_timer_instruments ]
SGIX_blend_alpha_minmax [ UNDONE_SPECsource: SGIX\SGIX_blend_alpha_minmax.txt ]
	- Strings = [ GL_SGIX_blend_alpha_minmax ]
SGIX_blend_cadd [ UNDONE_SPECsource: SGIX\SGIX_blend_cadd.txt ]
	- Strings = [ GL_SGIX_blend_cadd ]
SGIX_blend_cmultiply [ UNDONE_SPECsource: SGIX\SGIX_blend_cmultiply.txt ]
	- Strings = [ GL_SGIX_blend_cmultiply ]
SGIX_calligraphic_fragment [ UNDONE_SPECsource: SGIX\SGIX_calligraphic_fragment.txt ]
	- Strings = [ GL_SGIX_calligraphic_fragment ]
SGIX_clipmap [ UNDONE_SPECsource: SGIX\SGIX_clipmap.txt ]
	- Strings = [ GL_SGIX_clipmap ]
SGIX_color_matrix_accuracy [ UNDONE_SPECsource: SGIX\SGIX_color_matrix_accuracy.txt ]
	- Strings = [ GL_SGIX_color_matrix_accuracy ]
SGIX_color_table_index_mode [ source: SGIX\SGIX_color_table_index_mode.txt ]
	- Strings = [ GL_SGIX_color_table_index_mode ]
SGIX_complex_polar [ UNDONE_SPECsource: SGIX\SGIX_complex_polar.txt ]
	- Strings = [ GL_SGIX_complex_polar ]
SGIX_convolution_accuracy [ UNDONE_SPECsource: SGIX\SGIX_convolution_accuracy.txt ]
	- Strings = [ GL_SGIX_convolution_accuracy ]
SGIX_cube_map [ UNDONE_SPECsource: SGIX\SGIX_cube_map.txt ]
	- Strings = [ GL_SGIX_cube_map ]
	- Funcs:
		- glApplyTextureEXT [ to ApplyTextureEXT() ]
SGIX_cylinder_texgen [ source: SGIX\SGIX_cylinder_texgen.txt ]
	- Strings = [ GL_SGIX_cylinder_texgen ]
SGIX_datapipe [ UNDONE_SPECsource: SGIX\SGIX_datapipe.txt ]
	- Strings = [ GL_SGIX_datapipe ]
	- Funcs:
		- glAddressSpace [ void AddressSpace(enum space, bitfield mask) ]
		- glDataPipe [ int DataPipe(enum space) ]
SGIX_decimation [ source: SGIX\SGIX_decimation.txt ]
	- Strings = [ GL_SGIX_decimation ]
SGIX_depth_pass_instrument [ UNDONE_SPECsource: SGIX\SGIX_depth_pass_instrument.txt ]
	- Strings = [ GL_SGIX_depth_pass_instrument ]
SGIX_depth_texture [ source: SGIX\SGIX_depth_texture.txt ]
	- Strings = [ GL_SGIX_depth_texture ]
SGIX_dvc [ UNDONE_SPECsource: SGIX\SGIX_dvc.txt ]
	- Strings = [ GL_SGIX_dvc ]
SGIX_flush_raster [ UNDONE_SPECsource: SGIX\SGIX_flush_raster.txt ]
	- Strings = [ GL_SGIX_flush_raster ]
	- Funcs:
		- glFlushRasterSGIX [ void FlushRasterSGIX(void) ]
SGIX_fog_blend_alpha SGIX_fog_blend_color [ source: SGIX\SGIX_fog_blend.txt ]
	- Strings = [ GL_SGIX_fog_blend ]
SGIX_fog_factor_to_alpha [ source: SGIX\SGIX_fog_factor_to_alpha.txt ]
	- Strings = [ GL_SGIX_fog_factor_to_alpha ]
SGIX_fog_layers [ UNDONE_SPECsource: SGIX\SGIX_fog_layers.txt ]
	- Strings = [ GL_SGIX_fog_layers ]
	- Funcs:
		- glFogLayersSGIX [ void FogLayersSGIX(sizei n, const float *points) ]
		- glGetFogLayersSGIX [ void GetFogLayersSGIX(float *points) ]
SGIX_fog_offset [ source: SGIX\SGIX_fog_offset.txt ]
	- Strings = [ GL_SGIX_fog_offset ]
SGIX_fog_patchy [ source: SGIX\SGIX_fog_patchy.txt ]
	- Strings = [ GL_SGIX_fog_patchy ]
SGIX_fog_scale [ source: SGIX\SGIX_fog_scale.txt ]
	- Strings = [ GL_SGIX_fog_scale ]
SGIX_fog_texture [ source: SGIX\SGIX_fog_texture.txt ]
	- Strings = [ GL_SGIX_fog_texture ]
	- Funcs:
		- glTextureFogSGIX [ void TextureFogSGIX(enum pname) ]
SGIX_fragments_instrument [ UNDONE_SPECsource: SGIX\SGIX_fragments_instrument.txt ]
	- Strings = [ GL_SGIX_fragments_instrument ]
SGIX_fragment_lighting_space [ UNDONE_SPECsource: SGIX\SGIX_fragment_lighting_space.txt ]
	- Strings = [ GL_SGIX_fragment_lighting_space ]
	- Funcs:
		- glFragmentLightSpaceSGIX [ void FragmentLightSpaceSGIX(enum space) ]
SGIX_fragment_specular_lighting [ UNDONE_SPECsource: SGIX\SGIX_fragment_specular_lighting.txt ]
	- Strings = [ GL_SGIX_fragment_specular_lighting ]
	- Funcs:
		- glFragmentLightModeliSGIX [ void FragmentLightModeliSGIX(enum pname, int param) ]
		- glFragmentLightModelfSGIX [ void FragmentLightModelfSGIX(enum pname, float param) ]
		- glFragmentLightModelivSGIX [ void FragmentLightModelivSGIX(enum pname, int *params) ]
		- glFragmentLightModelfvSGIX [ void FragmentLightModelfvSGIX(enum pname, float *params) ]
		- glFragmentLightiSGIX [ void FragmentLightiSGIX(enum light, enum pname, int param) ]
		- glFragmentLightfSGIX [ void FragmentLightfSGIX(enum light, enum pname, float param) ]
		- glFragmentLightivSGIX [ void FragmentLightivSGIX(enum light, enum pname, int *params) ]
		- glFragmentLightfvSGIX [ void FragmentLightfvSGIX(enum light, enum pname, float *params) ]
		- glGetFragmentLightivSGIX [ void GetFragmentLightivSGIX(enum light, enum value, int *data) ]
		- glGetFragmentLightfvSGIX [ void GetFragmentLightfvSGIX(enum light, enum value, float *data) ]
		- glFragmentMaterialfSGIX [ void FragmentMaterialfSGIX(enum face, enum pname, const float param) ]
		- glFragmentMaterialiSGIX [ void FragmentMaterialiSGIX(enum face, enum pname, const int param) ]
		- glFragmentMaterialfvSGIX [ void FragmentMaterialfvSGIX(enum face, enum pname, const float *params) ]
		- glFragmentMaterialivSGIX [ void FragmentMaterialivSGIX(enum face, enum pname, const int *params) ]
		- glFragmentColorMaterialSGIX [ void FragmentColorMaterialSGIX(enum face, enum mode) ]
		- glGetFragmentMaterialfvSGIX [ void GetFragmentMaterialfvSGIX(enum face, enum pname, float *data) ]
		- glGetFragmentMaterialivSGIX [ void GetFragmentMaterialivSGIX(enum face, enum pname, int *data) ]
		- glLightEnviSGIX [ %Broken% ]
SGIX_framezoom [ source: SGIX\SGIX_framezoom.txt ]
	- Strings = [ GL_SGIX_framezoom ]
	- Funcs:
		- glFrameZoomSGIX [ void FrameZoomSGIX(GLint factor) ]
SGIX_icc_texture [ UNDONE_SPECsource: SGIX\SGIX_icc_texture.txt ]
	- Strings = [ GL_SGIX_icc_texture ]
SGIX_igloo_interface [ source: SGIX\SGIX_igloo_interface.txt ]
	- Strings = [ GL_SGIX_igloo_interface ]
	- Funcs:
		- glIglooInterfaceSGIX [ void IglooInterfaceSGIX(enum pname, void *param) ]
SGIX_image_compression [ UNDONE_SPECsource: SGIX\SGIX_image_compression.txt ]
	- Strings = [ GL_SGIX_image_compression ]
SGIX_impact_pixel_texture [ source: SGIX\SGIX_impact_pixel_texture.txt ]
	- Strings = [ GL_SGIX_impact_pixel_texture ]
SGIX_instruments [ UNDONE_SPECsource: SGIX\SGIX_instruments.txt ]
	- Strings = [ GL_SGIX_instruments ]
	- Funcs:
		- glInstrumentsBufferSGIX [ void InstrumentsBufferSGIX(sizei size, int *buf) ]
		- glStartInstrumentsSGIX [ void StartInstrumentsSGIX(void) ]
		- glStopInstrumentsSGIX [ void StopInstrumentsSGIX(int marker) ]
		- glReadInstrumentsSGIX [ void ReadInstrumentsSGIX(int marker) ]
		- glPollInstrumentsSGIX [ int PollInstrumentsSGIX(int *markerp) ]
		- glGetInstrumentsSGIX [ int GetInstrumentsSGIX(void) ]
		- glStartInstrumentsSGIX [ void glStartInstrumentsSGIX() ]
		- glGetInstrumentsSGIX [ = glGetInstrumentsSGIX() ]
		- glGetInstrumentsSGIX [ = glGetInstrumentsSGIX() ]
SGIX_instrument_error [ UNDONE_SPECsource: SGIX\SGIX_instrument_error.txt ]
	- Strings = [ GL_SGIX_instrument_error ]
SGIX_interlace [ source: SGIX\SGIX_interlace.txt ]
	- Strings = [ GL_SGIX_interlace ]
SGIX_ir_instrument1 [ UNDONE_SPECsource: SGIX\SGIX_ir_instrument1.txt ]
	- Strings = [ GL_SGIX_ir_instrument1 ]
SGIX_line_quality_hint [ UNDONE_SPECsource: SGIX\SGIX_line_quality_hint.txt ]
	- Strings = [ GL_SGIX_line_quality_hint ]
SGIX_list_priority [ UNDONE_SPECsource: SGIX\SGIX_list_priority.txt ]
	- Strings = [ GL_SGIX_list_priority ]
	- Funcs:
		- glListParameterfSGIX [ void ListParameterfSGIX(uint list, enum pname, float params) ]
		- glListParameterfvSGIX [ void ListParameterfvSGIX(uint list, enum pname, float *params) ]
		- glListParameteriSGIX [ void ListParameteriSGIX(uint list, enum pname, int param) ]
		- glListParameterivSGIX [ void ListParameterivSGIX(uint list, enum pname, int *params) ]
		- glGetListParameterfvSGIX [ void GetListParameterfvSGIX(uint list, enum pname, float *params) ]
		- glGetListParameterivSGIX [ void GetListParameterivSGIX(uint list, enum pname, int *params) ]
SGIX_mpeg1 [ UNDONE_SPECsource: SGIX\SGIX_mpeg1.txt ]
	- Strings = [ GL_SGIX_mpeg1 ]
	- Funcs:
		- glGenMPEGPredictorsSGIX [ void GenMPEGPredictorsSGIX(sizei n, uint *predictors) ]
		- glAllocMPEGPredictorsSGIX [ void AllocMPEGPredictorsSGIX(sizei width, sizei height, sizei n, uint *predictors) ]
		- glDeleteMPEGPredictorsSGIX [ void DeleteMPEGPredictorsSGIX(sizei n, uint *predictors) ]
		- glIsMPEGPredictorSGIX [ boolean IsMPEGPredictorSGIX(uint predictor) ]
		- glMPEGPredictorSGIX [ void MPEGPredictorSGIX(enum target, enum format, enum type, void *pixels) ]
		- glGetMPEGPredictorSGIX [ void GetMPEGPredictorSGIX(enum target, enum format, enum type, void *pixels) ]
		- glSwapMPEGPredictorsSGIX [ void SwapMPEGPredictorsSGIX(enum target0, enum target1) ]
		- glGetMPEGParameterfvSGIX [ void GetMPEGParameterfvSGIX(enum target, enum pname, float *params) ]
		- glGetMPEGParameterivSGIX [ void GetMPEGParameterivSGIX(enum target, enum pname, int *params) ]
		- glMPEGQuantTableubv [ void MPEGQuantTableubv(enum target, ubyte *values) ]
		- glGetMPEGQuantTableubv [ void GetMPEGQuantTableubv(enum target, ubyte *values) ]
SGIX_mpeg2 [ UNDONE_SPECsource: SGIX\SGIX_mpeg2.txt ]
	- Strings = [ GL_SGIX_mpeg2 ]
SGIX_nonlinear_lighting_pervertex [ UNDONE_SPECsource: SGIX\SGIX_nonlinear_lighting_pervertex.txt ]
	- Strings = [ GL_SGIX_nonlinear_lighting_pervertex ]
	- Funcs:
		- glNonlinMaterialfvSGIX [ void NonlinMaterialfvSGIX(enum face, enum pname, int terms, const float *params) ]
		- glGetNonlinMaterialfvSGIX [ void GetNonlinMaterialfvSGIX(enum face, enum pname, int *terms, const float *data) ]
		- glNonlinLightfvSGIX [ void NonlinLightfvSGIX(enum light, enum pname, int terms, float *params) ]
		- glGetNonlinLightfvSGIX [ void GetNonlinLightfvSGIX(enum light, enum pname, int *terms, float *data) ]
SGIX_nurbs_eval [ UNDONE_SPECsource: SGIX\SGIX_nurbs_eval.txt ]
	- Strings = [ GL_SGIX_nurbs_eval ]
	- Funcs:
		- glNurbsKnots1SGIXf [ void NurbsKnots1SGIXf( enum target, int uknotcount, glfloat *uknots ) ]
		- glNurbsKnots1SGIXd [ void NurbsKnots1SGIXd( enum target, int uknotcount, gldouble *uknots ) ]
		- glNurbsKnots2SGIXf [ void NurbsKnots2SGIXf( enum target, int uknotcount, int vknotcount, glfloat *uknots, glfloat *vknots ) ]
		- glNurbsKnots2SGIXd [ void NurbsKnots2SGIXd( enum target, int uknotcount, int vknotcount, gldouble *uknots, gldouble *vknots ) ]
SGIX_occlusion_instrument [ UNDONE_SPECsource: SGIX\SGIX_occlusion_instrument.txt ]
	- Strings = [ GL_SGIX_occlusion_instrument ]
SGIX_packed_6bytes [ source: SGIX\SGIX_packed_6bytes.txt ]
	- Strings = [ GL_SGIX_packed_6bytes ]
SGIX_pixel_texture [ source: SGIX\SGIX_pixel_texture.txt ]
	- Strings = [ GL_SGIX_pixel_texture ]
	- Funcs:
		- glPixelTexGenSGIX [ void PixelTexGenSGIX(enum mode) ]
SGIX_pixel_texture_bits [ source: SGIX\SGIX_pixel_texture_bits.txt ]
	- Strings = [ GL_SGIX_pixel_texture_bits ]
SGIX_pixel_texture_lod [ UNDONE_SPECsource: SGIX\SGIX_pixel_texture_lod.txt ]
	- Strings = [ GL_SGIX_pixel_texture_lod ]
SGIX_pixel_tiles [ UNDONE_SPECsource: SGIX\SGIX_pixel_tiles.txt ]
	- Strings = [ GL_SGIX_pixel_tiles ]
SGIX_polynomial_ffd [ source: SGIX\SGIX_polynomial_ffd.txt ]
	- Strings = [ GL_SGIX_polynomial_ffd ]
	- Funcs:
		- glDeformationMap3fSGIX [ void DeformationMap3fSGIX( enum target, glfloat u1, glfloat u2, int ustride, int uorder, glfloat v1, glfloat v2, int vstride, int vorder, glfloat w1, glfloat w2, int wstride, int worder, T* points) ]
		- glDeformationMap3dSGIX [ void DeformationMap3dSGIX( enum target, gldouble u1, gldouble u2, int ustride, int uorder, gldouble v1, gldouble v2, int vstride, int vorder, gldouble w1, gldouble w2, int wstride, int worder, T* points) ]
		- glLoadIdentityDeformationMapSGIX [ void LoadIdentityDeformationMapSGIX( bitfield mask ) ]
		- glDeformSGIX [ void DeformSGIX( bitfield mask ) ]
SGIX_quad_mesh [ UNDONE_SPECsource: SGIX\SGIX_quad_mesh.txt ]
	- Strings = [ GL_SGIX_quad_mesh ]
	- Funcs:
		- glMeshBreadthSGIX [ void MeshBreadthSGIX(int breadth) ]
		- glMeshStrideSGIX [ void MeshStrideSGIX(int stride) ]
SGIX_reference_plane [ source: SGIX\SGIX_reference_plane.txt ]
	- Strings = [ GL_SGIX_reference_plane ]
	- Funcs:
		- glReferencePlaneSGIX [ void glReferencePlaneSGIX(const GLdouble *equation) ]
SGIX_resample [ UNDONE_SPECsource: SGIX\SGIX_resample.txt ]
	- Strings = [ GL_SGIX_resample ]
SGIX_scalebias_hint [ UNDONE_SPECsource: SGIX\SGIX_scalebias_hint.txt ]
	- Strings = [ GL_SGIX_scalebias_hint ]
SGIX_shadow [ UNDONE_SPECsource: SGIX\SGIX_shadow.txt ]
	- Strings = [ GL_SGIX_shadow ]
SGIX_shadow_ambient [ source: SGIX\SGIX_shadow_ambient.txt ]
	- Strings = [ GL_SGIX_shadow_ambient ]
SGIX_slim [ UNDONE_SPECsource: SGIX\SGIX_slim.txt ]
	- Strings = [ GL_SGIX_slim ]
SGIX_spotlight_cutoff [ UNDONE_SPECsource: SGIX\SGIX_spotlight_cutoff.txt ]
	- Strings = [ GL_SGIX_spotlight_cutoff ]
SGIX_sprite [ source: SGIX\SGIX_sprite.txt ]
	- Strings = [ GL_SGIX_sprite ]
	- Funcs:
		- glSpriteParameteriSGIX [ void SpriteParameteriSGIX(enum pname, int param) ]
		- glSpriteParameterfSGIX [ void SpriteParameterfSGIX(enum pname, float param) ]
		- glSpriteParameterivSGIX [ void SpriteParameterivSGIX(enum pname, int* params) ]
		- glSpriteParameterfvSGIX [ void SpriteParameterfvSGIX(enum pname, float* params) ]
SGIX_subdiv_patch [ source: SGIX\SGIX_subdiv_patch.txt ]
	- Strings = [ GL_SGIX_subdiv_patch ]
	- Funcs:
		- glSubdivPatchSGIX [ void glSubdivPatchSGIX(const void **vertexData, const void **vertexTag, const void **edgeTag) ]
		- glSubdivPatchParameterfSGIX [ void glSubdivPatchParameterfSGIX(GLenum pname, GLfloat param) ]
		- glSubdivPatchParameteriSGIX [ void glSubdivPatchParameteriSGIX(GLenum pname, GLint param) ]
SGIX_subsample [ UNDONE_SPECsource: SGIX\SGIX_subsample.txt ]
	- Strings = [ GL_SGIX_subsample ]
SGIX_tag_sample_buffer [ source: SGIX\SGIX_tag_sample_buffer.txt ]
	- Strings = [ GL_SGIX_tag_sample_buffer ]
	- Funcs:
		- glTagSampleBufferSGIX [ void TagSampleBufferSGIX(void) ]
SGIX_texture_add_env [ source: SGIX\SGIX_texture_add_env.txt ]
	- Strings = [ GL_SGIX_texture_add_env ]
SGIX_texture_coordinate_clamp [ source: SGIX\SGIX_texture_coordinate_clamp.txt ]
	- Strings = [ GL_SGIX_texture_coordinate_clamp ]
SGIX_texture_lod_bias [ source: SGIX\SGIX_texture_lod_bias.txt ]
	- Strings = [ GL_SGIX_texture_lod_bias ]
SGIX_texture_mipmap_anisotropic [ source: SGIX\SGIX_texture_mipmap_anisotropic.txt ]
	- Strings = [ GL_SGIX_texture_mipmap_anisotropic ]
SGIX_texture_multi_buffer [ source: SGIX\SGIX_texture_multi_buffer.txt ]
	- Strings = [ GL_SGIX_texture_multi_buffer ]
SGIX_texture_phase [ UNDONE_SPECsource: SGIX\SGIX_texture_phase.txt ]
	- Strings = [ GL_SGIX_texture_phase ]
SGIX_texture_range [ source: SGIX\SGIX_texture_range.txt ]
	- Strings = [ GL_SGIX_texture_range ]
SGIX_texture_scale_bias [ source: SGIX\SGIX_texture_scale_bias.txt ]
	- Strings = [ GL_SGIX_texture_scale_bias ]
SGIX_texture_supersample [ source: SGIX\SGIX_texture_supersample.txt ]
	- Strings = [ GL_SGIX_texture_supersample ]
SGIX_vector_ops [ UNDONE_SPECsource: SGIX\SGIX_vector_ops.txt ]
	- Strings = [ GL_SGIX_vector_ops ]
	- Funcs:
		- glVectorOperationSGIX [ void VectorOperationSGIX(enum operation) ]
		- glGetVectorOperationSGIX [ void GetVectorOperationSGIX(enum operation) ]
SGIX_vertex_array_object [ UNDONE_SPECsource: SGIX\SGIX_vertex_array_object.txt ]
	- Strings = [ GL_SGIX_vertex_array_object ]
	- Funcs:
		- glGenVertexArraysSGIX [ void GenVertexArraysSGIX(sizei n, uint* arrays) ]
		- glDeleteVertexArraysSGIX [ void DeleteVertexArraysSGIX(sizei n, const uint* arrays) ]
		- glBindVertexArraySGIX [ void BindVertexArraySGIX(uint array) ]
		- glPrioritizeVertexArraysSGIX [ void PrioritizeVertexArraysSGIX(sizei n, const uint* arrays, const clampf* priorities) ]
		- glAreVertexArraysResidentSGIX [ boolean AreVertexArraysResidentSGIX(sizei n, const uint* arrays, boolean* residences) ]
		- glIsVertexArraySGIX [ boolean IsVertexArraySGIX(uint array) ]
SGIX_vertex_preclip [ source: SGIX\SGIX_vertex_preclip.txt ]
	- Strings = [ GL_SGIX_vertex_preclip GL_SGIX_vertex_preclip_hint ]
SGIX_ycrcb [ UNDONE_SPECsource: SGIX\SGIX_ycrcb.txt ]
	- Strings = [ GL_SGIX_ycrcb ]
SGIX_ycrcba [ UNDONE_SPECsource: SGIX\SGIX_ycrcba.txt ]
	- Strings = [ GL_SGIX_ycrcba ]
SGIX_ycrcb_subsample [ UNDONE_SPECsource: SGIX\SGIX_ycrcb_subsample.txt ]
	- Strings = [ GL_SGIX_ycrcb_subsample ]
SUN_get_transparent_index [ source: SUN\GLX_SUN_get_transparent_index.txt ]
	- Strings = [ GLX_SUN_get_transparent_index ]
	- Funcs:
		- glXGetTransparentIndexSUN [ Status glXGetTransparentIndexSUN(Display *dpy, Window overlay, Window underlay, unsigned long *pTransparentIndex) ]
SUN_convolution_border_modes [ source: SUN\SUN_convolution_border_modes.txt ]
	- Strings = [ GL_SUN_convolution_border_modes ]
SUN_global_alpha [ source: SUN\SUN_global_alpha.txt ]
	- Strings = [ GL_SUN_global_alpha ]
	- Funcs:
		- glGlobalAlphaFactorbSUN [ void GlobalAlphaFactorbSUN(byte factor) ]
		- glGlobalAlphaFactorsSUN [ void GlobalAlphaFactorsSUN(short factor) ]
		- glGlobalAlphaFactoriSUN [ void GlobalAlphaFactoriSUN(int factor) ]
		- glGlobalAlphaFactorfSUN [ void GlobalAlphaFactorfSUN(float factor) ]
		- glGlobalAlphaFactordSUN [ void GlobalAlphaFactordSUN(double factor) ]
		- glGlobalAlphaFactorubSUN [ void GlobalAlphaFactorubSUN(ubyte factor) ]
		- glGlobalAlphaFactorusSUN [ void GlobalAlphaFactorusSUN(ushort factor) ]
		- glGlobalAlphaFactoruiSUN [ void GlobalAlphaFactoruiSUN(uint factor) ]
SUN_mesh_array [ source: SUN\SUN_mesh_array.txt ]
	- Strings = [ GL_SUN_mesh_array ]
	- Funcs:
		- glDrawMeshArraysSUN [ void glDrawMeshArraysSUN( GLenum mode, GLint first, GLsizei count, GLsizei width ) ]
SUN_slice_accum [ source: SUN\SUN_slice_accum.txt ]
	- Strings = [ GL_SUN_slice_accum ]
SUN_triangle_list [ source: SUN\SUN_triangle_list.txt ]
	- Strings = [ GL_SUN_triangle_list ]
	- Funcs:
		- glReplacementCodeuiSUN [ void ReplacementCodeuiSUN(uint code) ]
		- glReplacementCodeusSUN [ void ReplacementCodeusSUN(ushort code) ]
		- glReplacementCodeubSUN [ void ReplacementCodeubSUN(ubyte code) ]
		- glReplacementCodeuivSUN [ void ReplacementCodeuivSUN(const uint *code) ]
		- glReplacementCodeusvSUN [ void ReplacementCodeusvSUN(const ushort *code) ]
		- glReplacementCodeubvSUN [ void ReplacementCodeubvSUN(const ubyte *code) ]
		- glReplacementCodePointerSUN [ void ReplacementCodePointerSUN(enum type, sizei stride, const void *pointer) ]
SUN_vertex [ source: SUN\SUN_vertex.txt ]
	- Strings = [ GL_SUN_vertex ]
	- Funcs:
		- glColor4ubVertex2fSUN [ void Color4ubVertex2fSUN(ubyte r, ubyte g, ubyte b, ubyte a, float x, float y) ]
		- glColor4ubVertex2fvSUN [ void Color4ubVertex2fvSUN(const ubyte *c, const float *v) ]
		- glColor4ubVertex3fSUN [ void Color4ubVertex3fSUN(ubyte r, ubyte g, ubyte b, ubyte a, float x, float y, float z) ]
		- glColor4ubVertex3fvSUN [ void Color4ubVertex3fvSUN(const ubyte *c, const float *v) ]
		- glColor3fVertex3fSUN [ void Color3fVertex3fSUN(float r, float g, float b, float x, float y, float z) ]
		- glColor3fVertex3fvSUN [ void Color3fVertex3fvSUN(const float *c, const float *v) ]
		- glNormal3fVertex3fSUN [ void Normal3fVertex3fSUN(float nx, float ny, float nz, float x, float y, float z) ]
		- glNormal3fVertex3fvSUN [ void Normal3fVertex3fvSUN(const float *n, const float *v) ]
		- glColor4fNormal3fVertex3fSUN [ void Color4fNormal3fVertex3fSUN(float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z) ]
		- glColor4fNormal3fVertex3fvSUN [ void Color4fNormal3fVertex3fvSUN(const float *c, const float *n, const float *v) ]
		- glTexCoord2fVertex3fSUN [ void TexCoord2fVertex3fSUN(float s, float t, float x, float y, float z) ]
		- glTexCoord2fVertex3fvSUN [ void TexCoord2fVertex3fvSUN(const float *tc, const float *v) ]
		- glTexCoord4fVertex4fSUN [ void TexCoord4fVertex4fSUN(float s, float t, float p, float q, float x, float y, float z, float w) ]
		- glTexCoord4fVertex4fvSUN [ void TexCoord4fVertex4fvSUN(const float *tc, const float *v) ]
		- glTexCoord2fColor4ubVertex3fSUN [ void TexCoord2fColor4ubVertex3fSUN(float s, float t, ubyte r, ubyte g, ubyte b, ubyte a, float x, float y, float z) ]
		- glTexCoord2fColor4ubVertex3fvSUN [ void TexCoord2fColor4ubVertex3fvSUN(const float *tc, const ubyte *c, const float *v) ]
		- glTexCoord2fColor3fVertex3fSUN [ void TexCoord2fColor3fVertex3fSUN(float s, float t, float r, float g, float b, float x, float y, float z) ]
		- glTexCoord2fColor3fVertex3fvSUN [ void TexCoord2fColor3fVertex3fvSUN(const float *tc, const float *c, const float *v) ]
		- glTexCoord2fNormal3fVertex3fSUN [ void TexCoord2fNormal3fVertex3fSUN(float s, float t, float nx, float ny, float nz, float x, float y, float z) ]
		- glTexCoord2fNormal3fVertex3fvSUN [ void TexCoord2fNormal3fVertex3fvSUN(const float *tc, const float *n, const float *v) ]
		- glTexCoord2fColor4fNormal3fVertex3fSUN [ void TexCoord2fColor4fNormal3fVertex3fSUN(float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z) ]
		- glTexCoord2fColor4fNormal3fVertex3fvSUN [ void TexCoord2fColor4fNormal3fVertex3fvSUN(const float *tc, const float *c, const float *n, const float *v) ]
		- glTexCoord4fColor4fNormal3fVertex4fSUN [ void TexCoord4fColor4fNormal3fVertex4fSUN(float s, float t, float p, float q, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z, float w) ]
		- glTexCoord4fColor4fNormal3fVertex4fvSUN [ void TexCoord4fColor4fNormal3fVertex4fvSUN(const float *tc, const float *c, const float *n, const float *v) ]
		- glReplacementCodeuiVertex3fSUN [ void ReplacementCodeuiVertex3fSUN(uint rc, float x, float y, float z) ]
		- glReplacementCodeuiVertex3fvSUN [ void ReplacementCodeuiVertex3fvSUN(const uint *rc, const float *v) ]
		- glReplacementCodeuiColor4ubVertex3fSUN [ void ReplacementCodeuiColor4ubVertex3fSUN(uint rc, ubyte r, ubyte g, ubyte b, ubyte a, float x, float y, float z) ]
		- glReplacementCodeuiColor4ubVertex3fvSUN [ void ReplacementCodeuiColor4ubVertex3fvSUN(const uint *rc, const ubyte *c, const float *v) ]
		- glReplacementCodeuiColor3fVertex3fSUN [ void ReplacementCodeuiColor3fVertex3fSUN(uint rc, float r, float g, float b, float x, float y, float z) ]
		- glReplacementCodeuiColor3fVertex3fvSUN [ void ReplacementCodeuiColor3fVertex3fvSUN(const uint *rc, const float *c, const float *v) ]
		- glReplacementCodeuiNormal3fVertex3fSUN [ void ReplacementCodeuiNormal3fVertex3fSUN(uint rc, float nx, float ny, float nz, float x, float y, float z) ]
		- glReplacementCodeuiNormal3fVertex3fvSUN [ void ReplacementCodeuiNormal3fVertex3fvSUN(const uint *rc, const float *n, const float *v) ]
		- glReplacementCodeuiColor4fNormal3fVertex3fSUN [ void ReplacementCodeuiColor4fNormal3fVertex3fSUN(uint rc, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z) ]
		- glReplacementCodeuiColor4fNormal3fVertex3fvSUN [ void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(const uint *rc, const float *c, const float *n, const float *v) ]
		- glReplacementCodeuiTexCoord2fVertex3fSUN [ void ReplacementCodeuiTexCoord2fVertex3fSUN(uint rc, float s, float t, float x, float y, float z) ]
		- glReplacementCodeuiTexCoord2fVertex3fvSUN [ void ReplacementCodeuiTexCoord2fVertex3fvSUN(const uint *rc, const float *tc, const float *v) ]
		- glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN [ void ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(uint rc, float s, float t, float nx, float ny, float nz, float x, float y, float z) ]
		- glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN [ void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const uint *rc, const float *tc, const float *n, const float *v) ]
		- glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN [ void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(uint rc, float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z) ]
		- glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN [ void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN( const uint *rc, const float *tc, const float *c, const float *n, const float *v) ]
SUNX_constant_data [ source: SUNX\SUNX_constant_data.txt ]
	- Strings = [ GL_SUNX_constant_data ]
	- Funcs:
		- glFinishTextureSUNX [ void FinishTextureSUNX(void) ]
VIV_shader_binary [ source: VIV\VIV_shader_binary.txt ]
	- Strings = [ GL_VIV_shader_binary ]
WIN_phong_shading [ source: WIN\WIN_phong_shading.txt ]
	- Strings = [ GL_WIN_phong_shading ]
WIN_scene_markerXXX [ UNDONE_SPECsource: WIN\WIN_scene_markerXXX.txt ]
	- Strings = [ GL_WIN_scene_markerXXX Number Microsoft 1997 Abstract However NAME glBeginScene DESCRIPTION EXAMPLES NOTES ERRORS glNewList glEndList glCallList glCallLists glDeleteLists glGenLists NAME DESCRIPTION GL_SCENE_REQUIRED ]
WIN_specular_fog [ source: WIN\WIN_specular_fog.txt ]
	- Strings = [ GL_WIN_specular_fog ]
