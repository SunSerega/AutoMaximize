type t1 = class ... end;
type t2 = class(t1) ... end;
...
var Q1: CommandQueue<integer> := 5;
var Q2: CommandQueueBase := Q1;
var Q3: CommandQueue<t1> := (new t2) as t1;
var Q4: CommandQueue<t1> := new t1;
var Q5: CommandQueue<t2> := new t2;

// Можно, потому что к object можно преобразовать всё
Context.Default.SyncInvoke( Q1.Cast&<object> );

// Нельзя, преобразование из integer в byte - изменяет внутреннее представление данных
Context.Default.SyncInvoke( Q1.Cast&<byte> );

// Можно, Q2 и так имеет тип CommandQueue<integer>, а значит тут Cast вернёт (Q2 as CommandQueue<integer>)
Context.Default.SyncInvoke( Q2.Cast&<integer> );

// Можно, потому что Q3 возвращает t2
Context.Default.SyncInvoke( Q3.Cast&<t2> );

// Нельзя, Q4 возвращает не t2 а t1, поэтому к t2 преобразовать не получится
Context.Default.SyncInvoke( Q4.Cast&<t2> );

// Можно, потому что t2 наследует от t1
Context.Default.SyncInvoke( Q5.Cast&<t1> );