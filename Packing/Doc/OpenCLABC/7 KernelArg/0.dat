


# KernelArg
Представляет аргумент, передаваемый в вызов kernel-а



# KernelArg.FromCLArray<T>(CLArray<T>)
# KernelArg.FromCLArrayCQ<T>(CommandQueue<CLArray<T>>)
Создаёт агрумент kernel-а, представляющий массив данных, хранимых на GPU



# KernelArg.FromMemorySegment(MemorySegment)
# KernelArg.FromMemorySegmentCQ(CommandQueue<MemorySegment>)
Создаёт аргумент kernel-а, представляющий область памяти GPU



# KernelArg.FromData(IntPtr, UIntPtr)
# KernelArg.FromDataCQ(CommandQueue<IntPtr>, CommandQueue<UIntPtr>)
# KernelArg.FromValueData<TRecord>(^TRecord)
Создаёт аргумент kernel-а, представляющий адрес в неуправляемой памяти или на стэке



# KernelArg.FromValue<TRecord>(TRecord)
# KernelArg.FromValueCQ<TRecord>(CommandQueue<TRecord>)
Создаёт аргумент kernel-а, представляющий небольшое значение размерного типа



# KernelArg.FromArray<TRecord>(array of TRecord, integer)
# KernelArg.FromArrayCQ<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>)
Создаёт аргумент kernel-а, ссылающийся на указанный массив, на элемент с индексом ind



# KernelArg.ToString
Возвращает строковое представление данного объекта KernelArg
Используйте это значение только для отладки, потому что данный метод довольно медленный

# KernelArg.Print[%ln:,ln%]
Вызывает Write{%ln%}(ToString) для данного объекта KernelArg и возвращает его же


