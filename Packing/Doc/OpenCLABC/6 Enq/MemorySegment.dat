


# MemorySegment:BuffOffsetDef
buff_offset указывает отступ от начала буфера, в байтах
# MemorySegment:BuffLenDef
len указывает кол-во задействованных байт буфера

# MemorySegment:ArrLenDef
len указывает кол-во задействованных элементов массива
# MemorySegment:ArrOffsetDef
a_offset(-ы) указывают индекс в массиве
# MemorySegment:ArrOffsetWarning
ВНИМАНИЕ! У многомерных массивов элементы распологаются так же как у одномерных, разделение на строки виртуально
Это значит что, к примеру, чтение 4 элементов 2-х мерного массива начиная с индекса [0,1]
прочитает элементы [0,1], [0,2], [1,0], [1,1]. Для чтения частей из нескольких строк массива - делайте несколько операций чтения, по 1 на строку



# MemorySegment.WriteData(CommandQueue<IntPtr>)
# MemorySegment.WriteData(pointer)
# MemorySegmentCCQ.AddWriteData(CommandQueue<IntPtr>)
# MemorySegmentCCQ.AddWriteData(pointer)
Заполняет весь буфер данными, находящимися по указанному адресу в RAM
# MemorySegment.ReadData(CommandQueue<IntPtr>)
# MemorySegment.ReadData(pointer)
# MemorySegmentCCQ.AddReadData(CommandQueue<IntPtr>)
# MemorySegmentCCQ.AddReadData(pointer)
Копирует всё содержимое буфера в RAM, по указанному адресу

# MemorySegment.WriteData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.WriteData(pointer, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteData(pointer, CommandQueue<integer>, CommandQueue<integer>)
Заполняет часть буфер данными, находящимися по указанному адресу в RAM
%MemorySegment:BuffOffsetDef%
%MemorySegment:BuffLenDef%
# MemorySegment.ReadData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.ReadData(pointer, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadData(pointer, CommandQueue<integer>, CommandQueue<integer>)
Копирует часть содержимого буфера в RAM, по указанному адресу
%MemorySegment:BuffOffsetDef%
%MemorySegment:BuffLenDef%



# MemorySegment.WriteValue<TRecord>(TRecord)
# MemorySegment.WriteValue<TRecord>(CommandQueue<TRecord>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(TRecord)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<TRecord>)
Записывает указанное значение размерного типа в начало буфера

# MemorySegment.WriteValue<TRecord>(TRecord, CommandQueue<integer>)
# MemorySegment.WriteValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(TRecord, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>)
Записывает указанное значение размерного типа в буфер
%MemorySegment:BuffOffsetDef%



# MemorySegment.WriteArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegment.WriteArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegment.WriteArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
# MemorySegmentCCQ.AddWriteArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegmentCCQ.AddWriteArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegmentCCQ.AddWriteArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
Записывает весь массив в начало буфера

# MemorySegment.ReadArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegment.ReadArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegment.ReadArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
# MemorySegmentCCQ.AddReadArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegmentCCQ.AddReadArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegmentCCQ.AddReadArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
Читает из буфера достаточно байт чтоб заполнить весь массив

# MemorySegment.WriteArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment:WriteArrayDef
Записывает указанный участок массива в буфер
%MemorySegment:ArrOffsetDef%
%MemorySegment:ArrLenDef%
%MemorySegment:BuffOffsetDef%

# MemorySegment.ReadArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment:ReadArrayDef
Читает в буфер указанный участок массива
%MemorySegment:ArrOffsetDef%
%MemorySegment:ArrLenDef%
%MemorySegment:BuffOffsetDef%

# MemorySegment.WriteArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.WriteArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:WriteArrayDef%

%MemorySegment:ArrOffsetWarning%

# MemorySegment.ReadArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.ReadArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:ReadArrayDef%

%MemorySegment:ArrOffsetWarning%



# MemorySegment.FillData(CommandQueue<IntPtr>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillData(CommandQueue<IntPtr>, CommandQueue<integer>)
Читает pattern_len байт из RAM по указанному адресу и заполняет их копиями весь буфер

# MemorySegment.FillData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
Читает pattern_len байт из RAM по указанному адресу и заполняет их копиями часть буфера
%MemorySegment:BuffOffsetDef%
%MemorySegment:BuffLenDef%



# MemorySegment.FillValue<TRecord>(TRecord)
# MemorySegment.FillValue<TRecord>(CommandQueue<TRecord>)
# MemorySegmentCCQ.AddFillValue<TRecord>(TRecord)
# MemorySegmentCCQ.AddFillValue<TRecord>(CommandQueue<TRecord>)
Заполняет весь буфер копиями указанного значения размерного типа

# MemorySegment.FillValue<TRecord>(TRecord, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.FillValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillValue<TRecord>(TRecord, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>, CommandQueue<integer>)
Заполняет часть буфера копиями указанного значения размерного типа
%MemorySegment:BuffOffsetDef%
%MemorySegment:BuffLenDef%



# MemorySegment:CopyToDef
Копирует данные из текущего буфера в b
# MemorySegment:CopyFromDef
Копирует данные из b в текущий буфер

# MemorySegment:CopyAutoSizeDef
Если буферы имеют разный размер - в качестве объёма данных берётся размер меньшего буфера
# MemorySegment:CopyManualSizeDef
from_pos указывает отступ в байтах от начала буфера, из которого копируют
to_pos указывает отступ в байтах от начала буфера, в который копируют
len указывает кол-во копируемых байт

# MemorySegment.CopyTo(CommandQueue<MemorySegment>)
# MemorySegmentCCQ.AddCopyTo(CommandQueue<MemorySegment>)
%MemorySegment:CopyToDef%
%MemorySegment:CopyAutoSizeDef%
# MemorySegment.CopyForm(CommandQueue<MemorySegment>)
# MemorySegmentCCQ.AddCopyForm(CommandQueue<MemorySegment>)
%MemorySegment:CopyFromDef%
%MemorySegment:CopyAutoSizeDef%

# MemorySegment.CopyTo(CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddCopyTo(CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:CopyToDef%
%MemorySegment:CopyManualSizeDef%
# MemorySegment.CopyForm(CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddCopyForm(CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:CopyFromDef%
%MemorySegment:CopyManualSizeDef%



# MemorySegment.GetData
# MemorySegmentCCQ.AddGetData
Выделяет область неуправляемой памяти и копирует в неё всё содержимое данного буфера

# MemorySegment.GetData(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetData(CommandQueue<integer>, CommandQueue<integer>)
Выделяет область неуправляемой памяти и копирует в неё часть содержимого данного буфера
%MemorySegment:BuffOffsetDef%
%MemorySegment:BuffLenDef%



# MemorySegment.GetValue<TRecord>
# MemorySegmentCCQ.AddGetValue<TRecord>
Читает значение указанного размерного типа из начала буфера

# MemorySegment.GetValue<TRecord>(CommandQueue<integer>)
# MemorySegmentCCQ.AddGetValue<TRecord>(CommandQueue<integer>)
Читает значение указанного размерного типа из буфера
%MemorySegment:BuffOffsetDef%



# MemorySegment.GetArray1<TRecord>
# MemorySegmentCCQ.AddGetArray1<TRecord>
Создаёт массив максимального размера (на сколько хватит байт буфера) и копирует в него содержимое буфера

# MemorySegment.GetArray1<TRecord>(CommandQueue<integer>)
# MemorySegment.GetArray2<TRecord>(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.GetArray3<TRecord>(CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray1<TRecord>(CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray2<TRecord>(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray3<TRecord>(CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
Создаёт массив с указанным кол-вом элементов и копирует в него содержимое буфера



