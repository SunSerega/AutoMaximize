


# [%t:MemorySegment,Kernel%]CCQ
Представляет очередь-контейнер для команд GPU, применяемых к объекту типа {%t%}



# MemorySegmentCCQ.(MemorySegment)
# KernelCCQ.(Kernel)
Создаёт контейнер команд, который будет применять команды к указанному объекту

# MemorySegmentCCQ.(CommandQueue<MemorySegment>)
# KernelCCQ.(CommandQueue<Kernel>)
Создаёт контейнер команд, который будет применять команды к объекту, который вернёт указанная очередь
За каждое одно выполнение контейнера - q выполнится ровно один раз



# MemorySegmentCCQ.AddQueue(CommandQueueBase)
# KernelCCQ.AddQueue(CommandQueueBase)
Добавляет выполнение очереди в список обычных команд для GPU

# MemorySegmentCCQ.AddProc(MemorySegment->())
# KernelCCQ.AddProc(Kernel->())
# MemorySegmentCCQ.AddProc((MemorySegment, Context)->())
# KernelCCQ.AddProc((Kernel, Context)->())
Добавляет выполнение процедуры на CPU в список обычных команд для GPU

# [%MemorySegment,Kernel%]CCQ.AddWait(WaitMarkerBase)
Добавляет ожидание сигнала выполненности от заданного маркера

# [%MemorySegment,Kernel%]CCQ.AddWaitAll(array of WaitMarkerBase)
# [%MemorySegment,Kernel%]CCQ.AddWaitAll(sequence of WaitMarkerBase)
Добавляет ожидание сигнала выполненности от всех заданных маркеров

# [%MemorySegment,Kernel%]CCQ.AddWaitAny(array of WaitMarkerBase)
# [%MemorySegment,Kernel%]CCQ.AddWaitAny(sequence of WaitMarkerBase)
Добавляет ожидание первого сигнала выполненности от одного из заданных маркеров


