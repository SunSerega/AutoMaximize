


# [%t:Buffer,Kernel%]CommandQueue
Представляет очередь-контейнер для команд GPU, применяемых к объекту типа {%t%}



# BufferCommandQueue.(Buffer)
# KernelCommandQueue.(Kernel)
Создаёт контейнер команд, который будет применять команды к указанному объекту

# BufferCommandQueue.(CommandQueue<Buffer>)
# KernelCommandQueue.(CommandQueue<Kernel>)
Создаёт контейнер команд, который будет применять команды к объекту, который вернёт указанная очередь
За каждое одно выполнение контейнера - q выполнится ровно один раз



# BufferCommandQueue.AddQueue(CommandQueueBase)
# KernelCommandQueue.AddQueue(CommandQueueBase)
Добавляет выполнение очереди в список обычных команд для GPU

# BufferCommandQueue.AddProc(Buffer->())
# KernelCommandQueue.AddProc(Kernel->())
# BufferCommandQueue.AddProc((Buffer, Context)->())
# KernelCommandQueue.AddProc((Kernel, Context)->())
Добавляет выполнение процедуры на CPU в список обычных команд для GPU

# [%Buffer,Kernel%]CommandQueue.AddWait(MarkerQueue)
Добавляет ожидание сигнала выполненности от заданного маркера

# [%Buffer,Kernel%]CommandQueue.AddWaitAll(array of MarkerQueue)
# [%Buffer,Kernel%]CommandQueue.AddWaitAll(sequence of MarkerQueue)
Добавляет ожидание сигнала выполненности от всех заданных маркеров

# [%Buffer,Kernel%]CommandQueue.AddWaitAny(array of MarkerQueue)
# [%Buffer,Kernel%]CommandQueue.AddWaitAny(sequence of MarkerQueue)
Добавляет ожидание первого сигнала выполненности от одного из заданных маркеров


