
# b:offset_def
offset указывает отступ в буфере в байтах

# b:pos_len_def
%b:offset_def%
len указывает длину области буфера в байтах, которая будет задействована



# class-B
Представляет область памяти GPU



# b.ctor
Создаёт буфер указанного размера в байтах
Память на GPU не выделяется, до вызова метода .Init

# b.ctorС
Создаёт буфер указанного размера в байтах
Память на выделяется сразу, при этом контекст указывает на каком устройстве надо выделять память



# b.Init
Выделяет память на устройстве, указанном в контексте
Если память уже была выделена - она освобождается и выделяется заново

# b.Dispose
Освобождает память GPU, если она была выделена
Если снова использовать данный буфер - память выделится заново



# b.Size
Возвращает размер буфера в байтах

# b.SubBuff
Создаёт новый буфер, не имеющий своей памяти
Вместо этого он будет использовать участок памяти данного буфера
Если память данного буфера не была выделена до вызова .SubBuff - она выделяется в Context.Default

# b.Parent
Если данный буфер создан методом .SubBuff - возвращает родительский буфер
Иначе возвращает nil

# b.NewQueue
Создаёт новую очередь, к которой можно добавлять команды для GPU, из данного буфера



# b.WriteData
Копирует область из оперативной памяти по адресу ptr в память буфера

# b.WriteArray
Копирует данные из содержимого массива в память буфера

# b.WriteValue
Копирует содержимое val в память буфера



# b.ReadData
Копирует область памяти из буфера в оперативную память по адресу ptr

# b.ReadArray
Копирует данные из памяти буфера в содержимое массива

# b.ReadValue
Копирует память буфера в содержимое val



# b.FillData
Заполняет буфер копиями паттерна из оперативной памяти по адресу ptr и длинной pattern_len байт

# b.FillArray
Заполняет буфер копиями содержимого массива

# b.FillValue
Заполняет буфер копиями значения val



# b.CopyFrom
Копирует память из буфера b в текущий

# b.CopyTo
Копирует память из текущего буфера в b

# b.CopyFromL
Копирует память из буфера b в текущий
from указывает отступ в буфере b
to указывает отступ в текущем буфере
len указывает кол-во байт которые надо скопировать

# b.CopyToL
Копирует память из текущего буфера в b
from указывает отступ в текущем буфере
to указывает отступ в буфере b
len указывает кол-во байт которые надо скопировать



# b.GetData
Выделяет область неуправляемой памяти и копирует в неё содержимое буфера

# b.GetArray
Создаёт новый массив указанного типа с размерами (исчисляемых в элементах, НЕ байтах) szs и копирует в него содержимое буфера

# b.GetArray1
Создаёт новый массив длиной в length элементов и копирует в него содержимое буфера
# b.GetArray2
Создаёт новый 2-мерный массив размером length1*length2 элементов и копирует в него содержимое буфера
# b.GetArray3
Создаёт новый 3-мерный массив размером length1*length2*length3 элементов и копирует в него содержимое буфера

# b.GetValue
Читает из буфера значение указанного размерного типа


