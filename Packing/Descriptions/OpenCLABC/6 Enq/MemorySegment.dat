


# MemorySegment:OffsetDef
mem_offset указывает отступ от начала области памяти, в байтах
# MemorySegment:LenDef
len указывает кол-во задействованных в операции байт

# MemorySegment:ArrOffsetDef
a_offset(-ы) указывают индекс в массиве
# MemorySegment:ArrLenDef
len указывает кол-во задействованных элементов массива

# MemorySegment:ArrOffsetWarning
ВНИМАНИЕ! У многомерных массивов элементы распологаются так же как у одномерных, разделение на строки виртуально
Это значит что, к примеру, чтение 4 элементов 2-х мерного массива начиная с индекса [0,1]
прочитает элементы [0,1], [0,2], [1,0], [1,1]. Для чтения частей из нескольких строк массива - делайте несколько операций чтения, по 1 на строку



# MemorySegment.WriteData(CommandQueue<IntPtr>)
# MemorySegment.WriteData(pointer)
# MemorySegmentCCQ.AddWriteData(CommandQueue<IntPtr>)
# MemorySegmentCCQ.AddWriteData(pointer)
Заполняет всю область памяти данными, находящимися по указанному адресу в RAM
# MemorySegment.ReadData(CommandQueue<IntPtr>)
# MemorySegment.ReadData(pointer)
# MemorySegmentCCQ.AddReadData(CommandQueue<IntPtr>)
# MemorySegmentCCQ.AddReadData(pointer)
Читает всё содержимое области памяти в RAM, по указанному адресу

# MemorySegment.WriteData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.WriteData(pointer, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteData(pointer, CommandQueue<integer>, CommandQueue<integer>)
Заполняет часть области памяти данными, находящимися по указанному адресу в RAM
%MemorySegment:OffsetDef%
%MemorySegment:LenDef%
# MemorySegment.ReadData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.ReadData(pointer, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadData(pointer, CommandQueue<integer>, CommandQueue<integer>)
Читает часть содержимого области памяти в RAM, по указанному адресу
%MemorySegment:OffsetDef%
%MemorySegment:LenDef%



# MemorySegment.WriteValue<TRecord>(TRecord)
# MemorySegment.WriteValue<TRecord>(CommandQueue<TRecord>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(TRecord)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<TRecord>)
# MemorySegment.WriteValue<TRecord>(NativeValue<TRecord>)
# MemorySegment.WriteValue<TRecord>(CommandQueue<NativeValue<TRecord>>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(NativeValue<TRecord>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<NativeValue<TRecord>>)
Записывает указанное значение размерного типа в начало области памяти

# MemorySegment.ReadValue<TRecord>(NativeValue<TRecord>)
# MemorySegment.ReadValue<TRecord>(CommandQueue<NativeValue<TRecord>>)
# MemorySegmentCCQ.AddReadValue<TRecord>(NativeValue<TRecord>)
# MemorySegmentCCQ.AddReadValue<TRecord>(CommandQueue<NativeValue<TRecord>>)
Читает значение размерного типа из начала области памяти в указанное значение

# MemorySegment.WriteValue<TRecord>(TRecord, CommandQueue<integer>)
# MemorySegment.WriteValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(TRecord, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>)
# MemorySegment.WriteValue<TRecord>(NativeValue<TRecord>, CommandQueue<integer>)
# MemorySegment.WriteValue<TRecord>(CommandQueue<NativeValue<TRecord>>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(NativeValue<TRecord>, CommandQueue<integer>)
# MemorySegmentCCQ.AddWriteValue<TRecord>(CommandQueue<NativeValue<TRecord>>, CommandQueue<integer>)
Записывает указанное значение размерного типа в области памяти
%MemorySegment:OffsetDef%

# MemorySegment.ReadValue<TRecord>(NativeValue<TRecord>, CommandQueue<integer>)
# MemorySegment.ReadValue<TRecord>(CommandQueue<NativeValue<TRecord>>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadValue<TRecord>(NativeValue<TRecord>, CommandQueue<integer>)
# MemorySegmentCCQ.AddReadValue<TRecord>(CommandQueue<NativeValue<TRecord>>, CommandQueue<integer>)
Читает значение размерного типа из области памяти в указанное значение
%MemorySegment:OffsetDef%



# MemorySegment[%.,CCQ.Add%]WriteArray1<TRecord>([% array of TRecord , CommandQueue<array of TRecord> %])
# MemorySegment[%.,CCQ.Add%]WriteArray2<TRecord>([% array[\,] of TRecord , CommandQueue<array[\,] of TRecord> %])
# MemorySegment[%.,CCQ.Add%]WriteArray3<TRecord>([% array[\,\,] of TRecord , CommandQueue<array[\,\,] of TRecord> %])
Записывает весь массив в начало области памяти

# MemorySegment[%.,CCQ.Add%]ReadArray1<TRecord>([% array of TRecord , CommandQueue<array of TRecord> %])
# MemorySegment[%.,CCQ.Add%]ReadArray2<TRecord>([% array[\,] of TRecord , CommandQueue<array[\,] of TRecord> %])
# MemorySegment[%.,CCQ.Add%]ReadArray3<TRecord>([% array[\,\,] of TRecord , CommandQueue<array[\,\,] of TRecord> %])
Читает из области памяти достаточно байт чтоб заполнить весь массив

# MemorySegment[%.,CCQ.Add%]WriteArray1<TRecord>([% array of TRecord , CommandQueue<array of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment:WriteArrayDef
Записывает указанный участок массива в область памяти
%MemorySegment:ArrOffsetDef%
%MemorySegment:ArrLenDef%
%MemorySegment:OffsetDef%

# MemorySegment[%.,CCQ.Add%]ReadArray1<TRecord>([% array of TRecord , CommandQueue<array of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment:ReadArrayDef
Читает данные из области памяти в указанный участок массива
%MemorySegment:ArrOffsetDef%
%MemorySegment:ArrLenDef%
%MemorySegment:OffsetDef%

# MemorySegment[%.,CCQ.Add%]WriteArray2<TRecord>([% array[\,] of TRecord , CommandQueue<array[\,] of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment[%.,CCQ.Add%]WriteArray3<TRecord>([% array[\,\,] of TRecord , CommandQueue<array[\,\,] of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:WriteArrayDef%

%MemorySegment:ArrOffsetWarning%

# MemorySegment[%.,CCQ.Add%]ReadArray2<TRecord>([% array[\,] of TRecord , CommandQueue<array[\,] of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment[%.,CCQ.Add%]ReadArray3<TRecord>([% array[\,\,] of TRecord , CommandQueue<array[\,\,] of TRecord> %], CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:ReadArrayDef%

%MemorySegment:ArrOffsetWarning%



# MemorySegment.FillData(CommandQueue<IntPtr>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillData(CommandQueue<IntPtr>, CommandQueue<integer>)
Читает pattern_len байт из RAM по указанному адресу и заполняет их копиями всю область памяти

# MemorySegment.FillData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillData(CommandQueue<IntPtr>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
Читает pattern_len байт из RAM по указанному адресу и заполняет их копиями часть области памяти
%MemorySegment:OffsetDef%
%MemorySegment:LenDef%



# MemorySegment.FillValue<TRecord>(TRecord)
# MemorySegment.FillValue<TRecord>(CommandQueue<TRecord>)
# MemorySegmentCCQ.AddFillValue<TRecord>(TRecord)
# MemorySegmentCCQ.AddFillValue<TRecord>(CommandQueue<TRecord>)
Заполняет всю область памяти копиями указанного значения размерного типа

# MemorySegment.FillValue<TRecord>(TRecord, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.FillValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillValue<TRecord>(TRecord, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillValue<TRecord>(CommandQueue<TRecord>, CommandQueue<integer>, CommandQueue<integer>)
Заполняет часть области памяти копиями указанного значения размерного типа
%MemorySegment:OffsetDef%
%MemorySegment:LenDef%



# MemorySegment.FillArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegment.FillArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegment.FillArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
# MemorySegmentCCQ.AddFillArray1<TRecord>(CommandQueue<array of TRecord>)
# MemorySegmentCCQ.AddFillArray2<TRecord>(CommandQueue<array[,] of TRecord>)
# MemorySegmentCCQ.AddFillArray3<TRecord>(CommandQueue<array[,,] of TRecord>)
Заполняет всю область памяти копиями указанного массива

# MemorySegment.FillArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillArray1<TRecord>(CommandQueue<array of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment:FillArrayDef
Заполняет часть области памяти копиями части указанного массива
%MemorySegment:ArrOffsetDef%
pattern_%MemorySegment:ArrLenDef%
%MemorySegment:LenDef%
%MemorySegment:OffsetDef%

# MemorySegment.FillArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.FillArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillArray2<TRecord>(CommandQueue<array[,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddFillArray3<TRecord>(CommandQueue<array[,,] of TRecord>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:FillArrayDef%

%MemorySegment:ArrOffsetWarning%



# MemorySegment:CopyToDef
Копирует данные из текущей области памяти в mem
# MemorySegment:CopyFromDef
Копирует данные из mem в текущюу область памяти

# MemorySegment.Copy[%dir:From,To%](CommandQueue<MemorySegment>)
# MemorySegmentCCQ.AddCopy[%dir:From,To%](CommandQueue<MemorySegment>)
%MemorySegment:Copy{%dir%}Def%
Если области памяти имеют разный размер - в качестве объёма данных берётся размер меньшей области

# MemorySegment.Copy[%dir:From,To%](CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddCopy[%dir:From,To%](CommandQueue<MemorySegment>, CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
%MemorySegment:Copy{%dir%}Def%
from_pos указывает отступ в байтах от начала области памяти, из которой копируют
to_pos указывает отступ в байтах от начала области памяти, в которую копируют
len указывает кол-во копируемых байт



# MemorySegment.GetData
# MemorySegmentCCQ.AddGetData
Выделяет область неуправляемой памяти и копирует в неё всё содержимое данной области памяти

# MemorySegment.GetData(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetData(CommandQueue<integer>, CommandQueue<integer>)
Выделяет область неуправляемой памяти и копирует в неё часть содержимого данной области памяти
%MemorySegment:OffsetDef%
%MemorySegment:LenDef%



# MemorySegment.GetValue<TRecord>
# MemorySegmentCCQ.AddGetValue<TRecord>
Читает значение указанного размерного типа из начала области памяти

# MemorySegment.GetValue<TRecord>(CommandQueue<integer>)
# MemorySegmentCCQ.AddGetValue<TRecord>(CommandQueue<integer>)
Читает значение указанного размерного типа из области памяти
%MemorySegment:OffsetDef%



# MemorySegment.GetArray1<TRecord>
# MemorySegmentCCQ.AddGetArray1<TRecord>
Читает массив максимального размера, на сколько хватит байт данной области памяти

# MemorySegment.GetArray1<TRecord>(CommandQueue<integer>)
# MemorySegment.GetArray2<TRecord>(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegment.GetArray3<TRecord>(CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray1<TRecord>(CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray2<TRecord>(CommandQueue<integer>, CommandQueue<integer>)
# MemorySegmentCCQ.AddGetArray3<TRecord>(CommandQueue<integer>, CommandQueue<integer>, CommandQueue<integer>)
Создаёт массив с указанным кол-вом элементов и копирует в него содержимое данный области памяти


