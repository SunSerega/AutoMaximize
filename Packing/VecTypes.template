
  +AHsAJA-region Vec+AH0-
  
  +AHsAJA-region Vec1+AH0-
  
  Vec1b +AD0- record
    public val0: SByte+ADs-
    
    public constructor(val0: SByte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): SByte+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: SByte)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: SByte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1b): Vec1b :+AD0- new Vec1b(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1b+ADs- k: SByte): Vec1b :+AD0- new Vec1b(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1b): Vec1b :+AD0- new Vec1b(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1b): Vec1b :+AD0- new Vec1b(v1.val0-v2.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1b+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1ub +AD0- record
    public val0: Byte+ADs-
    
    public constructor(val0: Byte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Byte+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Byte)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Byte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec1ub+ADs- k: Byte): Vec1ub :+AD0- new Vec1ub(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1ub): Vec1ub :+AD0- new Vec1ub(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1ub): Vec1ub :+AD0- new Vec1ub(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    public static function operator implicit(v: Vec1ub): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1ub+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1s +AD0- record
    public val0: Int16+ADs-
    
    public constructor(val0: Int16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int16+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int16)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1s): Vec1s :+AD0- new Vec1s(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1s+ADs- k: Int16): Vec1s :+AD0- new Vec1s(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1s): Vec1s :+AD0- new Vec1s(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1s): Vec1s :+AD0- new Vec1s(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    public static function operator implicit(v: Vec1s): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    public static function operator implicit(v: Vec1s): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1s+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1us +AD0- record
    public val0: UInt16+ADs-
    
    public constructor(val0: UInt16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt16+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt16)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec1us+ADs- k: UInt16): Vec1us :+AD0- new Vec1us(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1us): Vec1us :+AD0- new Vec1us(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1us): Vec1us :+AD0- new Vec1us(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    public static function operator implicit(v: Vec1us): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    public static function operator implicit(v: Vec1us): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    public static function operator implicit(v: Vec1us): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1us+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1i +AD0- record
    public val0: Int32+ADs-
    
    public constructor(val0: Int32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int32+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int32)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1i): Vec1i :+AD0- new Vec1i(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1i+ADs- k: Int32): Vec1i :+AD0- new Vec1i(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1i): Vec1i :+AD0- new Vec1i(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1i): Vec1i :+AD0- new Vec1i(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    public static function operator implicit(v: Vec1i): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    public static function operator implicit(v: Vec1i): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    public static function operator implicit(v: Vec1i): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    public static function operator implicit(v: Vec1i): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1i+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1ui +AD0- record
    public val0: UInt32+ADs-
    
    public constructor(val0: UInt32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt32+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt32)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec1ui+ADs- k: UInt32): Vec1ui :+AD0- new Vec1ui(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1ui): Vec1ui :+AD0- new Vec1ui(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1ui): Vec1ui :+AD0- new Vec1ui(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1ui+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1i64 +AD0- record
    public val0: Int64+ADs-
    
    public constructor(val0: Int64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int64+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int64)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1i64): Vec1i64 :+AD0- new Vec1i64(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1i64+ADs- k: Int64): Vec1i64 :+AD0- new Vec1i64(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1i64): Vec1i64 :+AD0- new Vec1i64(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1i64): Vec1i64 :+AD0- new Vec1i64(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    public static function operator implicit(v: Vec1i64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1i64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1ui64 +AD0- record
    public val0: UInt64+ADs-
    
    public constructor(val0: UInt64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt64+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt64)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec1ui64+ADs- k: UInt64): Vec1ui64 :+AD0- new Vec1ui64(v.val0+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec1ui64): Vec1ui64 :+AD0- new Vec1ui64(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1ui64): Vec1ui64 :+AD0- new Vec1ui64(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    public static function operator implicit(v: Vec1ui64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1ui64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1f +AD0- record
    public val0: single+ADs-
    
    public constructor(val0: single)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): single+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: single)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: single read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1f): Vec1f :+AD0- new Vec1f(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1f+ADs- k: single): Vec1f :+AD0- new Vec1f(v.val0+ACo-k)+ADs-
    public static function operator/(v: Vec1f+ADs- k: single): Vec1f :+AD0- new Vec1f(v.val0/k)+ADs-
    public static function operator+-(v1, v2: Vec1f): Vec1f :+AD0- new Vec1f(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1f): Vec1f :+AD0- new Vec1f(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    public static function operator implicit(v: Vec1f): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0+ADs-
    
    public function Normalized :+AD0- self / single(Sqrt(self.SqrLength+AF8-d))+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1f+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec1d +AD0- record
    public val0: double+ADs-
    
    public constructor(val0: double)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): double+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: double)+ADs-
    begin
      if cardinal(i) +AD4- 0 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..0')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: double read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec1d): Vec1d :+AD0- new Vec1d(-v.val0)+ADs-
    public static function operator+ACo-(v: Vec1d+ADs- k: double): Vec1d :+AD0- new Vec1d(v.val0+ACo-k)+ADs-
    public static function operator/(v: Vec1d+ADs- k: double): Vec1d :+AD0- new Vec1d(v.val0/k)+ADs-
    public static function operator+-(v1, v2: Vec1d): Vec1d :+AD0- new Vec1d(v1.val0+-v2.val0)+ADs-
    public static function operator-(v1, v2: Vec1d): Vec1d :+AD0- new Vec1d(v1.val0-v2.val0)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    public static function operator implicit(v: Vec1d): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0+ADs-
    
    public function Normalized :+AD0- self / Sqrt(self.SqrLength)+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec1d+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  +AHsAJA-endregion Vec1+AH0-
  
  +AHsAJA-region Vec2+AH0-
  
  Vec2b +AD0- record
    public val0: SByte+ADs-
    public val1: SByte+ADs-
    
    public constructor(val0, val1: SByte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): SByte+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: SByte)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: SByte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2b): Vec2b :+AD0- new Vec2b(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2b+ADs- k: SByte): Vec2b :+AD0- new Vec2b(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2b): Vec2b :+AD0- new Vec2b(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2b): Vec2b :+AD0- new Vec2b(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2b :+AD0- new Vec2b(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2b): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2b+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2ub +AD0- record
    public val0: Byte+ADs-
    public val1: Byte+ADs-
    
    public constructor(val0, val1: Byte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Byte+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Byte)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Byte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec2ub+ADs- k: Byte): Vec2ub :+AD0- new Vec2ub(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2ub): Vec2ub :+AD0- new Vec2ub(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2ub): Vec2ub :+AD0- new Vec2ub(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2ub :+AD0- new Vec2ub(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ub): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ub): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2ub+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2s +AD0- record
    public val0: Int16+ADs-
    public val1: Int16+ADs-
    
    public constructor(val0, val1: Int16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int16+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int16)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2s): Vec2s :+AD0- new Vec2s(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2s+ADs- k: Int16): Vec2s :+AD0- new Vec2s(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2s): Vec2s :+AD0- new Vec2s(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2s): Vec2s :+AD0- new Vec2s(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2s :+AD0- new Vec2s(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2s): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2s): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2s): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2s+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2us +AD0- record
    public val0: UInt16+ADs-
    public val1: UInt16+ADs-
    
    public constructor(val0, val1: UInt16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt16+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt16)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec2us+ADs- k: UInt16): Vec2us :+AD0- new Vec2us(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2us): Vec2us :+AD0- new Vec2us(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2us): Vec2us :+AD0- new Vec2us(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2us :+AD0- new Vec2us(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2us): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2us): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2us): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2us): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2us+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2i +AD0- record
    public val0: Int32+ADs-
    public val1: Int32+ADs-
    
    public constructor(val0, val1: Int32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int32+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int32)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2i): Vec2i :+AD0- new Vec2i(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2i+ADs- k: Int32): Vec2i :+AD0- new Vec2i(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2i): Vec2i :+AD0- new Vec2i(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2i): Vec2i :+AD0- new Vec2i(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2i :+AD0- new Vec2i(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2i): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2i+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2ui +AD0- record
    public val0: UInt32+ADs-
    public val1: UInt32+ADs-
    
    public constructor(val0, val1: UInt32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt32+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt32)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec2ui+ADs- k: UInt32): Vec2ui :+AD0- new Vec2ui(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2ui): Vec2ui :+AD0- new Vec2ui(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2ui): Vec2ui :+AD0- new Vec2ui(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2ui :+AD0- new Vec2ui(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ui): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2ui+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2i64 +AD0- record
    public val0: Int64+ADs-
    public val1: Int64+ADs-
    
    public constructor(val0, val1: Int64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int64+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int64)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2i64): Vec2i64 :+AD0- new Vec2i64(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2i64+ADs- k: Int64): Vec2i64 :+AD0- new Vec2i64(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2i64): Vec2i64 :+AD0- new Vec2i64(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2i64): Vec2i64 :+AD0- new Vec2i64(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2i64 :+AD0- new Vec2i64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2i64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2i64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2i64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2ui64 +AD0- record
    public val0: UInt64+ADs-
    public val1: UInt64+ADs-
    
    public constructor(val0, val1: UInt64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt64+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt64)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec2ui64+ADs- k: UInt64): Vec2ui64 :+AD0- new Vec2ui64(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec2ui64): Vec2ui64 :+AD0- new Vec2ui64(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2ui64): Vec2ui64 :+AD0- new Vec2ui64(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), 0)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2ui64): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2ui64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2f +AD0- record
    public val0: single+ADs-
    public val1: single+ADs-
    
    public constructor(val0, val1: single)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): single+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: single)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: single read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2f): Vec2f :+AD0- new Vec2f(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2f+ADs- k: single): Vec2f :+AD0- new Vec2f(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator/(v: Vec2f+ADs- k: single): Vec2f :+AD0- new Vec2f(v.val0/k, v.val1/k)+ADs-
    public static function operator+-(v1, v2: Vec2f): Vec2f :+AD0- new Vec2f(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2f): Vec2f :+AD0- new Vec2f(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2f :+AD0- new Vec2f(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2f): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2f): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1+ADs-
    
    public function Normalized :+AD0- self / single(Sqrt(self.SqrLength+AF8-d))+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2f+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec2d +AD0- record
    public val0: double+ADs-
    public val1: double+ADs-
    
    public constructor(val0, val1: double)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): double+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: double)+ADs-
    begin
      if cardinal(i) +AD4- 1 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..1')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: double read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec2d): Vec2d :+AD0- new Vec2d(-v.val0, -v.val1)+ADs-
    public static function operator+ACo-(v: Vec2d+ADs- k: double): Vec2d :+AD0- new Vec2d(v.val0+ACo-k, v.val1+ACo-k)+ADs-
    public static function operator/(v: Vec2d+ADs- k: double): Vec2d :+AD0- new Vec2d(v.val0/k, v.val1/k)+ADs-
    public static function operator+-(v1, v2: Vec2d): Vec2d :+AD0- new Vec2d(v1.val0+-v2.val0, v1.val1+-v2.val1)+ADs-
    public static function operator-(v1, v2: Vec2d): Vec2d :+AD0- new Vec2d(v1.val0-v2.val0, v1.val1-v2.val1)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec2d :+AD0- new Vec2d(v.val0, 0)+ADs-
    public static function operator implicit(v: Vec2d): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2f): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    public static function operator implicit(v: Vec2d): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1+ADs-
    
    public function Normalized :+AD0- self / Sqrt(self.SqrLength)+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec2d+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  +AHsAJA-endregion Vec2+AH0-
  
  +AHsAJA-region Vec3+AH0-
  
  Vec3b +AD0- record
    public val0: SByte+ADs-
    public val1: SByte+ADs-
    public val2: SByte+ADs-
    
    public constructor(val0, val1, val2: SByte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): SByte+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: SByte)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: SByte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3b): Vec3b :+AD0- new Vec3b(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3b+ADs- k: SByte): Vec3b :+AD0- new Vec3b(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3b): Vec3b :+AD0- new Vec3b(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3b): Vec3b :+AD0- new Vec3b(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3b :+AD0- new Vec3b(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3b): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3b+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3ub +AD0- record
    public val0: Byte+ADs-
    public val1: Byte+ADs-
    public val2: Byte+ADs-
    
    public constructor(val0, val1, val2: Byte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Byte+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Byte)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Byte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec3ub+ADs- k: Byte): Vec3ub :+AD0- new Vec3ub(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3ub): Vec3ub :+AD0- new Vec3ub(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3ub): Vec3ub :+AD0- new Vec3ub(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3ub :+AD0- new Vec3ub(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ub): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ub): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3ub+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3s +AD0- record
    public val0: Int16+ADs-
    public val1: Int16+ADs-
    public val2: Int16+ADs-
    
    public constructor(val0, val1, val2: Int16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int16+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int16)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3s): Vec3s :+AD0- new Vec3s(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3s+ADs- k: Int16): Vec3s :+AD0- new Vec3s(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3s): Vec3s :+AD0- new Vec3s(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3s): Vec3s :+AD0- new Vec3s(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3s :+AD0- new Vec3s(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3s): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3s): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3s): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3s+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3us +AD0- record
    public val0: UInt16+ADs-
    public val1: UInt16+ADs-
    public val2: UInt16+ADs-
    
    public constructor(val0, val1, val2: UInt16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt16+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt16)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec3us+ADs- k: UInt16): Vec3us :+AD0- new Vec3us(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3us): Vec3us :+AD0- new Vec3us(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3us): Vec3us :+AD0- new Vec3us(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3us :+AD0- new Vec3us(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3us): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3us): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3us): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3us): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3us+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3i +AD0- record
    public val0: Int32+ADs-
    public val1: Int32+ADs-
    public val2: Int32+ADs-
    
    public constructor(val0, val1, val2: Int32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int32+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int32)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3i): Vec3i :+AD0- new Vec3i(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3i+ADs- k: Int32): Vec3i :+AD0- new Vec3i(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3i): Vec3i :+AD0- new Vec3i(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3i): Vec3i :+AD0- new Vec3i(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3i :+AD0- new Vec3i(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3i): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3i+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3ui +AD0- record
    public val0: UInt32+ADs-
    public val1: UInt32+ADs-
    public val2: UInt32+ADs-
    
    public constructor(val0, val1, val2: UInt32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt32+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt32)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec3ui+ADs- k: UInt32): Vec3ui :+AD0- new Vec3ui(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3ui): Vec3ui :+AD0- new Vec3ui(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3ui): Vec3ui :+AD0- new Vec3ui(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3ui :+AD0- new Vec3ui(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ui): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3ui+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3i64 +AD0- record
    public val0: Int64+ADs-
    public val1: Int64+ADs-
    public val2: Int64+ADs-
    
    public constructor(val0, val1, val2: Int64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int64+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int64)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3i64): Vec3i64 :+AD0- new Vec3i64(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3i64+ADs- k: Int64): Vec3i64 :+AD0- new Vec3i64(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3i64): Vec3i64 :+AD0- new Vec3i64(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3i64): Vec3i64 :+AD0- new Vec3i64(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3i64 :+AD0- new Vec3i64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3i64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3i64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3i64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3ui64 +AD0- record
    public val0: UInt64+ADs-
    public val1: UInt64+ADs-
    public val2: UInt64+ADs-
    
    public constructor(val0, val1, val2: UInt64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt64+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt64)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec3ui64+ADs- k: UInt64): Vec3ui64 :+AD0- new Vec3ui64(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec3ui64): Vec3ui64 :+AD0- new Vec3ui64(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3ui64): Vec3ui64 :+AD0- new Vec3ui64(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), 0, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), 0)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3ui64): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3ui64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3f +AD0- record
    public val0: single+ADs-
    public val1: single+ADs-
    public val2: single+ADs-
    
    public constructor(val0, val1, val2: single)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): single+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: single)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: single read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3f): Vec3f :+AD0- new Vec3f(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3f+ADs- k: single): Vec3f :+AD0- new Vec3f(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator/(v: Vec3f+ADs- k: single): Vec3f :+AD0- new Vec3f(v.val0/k, v.val1/k, v.val2/k)+ADs-
    public static function operator+-(v1, v2: Vec3f): Vec3f :+AD0- new Vec3f(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3f): Vec3f :+AD0- new Vec3f(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3f :+AD0- new Vec3f(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3f :+AD0- new Vec3f(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3f): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3f): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2))+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2+ADs-
    
    public function Normalized :+AD0- self / single(Sqrt(self.SqrLength+AF8-d))+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3f+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec3d +AD0- record
    public val0: double+ADs-
    public val1: double+ADs-
    public val2: double+ADs-
    
    public constructor(val0, val1, val2: double)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): double+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: double)+ADs-
    begin
      if cardinal(i) +AD4- 2 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..2')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: double read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec3d): Vec3d :+AD0- new Vec3d(-v.val0, -v.val1, -v.val2)+ADs-
    public static function operator+ACo-(v: Vec3d+ADs- k: double): Vec3d :+AD0- new Vec3d(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k)+ADs-
    public static function operator/(v: Vec3d+ADs- k: double): Vec3d :+AD0- new Vec3d(v.val0/k, v.val1/k, v.val2/k)+ADs-
    public static function operator+-(v1, v2: Vec3d): Vec3d :+AD0- new Vec3d(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2)+ADs-
    public static function operator-(v1, v2: Vec3d): Vec3d :+AD0- new Vec3d(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec3d :+AD0- new Vec3d(v.val0, 0, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2f): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec3d :+AD0- new Vec3d(v.val0, v.val1, 0)+ADs-
    public static function operator implicit(v: Vec3d): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3s): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3us): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3f): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    public static function operator implicit(v: Vec3d): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2+ADs-
    
    public function Normalized :+AD0- self / Sqrt(self.SqrLength)+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec3d+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  +AHsAJA-endregion Vec3+AH0-
  
  +AHsAJA-region Vec4+AH0-
  
  Vec4b +AD0- record
    public val0: SByte+ADs-
    public val1: SByte+ADs-
    public val2: SByte+ADs-
    public val3: SByte+ADs-
    
    public constructor(val0, val1, val2, val3: SByte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): SByte+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: SByte)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-SByte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: SByte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4b): Vec4b :+AD0- new Vec4b(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4b+ADs- k: SByte): Vec4b :+AD0- new Vec4b(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4b): Vec4b :+AD0- new Vec4b(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4b): Vec4b :+AD0- new Vec4b(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4b :+AD0- new Vec4b(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4b): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4b+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4ub +AD0- record
    public val0: Byte+ADs-
    public val1: Byte+ADs-
    public val2: Byte+ADs-
    public val3: Byte+ADs-
    
    public constructor(val0, val1, val2, val3: Byte)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Byte+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Byte)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Byte :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-1 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Byte read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec4ub+ADs- k: Byte): Vec4ub :+AD0- new Vec4ub(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4ub): Vec4ub :+AD0- new Vec4ub(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4ub): Vec4ub :+AD0- new Vec4ub(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4ub :+AD0- new Vec4ub(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ub): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ub): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4ub+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4s +AD0- record
    public val0: Int16+ADs-
    public val1: Int16+ADs-
    public val2: Int16+ADs-
    public val3: Int16+ADs-
    
    public constructor(val0, val1, val2, val3: Int16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int16+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int16)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4s): Vec4s :+AD0- new Vec4s(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4s+ADs- k: Int16): Vec4s :+AD0- new Vec4s(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4s): Vec4s :+AD0- new Vec4s(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4s): Vec4s :+AD0- new Vec4s(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4s :+AD0- new Vec4s(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4s): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4s): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4s): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4s+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4us +AD0- record
    public val0: UInt16+ADs-
    public val1: UInt16+ADs-
    public val2: UInt16+ADs-
    public val3: UInt16+ADs-
    
    public constructor(val0, val1, val2, val3: UInt16)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt16+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt16)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt16 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-2 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt16 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec4us+ADs- k: UInt16): Vec4us :+AD0- new Vec4us(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4us): Vec4us :+AD0- new Vec4us(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4us): Vec4us :+AD0- new Vec4us(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4us :+AD0- new Vec4us(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4us): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4us): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4us): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4us): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4us+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4i +AD0- record
    public val0: Int32+ADs-
    public val1: Int32+ADs-
    public val2: Int32+ADs-
    public val3: Int32+ADs-
    
    public constructor(val0, val1, val2, val3: Int32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int32+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int32)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4i): Vec4i :+AD0- new Vec4i(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4i+ADs- k: Int32): Vec4i :+AD0- new Vec4i(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4i): Vec4i :+AD0- new Vec4i(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4i): Vec4i :+AD0- new Vec4i(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4i :+AD0- new Vec4i(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4i): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4i+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4ui +AD0- record
    public val0: UInt32+ADs-
    public val1: UInt32+ADs-
    public val2: UInt32+ADs-
    public val3: UInt32+ADs-
    
    public constructor(val0, val1, val2, val3: UInt32)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt32+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt32)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt32 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt32 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec4ui+ADs- k: UInt32): Vec4ui :+AD0- new Vec4ui(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4ui): Vec4ui :+AD0- new Vec4ui(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4ui): Vec4ui :+AD0- new Vec4ui(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4ui :+AD0- new Vec4ui(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ui): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4i): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4ui+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4i64 +AD0- record
    public val0: Int64+ADs-
    public val1: Int64+ADs-
    public val2: Int64+ADs-
    public val3: Int64+ADs-
    
    public constructor(val0, val1, val2, val3: Int64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): Int64+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: Int64)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-Int64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: Int64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4i64): Vec4i64 :+AD0- new Vec4i64(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4i64+ADs- k: Int64): Vec4i64 :+AD0- new Vec4i64(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4i64): Vec4i64 :+AD0- new Vec4i64(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4i64): Vec4i64 :+AD0- new Vec4i64(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4i64 :+AD0- new Vec4i64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4i64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4i): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ui): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4i64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4i64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4ui64 +AD0- record
    public val0: UInt64+ADs-
    public val1: UInt64+ADs-
    public val2: UInt64+ADs-
    public val3: UInt64+ADs-
    
    public constructor(val0, val1, val2, val3: UInt64)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): UInt64+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: UInt64)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-UInt64 :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-8 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: UInt64 read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator+ACo-(v: Vec4ui64+ADs- k: UInt64): Vec4ui64 :+AD0- new Vec4ui64(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator+-(v1, v2: Vec4ui64): Vec4ui64 :+AD0- new Vec4ui64(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4ui64): Vec4ui64 :+AD0- new Vec4ui64(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1b :+AD0- new Vec1b(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1ub :+AD0- new Vec1ub(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1s :+AD0- new Vec1s(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1us :+AD0- new Vec1us(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1i :+AD0- new Vec1i(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1ui :+AD0- new Vec1ui(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1i64 :+AD0- new Vec1i64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1ui64 :+AD0- new Vec1ui64(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2b :+AD0- new Vec2b(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2ub :+AD0- new Vec2ub(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2s :+AD0- new Vec2s(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2us :+AD0- new Vec2us(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2i :+AD0- new Vec2i(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2ui :+AD0- new Vec2ui(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2i64 :+AD0- new Vec2i64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2ui64 :+AD0- new Vec2ui64(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), 0, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3b :+AD0- new Vec3b(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3ub :+AD0- new Vec3ub(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3s :+AD0- new Vec3s(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3us :+AD0- new Vec3us(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3i :+AD0- new Vec3i(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3ui :+AD0- new Vec3ui(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3i64 :+AD0- new Vec3i64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3ui64 :+AD0- new Vec3ui64(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2), 0)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4b :+AD0- new Vec4b(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4ub :+AD0- new Vec4ub(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4s :+AD0- new Vec4s(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4us :+AD0- new Vec4us(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4i): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4i :+AD0- new Vec4i(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4ui): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4ui :+AD0- new Vec4ui(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public static function operator implicit(v: Vec4i64): Vec4ui64 :+AD0- new Vec4ui64(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4ui64): Vec4i64 :+AD0- new Vec4i64(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4ui64+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4f +AD0- record
    public val0: single+ADs-
    public val1: single+ADs-
    public val2: single+ADs-
    public val3: single+ADs-
    
    public constructor(val0, val1, val2, val3: single)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): single+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: single)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-single :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: single read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4f): Vec4f :+AD0- new Vec4f(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4f+ADs- k: single): Vec4f :+AD0- new Vec4f(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator/(v: Vec4f+ADs- k: single): Vec4f :+AD0- new Vec4f(v.val0/k, v.val1/k, v.val2/k, v.val3/k)+ADs-
    public static function operator+-(v1, v2: Vec4f): Vec4f :+AD0- new Vec4f(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4f): Vec4f :+AD0- new Vec4f(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4f :+AD0- new Vec4f(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4f :+AD0- new Vec4f(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4f): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2), Convert.ToSByte(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2), Convert.ToByte(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2), Convert.ToInt16(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2), Convert.ToUInt16(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4i): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2), Convert.ToInt32(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ui): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2), Convert.ToUInt32(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4i64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2), Convert.ToInt64(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ui64): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4f): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2), Convert.ToUInt64(v.val3))+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function SqrLength+AF8-d: double :+AD0- real(val0)+ACo-val0 +- real(val1)+ACo-val1 +- real(val2)+ACo-val2 +- real(val3)+ACo-val3+ADs-
    
    public function Normalized :+AD0- self / single(Sqrt(self.SqrLength+AF8-d))+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4f+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  Vec4d +AD0- record
    public val0: double+ADs-
    public val1: double+ADs-
    public val2: double+ADs-
    public val3: double+ADs-
    
    public constructor(val0, val1, val2, val3: double)+ADs-
    begin
      self.val0 :+AD0- val0+ADs-
      self.val1 :+AD0- val1+ADs-
      self.val2 :+AD0- val2+ADs-
      self.val3 :+AD0- val3+ADs-
    end+ADs-
    
    private function GetValAt(i: integer): double+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      Result :+AD0- ptr+AF4AOw-
    end+ADs-
    private procedure SetValAt(i: integer+ADs- val: double)+ADs-
    begin
      if cardinal(i) +AD4- 3 then raise new IndexOutOfRangeException('+BBgEPQQ0BDUEOgRB- +BDQEPgQ7BDYENQQ9- +BDgEPAQ1BEIETA- +BDcEPQQwBEcENQQ9BDgENQ- 0..3')+ADs-
      var ptr: +AF4-double :+AD0- pointer(new IntPtr(+AEA-self) +- i+ACo-4 )+ADs-
      ptr+AF4- :+AD0- val+ADs-
    end+ADs-
    public property val+AFs-i: integer+AF0-: double read GetValAt write SetValAt+ADs- default+ADs-
    
    public static function operator-(v: Vec4d): Vec4d :+AD0- new Vec4d(-v.val0, -v.val1, -v.val2, -v.val3)+ADs-
    public static function operator+ACo-(v: Vec4d+ADs- k: double): Vec4d :+AD0- new Vec4d(v.val0+ACo-k, v.val1+ACo-k, v.val2+ACo-k, v.val3+ACo-k)+ADs-
    public static function operator/(v: Vec4d+ADs- k: double): Vec4d :+AD0- new Vec4d(v.val0/k, v.val1/k, v.val2/k, v.val3/k)+ADs-
    public static function operator+-(v1, v2: Vec4d): Vec4d :+AD0- new Vec4d(v1.val0+-v2.val0, v1.val1+-v2.val1, v1.val2+-v2.val2, v1.val3+-v2.val3)+ADs-
    public static function operator-(v1, v2: Vec4d): Vec4d :+AD0- new Vec4d(v1.val0-v2.val0, v1.val1-v2.val1, v1.val2-v2.val2, v1.val3-v2.val3)+ADs-
    
    public static function operator implicit(v: Vec1b): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1b :+AD0- new Vec1b(Convert.ToSByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ub): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1ub :+AD0- new Vec1ub(Convert.ToByte(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1s): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1s :+AD0- new Vec1s(Convert.ToInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1us): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1us :+AD0- new Vec1us(Convert.ToUInt16(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1i :+AD0- new Vec1i(Convert.ToInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1ui :+AD0- new Vec1ui(Convert.ToUInt32(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1i64): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1i64 :+AD0- new Vec1i64(Convert.ToInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1ui64): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1ui64 :+AD0- new Vec1ui64(Convert.ToUInt64(v.val0))+ADs-
    
    public static function operator implicit(v: Vec1f): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1f :+AD0- new Vec1f(v.val0)+ADs-
    
    public static function operator implicit(v: Vec1d): Vec4d :+AD0- new Vec4d(v.val0, 0, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec1d :+AD0- new Vec1d(v.val0)+ADs-
    
    public static function operator implicit(v: Vec2b): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2b :+AD0- new Vec2b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ub): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2ub :+AD0- new Vec2ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2s): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2s :+AD0- new Vec2s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2us): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2us :+AD0- new Vec2us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2i :+AD0- new Vec2i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2ui :+AD0- new Vec2ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2i64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2i64 :+AD0- new Vec2i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2ui64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2ui64 :+AD0- new Vec2ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1))+ADs-
    
    public static function operator implicit(v: Vec2f): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2f :+AD0- new Vec2f(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec2d): Vec4d :+AD0- new Vec4d(v.val0, v.val1, 0, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec2d :+AD0- new Vec2d(v.val0, v.val1)+ADs-
    
    public static function operator implicit(v: Vec3b): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3b :+AD0- new Vec3b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ub): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3ub :+AD0- new Vec3ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3s): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3s :+AD0- new Vec3s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3us): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3us :+AD0- new Vec3us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3i :+AD0- new Vec3i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3ui :+AD0- new Vec3ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3i64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3i64 :+AD0- new Vec3i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3ui64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3ui64 :+AD0- new Vec3ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2))+ADs-
    
    public static function operator implicit(v: Vec3f): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3f :+AD0- new Vec3f(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec3d): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, 0)+ADs-
    public static function operator implicit(v: Vec4d): Vec3d :+AD0- new Vec3d(v.val0, v.val1, v.val2)+ADs-
    
    public static function operator implicit(v: Vec4b): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4b :+AD0- new Vec4b(Convert.ToSByte(v.val0), Convert.ToSByte(v.val1), Convert.ToSByte(v.val2), Convert.ToSByte(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ub): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4ub :+AD0- new Vec4ub(Convert.ToByte(v.val0), Convert.ToByte(v.val1), Convert.ToByte(v.val2), Convert.ToByte(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4s): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4s :+AD0- new Vec4s(Convert.ToInt16(v.val0), Convert.ToInt16(v.val1), Convert.ToInt16(v.val2), Convert.ToInt16(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4us): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4us :+AD0- new Vec4us(Convert.ToUInt16(v.val0), Convert.ToUInt16(v.val1), Convert.ToUInt16(v.val2), Convert.ToUInt16(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4i): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4i :+AD0- new Vec4i(Convert.ToInt32(v.val0), Convert.ToInt32(v.val1), Convert.ToInt32(v.val2), Convert.ToInt32(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ui): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4ui :+AD0- new Vec4ui(Convert.ToUInt32(v.val0), Convert.ToUInt32(v.val1), Convert.ToUInt32(v.val2), Convert.ToUInt32(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4i64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4i64 :+AD0- new Vec4i64(Convert.ToInt64(v.val0), Convert.ToInt64(v.val1), Convert.ToInt64(v.val2), Convert.ToInt64(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4ui64): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4ui64 :+AD0- new Vec4ui64(Convert.ToUInt64(v.val0), Convert.ToUInt64(v.val1), Convert.ToUInt64(v.val2), Convert.ToUInt64(v.val3))+ADs-
    
    public static function operator implicit(v: Vec4f): Vec4d :+AD0- new Vec4d(v.val0, v.val1, v.val2, v.val3)+ADs-
    public static function operator implicit(v: Vec4d): Vec4f :+AD0- new Vec4f(v.val0, v.val1, v.val2, v.val3)+ADs-
    
    public function SqrLength :+AD0- val0+ACo-val0 +- val1+ACo-val1 +- val2+ACo-val2 +- val3+ACo-val3+ADs-
    
    public function Normalized :+AD0- self / Sqrt(self.SqrLength)+ADs-
    
    public function ToString: string+ADs- override+ADs-
    begin
      var res :+AD0- new StringBuilder+ADs-
      res +-+AD0- '+AFs- '+ADs-
      res +-+AD0- val0.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val1.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val2.ToString('f2')+ADs-
      res +-+AD0- ', '+ADs-
      res +-+AD0- val3.ToString('f2')+ADs-
      res +-+AD0- ' +AF0-'+ADs-
      Result :+AD0- res.ToString+ADs-
    end+ADs-
    
    public function Println: Vec4d+ADs-
    begin
      Writeln(self.ToString)+ADs-
      Result :+AD0- self+ADs-
    end+ADs-
    
  end+ADs-
  
  +AHsAJA-endregion Vec4+AH0-
  
  +AHsAJA-endregion Vec+AH0-
  