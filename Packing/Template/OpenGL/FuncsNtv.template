  
  
  
  [PCUNotRestore]
  [System.Security.SuppressUnmanagedCodeSecurity]
  ///--
  gl_ntv = static class
    
    public static procedure z_BindTexture_ovr_0(target: TextureTarget; texture: gl_texture);
    external 'opengl32.dll' name 'glBindTexture';
    
    public static procedure z_BlendFunc_ovr_0(sfactor: BlendingFactor; dfactor: BlendingFactor);
    external 'opengl32.dll' name 'glBlendFunc';
    
    public static procedure z_Clear_ovr_0(mask: ClearBufferMask);
    external 'opengl32.dll' name 'glClear';
    
    public static procedure z_ClearColor_ovr_0(red: single; green: single; blue: single; alpha: single);
    external 'opengl32.dll' name 'glClearColor';
    
    public static procedure z_ClearDepth_ovr_0(depth: real);
    external 'opengl32.dll' name 'glClearDepth';
    
    public static procedure z_ClearStencil_ovr_0(s: Int32);
    external 'opengl32.dll' name 'glClearStencil';
    
    public static procedure z_ColorMask_ovr_0(red: boolean; green: boolean; blue: boolean; alpha: boolean);
    external 'opengl32.dll' name 'glColorMask';
    
    public static procedure z_CopyTexImage1D_ovr_0(target: TextureTarget; level: Int32; _internalformat: InternalFormat; x: Int32; y: Int32; width: Int32; border: Int32);
    external 'opengl32.dll' name 'glCopyTexImage1D';
    
    public static procedure z_CopyTexImage2D_ovr_0(target: TextureTarget; level: Int32; _internalformat: InternalFormat; x: Int32; y: Int32; width: Int32; height: Int32; border: Int32);
    external 'opengl32.dll' name 'glCopyTexImage2D';
    
    public static procedure z_CopyTexSubImage1D_ovr_0(target: TextureTarget; level: Int32; xoffset: Int32; x: Int32; y: Int32; width: Int32);
    external 'opengl32.dll' name 'glCopyTexSubImage1D';
    
    public static procedure z_CopyTexSubImage2D_ovr_0(target: TextureTarget; level: Int32; xoffset: Int32; yoffset: Int32; x: Int32; y: Int32; width: Int32; height: Int32);
    external 'opengl32.dll' name 'glCopyTexSubImage2D';
    
    public static procedure z_CullFace_ovr_0(mode: CullFaceMode);
    external 'opengl32.dll' name 'glCullFace';
    
    public static procedure z_DeleteTextures_ovr_0(n: Int32; var textures: gl_texture);
    external 'opengl32.dll' name 'glDeleteTextures';
    public static procedure z_DeleteTextures_ovr_0_anh001(n: Int32; textures: IntPtr);
    external 'opengl32.dll' name 'glDeleteTextures';
    public static procedure z_DeleteTextures_ovr_2(n: Int32; textures: IntPtr);
    external 'opengl32.dll' name 'glDeleteTextures';
    
    public static procedure z_DepthFunc_ovr_0(func: DepthFunction);
    external 'opengl32.dll' name 'glDepthFunc';
    
    public static procedure z_DepthMask_ovr_0(flag: boolean);
    external 'opengl32.dll' name 'glDepthMask';
    
    public static procedure z_DepthRange_ovr_0(n: real; f: real);
    external 'opengl32.dll' name 'glDepthRange';
    
    public static procedure z_Disable_ovr_0(cap: EnableCap);
    external 'opengl32.dll' name 'glDisable';
    
    public static procedure z_DrawArrays_ovr_0(mode: PrimitiveType; first: Int32; count: Int32);
    external 'opengl32.dll' name 'glDrawArrays';
    
    public static procedure z_DrawBuffer_ovr_0(buf: DrawBufferMode);
    external 'opengl32.dll' name 'glDrawBuffer';
    
    public static procedure z_DrawElements_ovr_0(mode: PrimitiveType; count: Int32; &type: DrawElementsType; indices: IntPtr);
    external 'opengl32.dll' name 'glDrawElements';
    
    public static procedure z_Enable_ovr_0(cap: EnableCap);
    external 'opengl32.dll' name 'glEnable';
    
    public static procedure z_Finish_ovr_0;
    external 'opengl32.dll' name 'glFinish';
    
    public static procedure z_Flush_ovr_0;
    external 'opengl32.dll' name 'glFlush';
    
    public static procedure z_FrontFace_ovr_0(mode: FrontFaceDirection);
    external 'opengl32.dll' name 'glFrontFace';
    
    public static procedure z_GenTextures_ovr_0(n: Int32; var textures: gl_texture);
    external 'opengl32.dll' name 'glGenTextures';
    public static procedure z_GenTextures_ovr_0_anh001(n: Int32; textures: IntPtr);
    external 'opengl32.dll' name 'glGenTextures';
    public static procedure z_GenTextures_ovr_2(n: Int32; textures: IntPtr);
    external 'opengl32.dll' name 'glGenTextures';
    
    public static procedure z_GetBooleanv_ovr_0(pname: GetPName; var data: boolean);
    external 'opengl32.dll' name 'glGetBooleanv';
    public static procedure z_GetBooleanv_ovr_0_anh001(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetBooleanv';
    public static procedure z_GetBooleanv_ovr_2(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetBooleanv';
    
    public static procedure z_GetDoublev_ovr_0(pname: GetPName; var data: real);
    external 'opengl32.dll' name 'glGetDoublev';
    public static procedure z_GetDoublev_ovr_0_anh001(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetDoublev';
    public static procedure z_GetDoublev_ovr_2(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetDoublev';
    
    public static function z_GetError_ovr_0: ErrorCode;
    external 'opengl32.dll' name 'glGetError';
    
    public static procedure z_GetFloatv_ovr_0(pname: GetPName; var data: single);
    external 'opengl32.dll' name 'glGetFloatv';
    public static procedure z_GetFloatv_ovr_0_anh001(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetFloatv';
    public static procedure z_GetFloatv_ovr_2(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetFloatv';
    
    public static procedure z_GetIntegerv_ovr_0(pname: GetPName; var data: Int32);
    external 'opengl32.dll' name 'glGetIntegerv';
    public static procedure z_GetIntegerv_ovr_0_anh001(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetIntegerv';
    public static procedure z_GetIntegerv_ovr_2(pname: GetPName; data: IntPtr);
    external 'opengl32.dll' name 'glGetIntegerv';
    
    public static function z_GetString_ovr_0(name: StringName): IntPtr;
    external 'opengl32.dll' name 'glGetString';
    
    public static procedure z_GetTexImage_ovr_0(target: TextureTarget; level: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glGetTexImage';
    
    public static procedure z_GetTexLevelParameterfv_ovr_0(target: TextureTarget; level: Int32; pname: GetTextureParameter; var &params: single);
    external 'opengl32.dll' name 'glGetTexLevelParameterfv';
    public static procedure z_GetTexLevelParameterfv_ovr_0_anh00001(target: TextureTarget; level: Int32; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexLevelParameterfv';
    public static procedure z_GetTexLevelParameterfv_ovr_2(target: TextureTarget; level: Int32; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexLevelParameterfv';
    
    public static procedure z_GetTexLevelParameteriv_ovr_0(target: TextureTarget; level: Int32; pname: GetTextureParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetTexLevelParameteriv';
    public static procedure z_GetTexLevelParameteriv_ovr_0_anh00001(target: TextureTarget; level: Int32; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexLevelParameteriv';
    public static procedure z_GetTexLevelParameteriv_ovr_2(target: TextureTarget; level: Int32; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexLevelParameteriv';
    
    public static procedure z_GetTexParameterfv_ovr_0(target: TextureTarget; pname: GetTextureParameter; var &params: single);
    external 'opengl32.dll' name 'glGetTexParameterfv';
    public static procedure z_GetTexParameterfv_ovr_0_anh0001(target: TextureTarget; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexParameterfv';
    public static procedure z_GetTexParameterfv_ovr_2(target: TextureTarget; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexParameterfv';
    
    public static procedure z_GetTexParameteriv_ovr_0(target: TextureTarget; pname: GetTextureParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetTexParameteriv';
    public static procedure z_GetTexParameteriv_ovr_0_anh0001(target: TextureTarget; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexParameteriv';
    public static procedure z_GetTexParameteriv_ovr_2(target: TextureTarget; pname: GetTextureParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexParameteriv';
    
    public static procedure z_Hint_ovr_0(target: HintTarget; mode: HintMode);
    external 'opengl32.dll' name 'glHint';
    
    public static function z_IsEnabled_ovr_0(cap: EnableCap): boolean;
    external 'opengl32.dll' name 'glIsEnabled';
    
    public static function z_IsTexture_ovr_0(texture: gl_texture): boolean;
    external 'opengl32.dll' name 'glIsTexture';
    
    public static procedure z_LineWidth_ovr_0(width: single);
    external 'opengl32.dll' name 'glLineWidth';
    
    public static procedure z_LogicOp_ovr_0(opcode: OpenGL.LogicOp);
    external 'opengl32.dll' name 'glLogicOp';
    
    public static procedure z_PixelStoref_ovr_0(pname: PixelStoreParameter; param: single);
    external 'opengl32.dll' name 'glPixelStoref';
    
    public static procedure z_PixelStorei_ovr_0(pname: PixelStoreParameter; param: Int32);
    external 'opengl32.dll' name 'glPixelStorei';
    
    public static procedure z_PointSize_ovr_0(size: single);
    external 'opengl32.dll' name 'glPointSize';
    
    public static procedure z_PolygonMode_ovr_0(face: MaterialFace; mode: OpenGL.PolygonMode);
    external 'opengl32.dll' name 'glPolygonMode';
    
    public static procedure z_PolygonOffset_ovr_0(factor: single; units: single);
    external 'opengl32.dll' name 'glPolygonOffset';
    
    public static procedure z_ReadBuffer_ovr_0(src: ReadBufferMode);
    external 'opengl32.dll' name 'glReadBuffer';
    
    public static procedure z_ReadPixels_ovr_0(x: Int32; y: Int32; width: Int32; height: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glReadPixels';
    
    public static procedure z_Scissor_ovr_0(x: Int32; y: Int32; width: Int32; height: Int32);
    external 'opengl32.dll' name 'glScissor';
    
    public static procedure z_StencilFunc_ovr_0(func: StencilFunction; ref: Int32; mask: UInt32);
    external 'opengl32.dll' name 'glStencilFunc';
    
    public static procedure z_StencilMask_ovr_0(mask: UInt32);
    external 'opengl32.dll' name 'glStencilMask';
    
    public static procedure z_StencilOp_ovr_0(fail: OpenGL.StencilOp; zfail: OpenGL.StencilOp; zpass: OpenGL.StencilOp);
    external 'opengl32.dll' name 'glStencilOp';
    
    public static procedure z_TexImage1D_ovr_0(target: TextureTarget; level: Int32; internalformat: Int32; width: Int32; border: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glTexImage1D';
    
    public static procedure z_TexImage2D_ovr_0(target: TextureTarget; level: Int32; internalformat: Int32; width: Int32; height: Int32; border: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glTexImage2D';
    
    public static procedure z_TexParameterf_ovr_0(target: TextureTarget; pname: TextureParameterName; param: single);
    external 'opengl32.dll' name 'glTexParameterf';
    
    public static procedure z_TexParameterfv_ovr_0(target: TextureTarget; pname: TextureParameterName; var &params: single);
    external 'opengl32.dll' name 'glTexParameterfv';
    public static procedure z_TexParameterfv_ovr_0_anh0001(target: TextureTarget; pname: TextureParameterName; &params: IntPtr);
    external 'opengl32.dll' name 'glTexParameterfv';
    public static procedure z_TexParameterfv_ovr_2(target: TextureTarget; pname: TextureParameterName; &params: IntPtr);
    external 'opengl32.dll' name 'glTexParameterfv';
    
    public static procedure z_TexParameteri_ovr_0(target: TextureTarget; pname: TextureParameterName; param: Int32);
    external 'opengl32.dll' name 'glTexParameteri';
    
    public static procedure z_TexParameteriv_ovr_0(target: TextureTarget; pname: TextureParameterName; var &params: Int32);
    external 'opengl32.dll' name 'glTexParameteriv';
    public static procedure z_TexParameteriv_ovr_0_anh0001(target: TextureTarget; pname: TextureParameterName; &params: IntPtr);
    external 'opengl32.dll' name 'glTexParameteriv';
    public static procedure z_TexParameteriv_ovr_2(target: TextureTarget; pname: TextureParameterName; &params: IntPtr);
    external 'opengl32.dll' name 'glTexParameteriv';
    
    public static procedure z_TexSubImage1D_ovr_0(target: TextureTarget; level: Int32; xoffset: Int32; width: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glTexSubImage1D';
    
    public static procedure z_TexSubImage2D_ovr_0(target: TextureTarget; level: Int32; xoffset: Int32; yoffset: Int32; width: Int32; height: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glTexSubImage2D';
    
    public static procedure z_Viewport_ovr_0(x: Int32; y: Int32; width: Int32; height: Int32);
    external 'opengl32.dll' name 'glViewport';
    
    public static procedure z_Accum_ovr_0(op: AccumOp; value: single);
    external 'opengl32.dll' name 'glAccum';
    
    public static procedure z_AlphaFunc_ovr_0(func: AlphaFunction; ref: single);
    external 'opengl32.dll' name 'glAlphaFunc';
    
    public static function z_AreTexturesResident_ovr_0(n: Int32; var textures: gl_texture; var residences: boolean): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_0_anh0010(n: Int32; textures: IntPtr; var residences: boolean): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_0_anh0001(n: Int32; var textures: gl_texture; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_0_anh0011(n: Int32; textures: IntPtr; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_1_anh0010(n: Int32; textures: IntPtr; var residences: boolean): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_2(n: Int32; var textures: gl_texture; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_2_anh0010(n: Int32; textures: IntPtr; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_6(n: Int32; textures: IntPtr; var residences: boolean): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_6_anh0001(n: Int32; textures: IntPtr; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    public static function z_AreTexturesResident_ovr_8(n: Int32; textures: IntPtr; residences: IntPtr): boolean;
    external 'opengl32.dll' name 'glAreTexturesResident';
    
    public static procedure z_ArrayElement_ovr_0(i: Int32);
    external 'opengl32.dll' name 'glArrayElement';
    
    public static procedure z_Begin_ovr_0(mode: PrimitiveType);
    external 'opengl32.dll' name 'glBegin';
    
    public static procedure z_Bitmap_ovr_0(width: Int32; height: Int32; xorig: single; yorig: single; xmove: single; ymove: single; var bitmap: Byte);
    external 'opengl32.dll' name 'glBitmap';
    public static procedure z_Bitmap_ovr_0_anh00000001(width: Int32; height: Int32; xorig: single; yorig: single; xmove: single; ymove: single; bitmap: IntPtr);
    external 'opengl32.dll' name 'glBitmap';
    public static procedure z_Bitmap_ovr_2(width: Int32; height: Int32; xorig: single; yorig: single; xmove: single; ymove: single; bitmap: IntPtr);
    external 'opengl32.dll' name 'glBitmap';
    
    public static procedure z_CallList_ovr_0(list: UInt32);
    external 'opengl32.dll' name 'glCallList';
    
    public static procedure z_CallLists_ovr_0(n: Int32; &type: ListNameType; lists: IntPtr);
    external 'opengl32.dll' name 'glCallLists';
    
    public static procedure z_ClearAccum_ovr_0(red: single; green: single; blue: single; alpha: single);
    external 'opengl32.dll' name 'glClearAccum';
    
    public static procedure z_ClearIndex_ovr_0(c: single);
    external 'opengl32.dll' name 'glClearIndex';
    
    public static procedure z_ClipPlane_ovr_0(plane: ClipPlaneName; var equation: real);
    external 'opengl32.dll' name 'glClipPlane';
    public static procedure z_ClipPlane_ovr_0_anh001(plane: ClipPlaneName; equation: IntPtr);
    external 'opengl32.dll' name 'glClipPlane';
    public static procedure z_ClipPlane_ovr_2(plane: ClipPlaneName; equation: IntPtr);
    external 'opengl32.dll' name 'glClipPlane';
    
    public static procedure z_Color3b_ovr_0(red: SByte; green: SByte; blue: SByte);
    external 'opengl32.dll' name 'glColor3b';
    
    public static procedure z_Color3bv_ovr_0(var v: SByte);
    external 'opengl32.dll' name 'glColor3bv';
    public static procedure z_Color3bv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3bv';
    public static procedure z_Color3bv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3bv';
    
    public static procedure z_Color3d_ovr_0(red: real; green: real; blue: real);
    external 'opengl32.dll' name 'glColor3d';
    
    public static procedure z_Color3dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glColor3dv';
    public static procedure z_Color3dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3dv';
    public static procedure z_Color3dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3dv';
    
    public static procedure z_Color3f_ovr_0(red: single; green: single; blue: single);
    external 'opengl32.dll' name 'glColor3f';
    
    public static procedure z_Color3fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glColor3fv';
    public static procedure z_Color3fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3fv';
    public static procedure z_Color3fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3fv';
    
    public static procedure z_Color3i_ovr_0(red: Int32; green: Int32; blue: Int32);
    external 'opengl32.dll' name 'glColor3i';
    
    public static procedure z_Color3iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glColor3iv';
    public static procedure z_Color3iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3iv';
    public static procedure z_Color3iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3iv';
    
    public static procedure z_Color3s_ovr_0(red: Int16; green: Int16; blue: Int16);
    external 'opengl32.dll' name 'glColor3s';
    
    public static procedure z_Color3sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glColor3sv';
    public static procedure z_Color3sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3sv';
    public static procedure z_Color3sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3sv';
    
    public static procedure z_Color3ub_ovr_0(red: Byte; green: Byte; blue: Byte);
    external 'opengl32.dll' name 'glColor3ub';
    
    public static procedure z_Color3ubv_ovr_0(var v: Byte);
    external 'opengl32.dll' name 'glColor3ubv';
    public static procedure z_Color3ubv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3ubv';
    public static procedure z_Color3ubv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3ubv';
    
    public static procedure z_Color3ui_ovr_0(red: UInt32; green: UInt32; blue: UInt32);
    external 'opengl32.dll' name 'glColor3ui';
    
    public static procedure z_Color3uiv_ovr_0(var v: UInt32);
    external 'opengl32.dll' name 'glColor3uiv';
    public static procedure z_Color3uiv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3uiv';
    public static procedure z_Color3uiv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3uiv';
    
    public static procedure z_Color3us_ovr_0(red: UInt16; green: UInt16; blue: UInt16);
    external 'opengl32.dll' name 'glColor3us';
    
    public static procedure z_Color3usv_ovr_0(var v: UInt16);
    external 'opengl32.dll' name 'glColor3usv';
    public static procedure z_Color3usv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor3usv';
    public static procedure z_Color3usv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor3usv';
    
    public static procedure z_Color4b_ovr_0(red: SByte; green: SByte; blue: SByte; alpha: SByte);
    external 'opengl32.dll' name 'glColor4b';
    
    public static procedure z_Color4bv_ovr_0(var v: SByte);
    external 'opengl32.dll' name 'glColor4bv';
    public static procedure z_Color4bv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4bv';
    public static procedure z_Color4bv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4bv';
    
    public static procedure z_Color4d_ovr_0(red: real; green: real; blue: real; alpha: real);
    external 'opengl32.dll' name 'glColor4d';
    
    public static procedure z_Color4dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glColor4dv';
    public static procedure z_Color4dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4dv';
    public static procedure z_Color4dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4dv';
    
    public static procedure z_Color4f_ovr_0(red: single; green: single; blue: single; alpha: single);
    external 'opengl32.dll' name 'glColor4f';
    
    public static procedure z_Color4fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glColor4fv';
    public static procedure z_Color4fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4fv';
    public static procedure z_Color4fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4fv';
    
    public static procedure z_Color4i_ovr_0(red: Int32; green: Int32; blue: Int32; alpha: Int32);
    external 'opengl32.dll' name 'glColor4i';
    
    public static procedure z_Color4iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glColor4iv';
    public static procedure z_Color4iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4iv';
    public static procedure z_Color4iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4iv';
    
    public static procedure z_Color4s_ovr_0(red: Int16; green: Int16; blue: Int16; alpha: Int16);
    external 'opengl32.dll' name 'glColor4s';
    
    public static procedure z_Color4sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glColor4sv';
    public static procedure z_Color4sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4sv';
    public static procedure z_Color4sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4sv';
    
    public static procedure z_Color4ub_ovr_0(red: Byte; green: Byte; blue: Byte; alpha: Byte);
    external 'opengl32.dll' name 'glColor4ub';
    
    public static procedure z_Color4ubv_ovr_0(var v: Byte);
    external 'opengl32.dll' name 'glColor4ubv';
    public static procedure z_Color4ubv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4ubv';
    public static procedure z_Color4ubv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4ubv';
    
    public static procedure z_Color4ui_ovr_0(red: UInt32; green: UInt32; blue: UInt32; alpha: UInt32);
    external 'opengl32.dll' name 'glColor4ui';
    
    public static procedure z_Color4uiv_ovr_0(var v: UInt32);
    external 'opengl32.dll' name 'glColor4uiv';
    public static procedure z_Color4uiv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4uiv';
    public static procedure z_Color4uiv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4uiv';
    
    public static procedure z_Color4us_ovr_0(red: UInt16; green: UInt16; blue: UInt16; alpha: UInt16);
    external 'opengl32.dll' name 'glColor4us';
    
    public static procedure z_Color4usv_ovr_0(var v: UInt16);
    external 'opengl32.dll' name 'glColor4usv';
    public static procedure z_Color4usv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glColor4usv';
    public static procedure z_Color4usv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glColor4usv';
    
    public static procedure z_ColorMaterial_ovr_0(face: MaterialFace; mode: ColorMaterialParameter);
    external 'opengl32.dll' name 'glColorMaterial';
    
    public static procedure z_ColorPointer_ovr_0(size: Int32; &type: ColorPointerType; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glColorPointer';
    
    public static procedure z_CopyPixels_ovr_0(x: Int32; y: Int32; width: Int32; height: Int32; &type: PixelCopyType);
    external 'opengl32.dll' name 'glCopyPixels';
    
    public static procedure z_DeleteLists_ovr_0(list: gl_display_list; range: Int32);
    external 'opengl32.dll' name 'glDeleteLists';
    
    public static procedure z_DisableClientState_ovr_0(&array: EnableCap);
    external 'opengl32.dll' name 'glDisableClientState';
    
    public static procedure z_DrawPixels_ovr_0(width: Int32; height: Int32; format: PixelFormat; &type: PixelType; pixels: IntPtr);
    external 'opengl32.dll' name 'glDrawPixels';
    
    public static procedure z_EdgeFlag_ovr_0(flag: boolean);
    external 'opengl32.dll' name 'glEdgeFlag';
    
    public static procedure z_EdgeFlagPointer_ovr_0(stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glEdgeFlagPointer';
    
    public static procedure z_EdgeFlagv_ovr_0(var flag: boolean);
    external 'opengl32.dll' name 'glEdgeFlagv';
    public static procedure z_EdgeFlagv_ovr_1(flag: IntPtr);
    external 'opengl32.dll' name 'glEdgeFlagv';
    
    public static procedure z_EnableClientState_ovr_0(&array: EnableCap);
    external 'opengl32.dll' name 'glEnableClientState';
    
    public static procedure z_End_ovr_0;
    external 'opengl32.dll' name 'glEnd';
    
    public static procedure z_EndList_ovr_0;
    external 'opengl32.dll' name 'glEndList';
    
    public static procedure z_EvalCoord1d_ovr_0(u: real);
    external 'opengl32.dll' name 'glEvalCoord1d';
    
    public static procedure z_EvalCoord1dv_ovr_0(var u: real);
    external 'opengl32.dll' name 'glEvalCoord1dv';
    public static procedure z_EvalCoord1dv_ovr_1(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord1dv';
    
    public static procedure z_EvalCoord1f_ovr_0(u: single);
    external 'opengl32.dll' name 'glEvalCoord1f';
    
    public static procedure z_EvalCoord1fv_ovr_0(var u: single);
    external 'opengl32.dll' name 'glEvalCoord1fv';
    public static procedure z_EvalCoord1fv_ovr_1(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord1fv';
    
    public static procedure z_EvalCoord2d_ovr_0(u: real; v: real);
    external 'opengl32.dll' name 'glEvalCoord2d';
    
    public static procedure z_EvalCoord2dv_ovr_0(var u: real);
    external 'opengl32.dll' name 'glEvalCoord2dv';
    public static procedure z_EvalCoord2dv_ovr_0_anh01(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord2dv';
    public static procedure z_EvalCoord2dv_ovr_2(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord2dv';
    
    public static procedure z_EvalCoord2f_ovr_0(u: single; v: single);
    external 'opengl32.dll' name 'glEvalCoord2f';
    
    public static procedure z_EvalCoord2fv_ovr_0(var u: single);
    external 'opengl32.dll' name 'glEvalCoord2fv';
    public static procedure z_EvalCoord2fv_ovr_0_anh01(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord2fv';
    public static procedure z_EvalCoord2fv_ovr_2(u: IntPtr);
    external 'opengl32.dll' name 'glEvalCoord2fv';
    
    public static procedure z_EvalMesh1_ovr_0(mode: MeshMode1; i1: Int32; i2: Int32);
    external 'opengl32.dll' name 'glEvalMesh1';
    
    public static procedure z_EvalMesh2_ovr_0(mode: MeshMode2; i1: Int32; i2: Int32; j1: Int32; j2: Int32);
    external 'opengl32.dll' name 'glEvalMesh2';
    
    public static procedure z_EvalPoint1_ovr_0(i: Int32);
    external 'opengl32.dll' name 'glEvalPoint1';
    
    public static procedure z_EvalPoint2_ovr_0(i: Int32; j: Int32);
    external 'opengl32.dll' name 'glEvalPoint2';
    
    public static procedure z_FeedbackBuffer_ovr_0(size: Int32; &type: FeedbackType; var buffer: single);
    external 'opengl32.dll' name 'glFeedbackBuffer';
    public static procedure z_FeedbackBuffer_ovr_0_anh0001(size: Int32; &type: FeedbackType; buffer: IntPtr);
    external 'opengl32.dll' name 'glFeedbackBuffer';
    public static procedure z_FeedbackBuffer_ovr_2(size: Int32; &type: FeedbackType; buffer: IntPtr);
    external 'opengl32.dll' name 'glFeedbackBuffer';
    
    public static procedure z_Fogf_ovr_0(pname: FogParameter; param: single);
    external 'opengl32.dll' name 'glFogf';
    
    public static procedure z_Fogfv_ovr_0(pname: FogParameter; var &params: single);
    external 'opengl32.dll' name 'glFogfv';
    public static procedure z_Fogfv_ovr_0_anh001(pname: FogParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glFogfv';
    public static procedure z_Fogfv_ovr_2(pname: FogParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glFogfv';
    
    public static procedure z_Fogi_ovr_0(pname: FogParameter; param: Int32);
    external 'opengl32.dll' name 'glFogi';
    
    public static procedure z_Fogiv_ovr_0(pname: FogParameter; var &params: Int32);
    external 'opengl32.dll' name 'glFogiv';
    public static procedure z_Fogiv_ovr_0_anh001(pname: FogParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glFogiv';
    public static procedure z_Fogiv_ovr_2(pname: FogParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glFogiv';
    
    public static procedure z_Frustum_ovr_0(left: real; right: real; bottom: real; top: real; zNear: real; zFar: real);
    external 'opengl32.dll' name 'glFrustum';
    
    public static function z_GenLists_ovr_0(range: Int32): gl_display_list;
    external 'opengl32.dll' name 'glGenLists';
    
    public static procedure z_GetClipPlane_ovr_0(plane: ClipPlaneName; var equation: real);
    external 'opengl32.dll' name 'glGetClipPlane';
    public static procedure z_GetClipPlane_ovr_0_anh001(plane: ClipPlaneName; equation: IntPtr);
    external 'opengl32.dll' name 'glGetClipPlane';
    public static procedure z_GetClipPlane_ovr_2(plane: ClipPlaneName; equation: IntPtr);
    external 'opengl32.dll' name 'glGetClipPlane';
    
    public static procedure z_GetLightfv_ovr_0(light: LightName; pname: LightParameter; var &params: single);
    external 'opengl32.dll' name 'glGetLightfv';
    public static procedure z_GetLightfv_ovr_0_anh0001(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetLightfv';
    public static procedure z_GetLightfv_ovr_2(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetLightfv';
    
    public static procedure z_GetLightiv_ovr_0(light: LightName; pname: LightParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetLightiv';
    public static procedure z_GetLightiv_ovr_0_anh0001(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetLightiv';
    public static procedure z_GetLightiv_ovr_2(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetLightiv';
    
    public static procedure z_GetMapdv_ovr_0(target: MapTarget; query: GetMapQuery; var v: real);
    external 'opengl32.dll' name 'glGetMapdv';
    public static procedure z_GetMapdv_ovr_0_anh0001(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapdv';
    public static procedure z_GetMapdv_ovr_2(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapdv';
    
    public static procedure z_GetMapfv_ovr_0(target: MapTarget; query: GetMapQuery; var v: single);
    external 'opengl32.dll' name 'glGetMapfv';
    public static procedure z_GetMapfv_ovr_0_anh0001(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapfv';
    public static procedure z_GetMapfv_ovr_2(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapfv';
    
    public static procedure z_GetMapiv_ovr_0(target: MapTarget; query: GetMapQuery; var v: Int32);
    external 'opengl32.dll' name 'glGetMapiv';
    public static procedure z_GetMapiv_ovr_0_anh0001(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapiv';
    public static procedure z_GetMapiv_ovr_2(target: MapTarget; query: GetMapQuery; v: IntPtr);
    external 'opengl32.dll' name 'glGetMapiv';
    
    public static procedure z_GetMaterialfv_ovr_0(face: MaterialFace; pname: MaterialParameter; var &params: single);
    external 'opengl32.dll' name 'glGetMaterialfv';
    public static procedure z_GetMaterialfv_ovr_0_anh0001(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetMaterialfv';
    public static procedure z_GetMaterialfv_ovr_2(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetMaterialfv';
    
    public static procedure z_GetMaterialiv_ovr_0(face: MaterialFace; pname: MaterialParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetMaterialiv';
    public static procedure z_GetMaterialiv_ovr_0_anh0001(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetMaterialiv';
    public static procedure z_GetMaterialiv_ovr_2(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetMaterialiv';
    
    public static procedure z_GetPixelMapfv_ovr_0(map: PixelMap; var values: single);
    external 'opengl32.dll' name 'glGetPixelMapfv';
    public static procedure z_GetPixelMapfv_ovr_0_anh001(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapfv';
    public static procedure z_GetPixelMapfv_ovr_2(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapfv';
    
    public static procedure z_GetPixelMapuiv_ovr_0(map: PixelMap; var values: UInt32);
    external 'opengl32.dll' name 'glGetPixelMapuiv';
    public static procedure z_GetPixelMapuiv_ovr_0_anh001(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapuiv';
    public static procedure z_GetPixelMapuiv_ovr_2(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapuiv';
    
    public static procedure z_GetPixelMapusv_ovr_0(map: PixelMap; var values: UInt16);
    external 'opengl32.dll' name 'glGetPixelMapusv';
    public static procedure z_GetPixelMapusv_ovr_0_anh001(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapusv';
    public static procedure z_GetPixelMapusv_ovr_2(map: PixelMap; values: IntPtr);
    external 'opengl32.dll' name 'glGetPixelMapusv';
    
    public static procedure z_GetPolygonStipple_ovr_0(var mask: Byte);
    external 'opengl32.dll' name 'glGetPolygonStipple';
    public static procedure z_GetPolygonStipple_ovr_0_anh01(mask: IntPtr);
    external 'opengl32.dll' name 'glGetPolygonStipple';
    public static procedure z_GetPolygonStipple_ovr_2(mask: IntPtr);
    external 'opengl32.dll' name 'glGetPolygonStipple';
    
    public static procedure z_GetTexEnvfv_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; var &params: single);
    external 'opengl32.dll' name 'glGetTexEnvfv';
    public static procedure z_GetTexEnvfv_ovr_0_anh0001(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexEnvfv';
    public static procedure z_GetTexEnvfv_ovr_2(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexEnvfv';
    
    public static procedure z_GetTexEnviv_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetTexEnviv';
    public static procedure z_GetTexEnviv_ovr_0_anh0001(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexEnviv';
    public static procedure z_GetTexEnviv_ovr_2(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexEnviv';
    
    public static procedure z_GetTexGendv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: real);
    external 'opengl32.dll' name 'glGetTexGendv';
    public static procedure z_GetTexGendv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGendv';
    public static procedure z_GetTexGendv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGendv';
    
    public static procedure z_GetTexGenfv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: single);
    external 'opengl32.dll' name 'glGetTexGenfv';
    public static procedure z_GetTexGenfv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGenfv';
    public static procedure z_GetTexGenfv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGenfv';
    
    public static procedure z_GetTexGeniv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: Int32);
    external 'opengl32.dll' name 'glGetTexGeniv';
    public static procedure z_GetTexGeniv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGeniv';
    public static procedure z_GetTexGeniv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glGetTexGeniv';
    
    public static procedure z_Indexd_ovr_0(c: real);
    external 'opengl32.dll' name 'glIndexd';
    
    public static procedure z_Indexdv_ovr_0(var c: real);
    external 'opengl32.dll' name 'glIndexdv';
    public static procedure z_Indexdv_ovr_1(c: IntPtr);
    external 'opengl32.dll' name 'glIndexdv';
    
    public static procedure z_Indexf_ovr_0(c: single);
    external 'opengl32.dll' name 'glIndexf';
    
    public static procedure z_Indexfv_ovr_0(var c: single);
    external 'opengl32.dll' name 'glIndexfv';
    public static procedure z_Indexfv_ovr_1(c: IntPtr);
    external 'opengl32.dll' name 'glIndexfv';
    
    public static procedure z_Indexi_ovr_0(c: Int32);
    external 'opengl32.dll' name 'glIndexi';
    
    public static procedure z_Indexiv_ovr_0(var c: Int32);
    external 'opengl32.dll' name 'glIndexiv';
    public static procedure z_Indexiv_ovr_1(c: IntPtr);
    external 'opengl32.dll' name 'glIndexiv';
    
    public static procedure z_IndexMask_ovr_0(mask: UInt32);
    external 'opengl32.dll' name 'glIndexMask';
    
    public static procedure z_IndexPointer_ovr_0(&type: IndexPointerType; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glIndexPointer';
    
    public static procedure z_Indexs_ovr_0(c: Int16);
    external 'opengl32.dll' name 'glIndexs';
    
    public static procedure z_Indexsv_ovr_0(var c: Int16);
    external 'opengl32.dll' name 'glIndexsv';
    public static procedure z_Indexsv_ovr_1(c: IntPtr);
    external 'opengl32.dll' name 'glIndexsv';
    
    public static procedure z_Indexub_ovr_0(c: Byte);
    external 'opengl32.dll' name 'glIndexub';
    
    public static procedure z_Indexubv_ovr_0(var c: Byte);
    external 'opengl32.dll' name 'glIndexubv';
    public static procedure z_Indexubv_ovr_1(c: IntPtr);
    external 'opengl32.dll' name 'glIndexubv';
    
    public static procedure z_InitNames_ovr_0;
    external 'opengl32.dll' name 'glInitNames';
    
    public static procedure z_InterleavedArrays_ovr_0(format: InterleavedArrayFormat; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glInterleavedArrays';
    
    public static function z_IsList_ovr_0(list: gl_display_list): boolean;
    external 'opengl32.dll' name 'glIsList';
    
    public static procedure z_Lightf_ovr_0(light: LightName; pname: LightParameter; param: single);
    external 'opengl32.dll' name 'glLightf';
    
    public static procedure z_Lightfv_ovr_0(light: LightName; pname: LightParameter; var &params: single);
    external 'opengl32.dll' name 'glLightfv';
    public static procedure z_Lightfv_ovr_0_anh0001(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightfv';
    public static procedure z_Lightfv_ovr_2(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightfv';
    
    public static procedure z_Lighti_ovr_0(light: LightName; pname: LightParameter; param: Int32);
    external 'opengl32.dll' name 'glLighti';
    
    public static procedure z_Lightiv_ovr_0(light: LightName; pname: LightParameter; var &params: Int32);
    external 'opengl32.dll' name 'glLightiv';
    public static procedure z_Lightiv_ovr_0_anh0001(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightiv';
    public static procedure z_Lightiv_ovr_2(light: LightName; pname: LightParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightiv';
    
    public static procedure z_LightModelf_ovr_0(pname: LightModelParameter; param: single);
    external 'opengl32.dll' name 'glLightModelf';
    
    public static procedure z_LightModelfv_ovr_0(pname: LightModelParameter; var &params: single);
    external 'opengl32.dll' name 'glLightModelfv';
    public static procedure z_LightModelfv_ovr_0_anh001(pname: LightModelParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightModelfv';
    public static procedure z_LightModelfv_ovr_2(pname: LightModelParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightModelfv';
    
    public static procedure z_LightModeli_ovr_0(pname: LightModelParameter; param: Int32);
    external 'opengl32.dll' name 'glLightModeli';
    
    public static procedure z_LightModeliv_ovr_0(pname: LightModelParameter; var &params: Int32);
    external 'opengl32.dll' name 'glLightModeliv';
    public static procedure z_LightModeliv_ovr_0_anh001(pname: LightModelParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightModeliv';
    public static procedure z_LightModeliv_ovr_2(pname: LightModelParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glLightModeliv';
    
    public static procedure z_LineStipple_ovr_0(factor: Int32; pattern: UInt16);
    external 'opengl32.dll' name 'glLineStipple';
    
    public static procedure z_ListBase_ovr_0(base: UInt32);
    external 'opengl32.dll' name 'glListBase';
    
    public static procedure z_LoadIdentity_ovr_0;
    external 'opengl32.dll' name 'glLoadIdentity';
    
    public static procedure z_LoadMatrixd_ovr_0(var m: real);
    external 'opengl32.dll' name 'glLoadMatrixd';
    public static procedure z_LoadMatrixd_ovr_0_anh01(m: IntPtr);
    external 'opengl32.dll' name 'glLoadMatrixd';
    public static procedure z_LoadMatrixd_ovr_2(m: IntPtr);
    external 'opengl32.dll' name 'glLoadMatrixd';
    
    public static procedure z_LoadMatrixf_ovr_0(var m: single);
    external 'opengl32.dll' name 'glLoadMatrixf';
    public static procedure z_LoadMatrixf_ovr_0_anh01(m: IntPtr);
    external 'opengl32.dll' name 'glLoadMatrixf';
    public static procedure z_LoadMatrixf_ovr_2(m: IntPtr);
    external 'opengl32.dll' name 'glLoadMatrixf';
    
    public static procedure z_LoadName_ovr_0(name: UInt32);
    external 'opengl32.dll' name 'glLoadName';
    
    public static procedure z_Map1d_ovr_0(target: MapTarget; u1: real; u2: real; stride: Int32; order: Int32; var points: real);
    external 'opengl32.dll' name 'glMap1d';
    public static procedure z_Map1d_ovr_0_anh0000001(target: MapTarget; u1: real; u2: real; stride: Int32; order: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap1d';
    public static procedure z_Map1d_ovr_2(target: MapTarget; u1: real; u2: real; stride: Int32; order: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap1d';
    
    public static procedure z_Map1f_ovr_0(target: MapTarget; u1: single; u2: single; stride: Int32; order: Int32; var points: single);
    external 'opengl32.dll' name 'glMap1f';
    public static procedure z_Map1f_ovr_0_anh0000001(target: MapTarget; u1: single; u2: single; stride: Int32; order: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap1f';
    public static procedure z_Map1f_ovr_2(target: MapTarget; u1: single; u2: single; stride: Int32; order: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap1f';
    
    public static procedure z_Map2d_ovr_0(target: MapTarget; u1: real; u2: real; ustride: Int32; uorder: Int32; v1: real; v2: real; vstride: Int32; vorder: Int32; var points: real);
    external 'opengl32.dll' name 'glMap2d';
    public static procedure z_Map2d_ovr_0_anh00000000001(target: MapTarget; u1: real; u2: real; ustride: Int32; uorder: Int32; v1: real; v2: real; vstride: Int32; vorder: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap2d';
    public static procedure z_Map2d_ovr_2(target: MapTarget; u1: real; u2: real; ustride: Int32; uorder: Int32; v1: real; v2: real; vstride: Int32; vorder: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap2d';
    
    public static procedure z_Map2f_ovr_0(target: MapTarget; u1: single; u2: single; ustride: Int32; uorder: Int32; v1: single; v2: single; vstride: Int32; vorder: Int32; var points: single);
    external 'opengl32.dll' name 'glMap2f';
    public static procedure z_Map2f_ovr_0_anh00000000001(target: MapTarget; u1: single; u2: single; ustride: Int32; uorder: Int32; v1: single; v2: single; vstride: Int32; vorder: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap2f';
    public static procedure z_Map2f_ovr_2(target: MapTarget; u1: single; u2: single; ustride: Int32; uorder: Int32; v1: single; v2: single; vstride: Int32; vorder: Int32; points: IntPtr);
    external 'opengl32.dll' name 'glMap2f';
    
    public static procedure z_MapGrid1d_ovr_0(un: Int32; u1: real; u2: real);
    external 'opengl32.dll' name 'glMapGrid1d';
    
    public static procedure z_MapGrid1f_ovr_0(un: Int32; u1: single; u2: single);
    external 'opengl32.dll' name 'glMapGrid1f';
    
    public static procedure z_MapGrid2d_ovr_0(un: Int32; u1: real; u2: real; vn: Int32; v1: real; v2: real);
    external 'opengl32.dll' name 'glMapGrid2d';
    
    public static procedure z_MapGrid2f_ovr_0(un: Int32; u1: single; u2: single; vn: Int32; v1: single; v2: single);
    external 'opengl32.dll' name 'glMapGrid2f';
    
    public static procedure z_Materialf_ovr_0(face: MaterialFace; pname: MaterialParameter; param: single);
    external 'opengl32.dll' name 'glMaterialf';
    
    public static procedure z_Materialfv_ovr_0(face: MaterialFace; pname: MaterialParameter; var &params: single);
    external 'opengl32.dll' name 'glMaterialfv';
    public static procedure z_Materialfv_ovr_0_anh0001(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glMaterialfv';
    public static procedure z_Materialfv_ovr_2(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glMaterialfv';
    
    public static procedure z_Materiali_ovr_0(face: MaterialFace; pname: MaterialParameter; param: Int32);
    external 'opengl32.dll' name 'glMateriali';
    
    public static procedure z_Materialiv_ovr_0(face: MaterialFace; pname: MaterialParameter; var &params: Int32);
    external 'opengl32.dll' name 'glMaterialiv';
    public static procedure z_Materialiv_ovr_0_anh0001(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glMaterialiv';
    public static procedure z_Materialiv_ovr_2(face: MaterialFace; pname: MaterialParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glMaterialiv';
    
    public static procedure z_MatrixMode_ovr_0(mode: OpenGL.MatrixMode);
    external 'opengl32.dll' name 'glMatrixMode';
    
    public static procedure z_MultMatrixd_ovr_0(var m: real);
    external 'opengl32.dll' name 'glMultMatrixd';
    public static procedure z_MultMatrixd_ovr_0_anh01(m: IntPtr);
    external 'opengl32.dll' name 'glMultMatrixd';
    public static procedure z_MultMatrixd_ovr_2(m: IntPtr);
    external 'opengl32.dll' name 'glMultMatrixd';
    
    public static procedure z_MultMatrixf_ovr_0(var m: single);
    external 'opengl32.dll' name 'glMultMatrixf';
    public static procedure z_MultMatrixf_ovr_0_anh01(m: IntPtr);
    external 'opengl32.dll' name 'glMultMatrixf';
    public static procedure z_MultMatrixf_ovr_2(m: IntPtr);
    external 'opengl32.dll' name 'glMultMatrixf';
    
    public static procedure z_NewList_ovr_0(list: UInt32; mode: ListMode);
    external 'opengl32.dll' name 'glNewList';
    
    public static procedure z_Normal3b_ovr_0(nx: SByte; ny: SByte; nz: SByte);
    external 'opengl32.dll' name 'glNormal3b';
    
    public static procedure z_Normal3bv_ovr_0(var v: SByte);
    external 'opengl32.dll' name 'glNormal3bv';
    public static procedure z_Normal3bv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3bv';
    public static procedure z_Normal3bv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3bv';
    
    public static procedure z_Normal3d_ovr_0(nx: real; ny: real; nz: real);
    external 'opengl32.dll' name 'glNormal3d';
    
    public static procedure z_Normal3dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glNormal3dv';
    public static procedure z_Normal3dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3dv';
    public static procedure z_Normal3dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3dv';
    
    public static procedure z_Normal3f_ovr_0(nx: single; ny: single; nz: single);
    external 'opengl32.dll' name 'glNormal3f';
    
    public static procedure z_Normal3fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glNormal3fv';
    public static procedure z_Normal3fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3fv';
    public static procedure z_Normal3fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3fv';
    
    public static procedure z_Normal3i_ovr_0(nx: Int32; ny: Int32; nz: Int32);
    external 'opengl32.dll' name 'glNormal3i';
    
    public static procedure z_Normal3iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glNormal3iv';
    public static procedure z_Normal3iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3iv';
    public static procedure z_Normal3iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3iv';
    
    public static procedure z_Normal3s_ovr_0(nx: Int16; ny: Int16; nz: Int16);
    external 'opengl32.dll' name 'glNormal3s';
    
    public static procedure z_Normal3sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glNormal3sv';
    public static procedure z_Normal3sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3sv';
    public static procedure z_Normal3sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glNormal3sv';
    
    public static procedure z_NormalPointer_ovr_0(&type: NormalPointerType; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glNormalPointer';
    
    public static procedure z_Ortho_ovr_0(left: real; right: real; bottom: real; top: real; zNear: real; zFar: real);
    external 'opengl32.dll' name 'glOrtho';
    
    public static procedure z_PassThrough_ovr_0(token: single);
    external 'opengl32.dll' name 'glPassThrough';
    
    public static procedure z_PixelMapfv_ovr_0(map: PixelMap; mapsize: Int32; var values: single);
    external 'opengl32.dll' name 'glPixelMapfv';
    public static procedure z_PixelMapfv_ovr_0_anh0001(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapfv';
    public static procedure z_PixelMapfv_ovr_2(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapfv';
    
    public static procedure z_PixelMapuiv_ovr_0(map: PixelMap; mapsize: Int32; var values: UInt32);
    external 'opengl32.dll' name 'glPixelMapuiv';
    public static procedure z_PixelMapuiv_ovr_0_anh0001(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapuiv';
    public static procedure z_PixelMapuiv_ovr_2(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapuiv';
    
    public static procedure z_PixelMapusv_ovr_0(map: PixelMap; mapsize: Int32; var values: UInt16);
    external 'opengl32.dll' name 'glPixelMapusv';
    public static procedure z_PixelMapusv_ovr_0_anh0001(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapusv';
    public static procedure z_PixelMapusv_ovr_2(map: PixelMap; mapsize: Int32; values: IntPtr);
    external 'opengl32.dll' name 'glPixelMapusv';
    
    public static procedure z_PixelTransferf_ovr_0(pname: PixelTransferParameter; param: single);
    external 'opengl32.dll' name 'glPixelTransferf';
    
    public static procedure z_PixelTransferi_ovr_0(pname: PixelTransferParameter; param: Int32);
    external 'opengl32.dll' name 'glPixelTransferi';
    
    public static procedure z_PixelZoom_ovr_0(xfactor: single; yfactor: single);
    external 'opengl32.dll' name 'glPixelZoom';
    
    public static procedure z_PolygonStipple_ovr_0(var mask: Byte);
    external 'opengl32.dll' name 'glPolygonStipple';
    public static procedure z_PolygonStipple_ovr_0_anh01(mask: IntPtr);
    external 'opengl32.dll' name 'glPolygonStipple';
    public static procedure z_PolygonStipple_ovr_2(mask: IntPtr);
    external 'opengl32.dll' name 'glPolygonStipple';
    
    public static procedure z_PopAttrib_ovr_0;
    external 'opengl32.dll' name 'glPopAttrib';
    
    public static procedure z_PopClientAttrib_ovr_0;
    external 'opengl32.dll' name 'glPopClientAttrib';
    
    public static procedure z_PopMatrix_ovr_0;
    external 'opengl32.dll' name 'glPopMatrix';
    
    public static procedure z_PopName_ovr_0;
    external 'opengl32.dll' name 'glPopName';
    
    public static procedure z_PrioritizeTextures_ovr_0(n: Int32; var textures: gl_texture; var priorities: single);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_0_anh0010(n: Int32; textures: IntPtr; var priorities: single);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_0_anh0001(n: Int32; var textures: gl_texture; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_0_anh0011(n: Int32; textures: IntPtr; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_1_anh0010(n: Int32; textures: IntPtr; var priorities: single);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_2(n: Int32; var textures: gl_texture; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_2_anh0010(n: Int32; textures: IntPtr; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_6(n: Int32; textures: IntPtr; var priorities: single);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_6_anh0001(n: Int32; textures: IntPtr; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    public static procedure z_PrioritizeTextures_ovr_8(n: Int32; textures: IntPtr; priorities: IntPtr);
    external 'opengl32.dll' name 'glPrioritizeTextures';
    
    public static procedure z_PushAttrib_ovr_0(mask: AttribMask);
    external 'opengl32.dll' name 'glPushAttrib';
    
    public static procedure z_PushClientAttrib_ovr_0(mask: ClientAttribMask);
    external 'opengl32.dll' name 'glPushClientAttrib';
    
    public static procedure z_PushMatrix_ovr_0;
    external 'opengl32.dll' name 'glPushMatrix';
    
    public static procedure z_PushName_ovr_0(name: UInt32);
    external 'opengl32.dll' name 'glPushName';
    
    public static procedure z_RasterPos2d_ovr_0(x: real; y: real);
    external 'opengl32.dll' name 'glRasterPos2d';
    
    public static procedure z_RasterPos2dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glRasterPos2dv';
    public static procedure z_RasterPos2dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2dv';
    public static procedure z_RasterPos2dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2dv';
    
    public static procedure z_RasterPos2f_ovr_0(x: single; y: single);
    external 'opengl32.dll' name 'glRasterPos2f';
    
    public static procedure z_RasterPos2fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glRasterPos2fv';
    public static procedure z_RasterPos2fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2fv';
    public static procedure z_RasterPos2fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2fv';
    
    public static procedure z_RasterPos2i_ovr_0(x: Int32; y: Int32);
    external 'opengl32.dll' name 'glRasterPos2i';
    
    public static procedure z_RasterPos2iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glRasterPos2iv';
    public static procedure z_RasterPos2iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2iv';
    public static procedure z_RasterPos2iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2iv';
    
    public static procedure z_RasterPos2s_ovr_0(x: Int16; y: Int16);
    external 'opengl32.dll' name 'glRasterPos2s';
    
    public static procedure z_RasterPos2sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glRasterPos2sv';
    public static procedure z_RasterPos2sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2sv';
    public static procedure z_RasterPos2sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos2sv';
    
    public static procedure z_RasterPos3d_ovr_0(x: real; y: real; z: real);
    external 'opengl32.dll' name 'glRasterPos3d';
    
    public static procedure z_RasterPos3dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glRasterPos3dv';
    public static procedure z_RasterPos3dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3dv';
    public static procedure z_RasterPos3dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3dv';
    
    public static procedure z_RasterPos3f_ovr_0(x: single; y: single; z: single);
    external 'opengl32.dll' name 'glRasterPos3f';
    
    public static procedure z_RasterPos3fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glRasterPos3fv';
    public static procedure z_RasterPos3fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3fv';
    public static procedure z_RasterPos3fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3fv';
    
    public static procedure z_RasterPos3i_ovr_0(x: Int32; y: Int32; z: Int32);
    external 'opengl32.dll' name 'glRasterPos3i';
    
    public static procedure z_RasterPos3iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glRasterPos3iv';
    public static procedure z_RasterPos3iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3iv';
    public static procedure z_RasterPos3iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3iv';
    
    public static procedure z_RasterPos3s_ovr_0(x: Int16; y: Int16; z: Int16);
    external 'opengl32.dll' name 'glRasterPos3s';
    
    public static procedure z_RasterPos3sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glRasterPos3sv';
    public static procedure z_RasterPos3sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3sv';
    public static procedure z_RasterPos3sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos3sv';
    
    public static procedure z_RasterPos4d_ovr_0(x: real; y: real; z: real; w: real);
    external 'opengl32.dll' name 'glRasterPos4d';
    
    public static procedure z_RasterPos4dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glRasterPos4dv';
    public static procedure z_RasterPos4dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4dv';
    public static procedure z_RasterPos4dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4dv';
    
    public static procedure z_RasterPos4f_ovr_0(x: single; y: single; z: single; w: single);
    external 'opengl32.dll' name 'glRasterPos4f';
    
    public static procedure z_RasterPos4fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glRasterPos4fv';
    public static procedure z_RasterPos4fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4fv';
    public static procedure z_RasterPos4fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4fv';
    
    public static procedure z_RasterPos4i_ovr_0(x: Int32; y: Int32; z: Int32; w: Int32);
    external 'opengl32.dll' name 'glRasterPos4i';
    
    public static procedure z_RasterPos4iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glRasterPos4iv';
    public static procedure z_RasterPos4iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4iv';
    public static procedure z_RasterPos4iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4iv';
    
    public static procedure z_RasterPos4s_ovr_0(x: Int16; y: Int16; z: Int16; w: Int16);
    external 'opengl32.dll' name 'glRasterPos4s';
    
    public static procedure z_RasterPos4sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glRasterPos4sv';
    public static procedure z_RasterPos4sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4sv';
    public static procedure z_RasterPos4sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glRasterPos4sv';
    
    public static procedure z_Rectd_ovr_0(x1: real; y1: real; x2: real; y2: real);
    external 'opengl32.dll' name 'glRectd';
    
    public static procedure z_Rectdv_ovr_0(var v1: real; var v2: real);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_0_anh010(v1: IntPtr; var v2: real);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_0_anh001(var v1: real; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_0_anh011(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_1_anh010(v1: IntPtr; var v2: real);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_2(var v1: real; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_2_anh010(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_6(v1: IntPtr; var v2: real);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_6_anh001(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    public static procedure z_Rectdv_ovr_8(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectdv';
    
    public static procedure z_Rectf_ovr_0(x1: single; y1: single; x2: single; y2: single);
    external 'opengl32.dll' name 'glRectf';
    
    public static procedure z_Rectfv_ovr_0(var v1: single; var v2: single);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_0_anh010(v1: IntPtr; var v2: single);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_0_anh001(var v1: single; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_0_anh011(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_1_anh010(v1: IntPtr; var v2: single);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_2(var v1: single; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_2_anh010(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_6(v1: IntPtr; var v2: single);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_6_anh001(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    public static procedure z_Rectfv_ovr_8(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectfv';
    
    public static procedure z_Recti_ovr_0(x1: Int32; y1: Int32; x2: Int32; y2: Int32);
    external 'opengl32.dll' name 'glRecti';
    
    public static procedure z_Rectiv_ovr_0(var v1: Int32; var v2: Int32);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_0_anh010(v1: IntPtr; var v2: Int32);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_0_anh001(var v1: Int32; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_0_anh011(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_1_anh010(v1: IntPtr; var v2: Int32);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_2(var v1: Int32; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_2_anh010(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_6(v1: IntPtr; var v2: Int32);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_6_anh001(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    public static procedure z_Rectiv_ovr_8(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectiv';
    
    public static procedure z_Rects_ovr_0(x1: Int16; y1: Int16; x2: Int16; y2: Int16);
    external 'opengl32.dll' name 'glRects';
    
    public static procedure z_Rectsv_ovr_0(var v1: Int16; var v2: Int16);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_0_anh010(v1: IntPtr; var v2: Int16);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_0_anh001(var v1: Int16; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_0_anh011(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_1_anh010(v1: IntPtr; var v2: Int16);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_2(var v1: Int16; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_2_anh010(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_6(v1: IntPtr; var v2: Int16);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_6_anh001(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    public static procedure z_Rectsv_ovr_8(v1: IntPtr; v2: IntPtr);
    external 'opengl32.dll' name 'glRectsv';
    
    public static function z_RenderMode_ovr_0(mode: RenderingMode): Int32;
    external 'opengl32.dll' name 'glRenderMode';
    
    public static procedure z_Rotated_ovr_0(angle: real; x: real; y: real; z: real);
    external 'opengl32.dll' name 'glRotated';
    
    public static procedure z_Rotatef_ovr_0(angle: single; x: single; y: single; z: single);
    external 'opengl32.dll' name 'glRotatef';
    
    public static procedure z_Scaled_ovr_0(x: real; y: real; z: real);
    external 'opengl32.dll' name 'glScaled';
    
    public static procedure z_Scalef_ovr_0(x: single; y: single; z: single);
    external 'opengl32.dll' name 'glScalef';
    
    public static procedure z_SelectBuffer_ovr_0(size: Int32; var buffer: UInt32);
    external 'opengl32.dll' name 'glSelectBuffer';
    public static procedure z_SelectBuffer_ovr_0_anh001(size: Int32; buffer: IntPtr);
    external 'opengl32.dll' name 'glSelectBuffer';
    public static procedure z_SelectBuffer_ovr_2(size: Int32; buffer: IntPtr);
    external 'opengl32.dll' name 'glSelectBuffer';
    
    public static procedure z_ShadeModel_ovr_0(mode: ShadingModel);
    external 'opengl32.dll' name 'glShadeModel';
    
    public static procedure z_TexCoord1d_ovr_0(s: real);
    external 'opengl32.dll' name 'glTexCoord1d';
    
    public static procedure z_TexCoord1dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glTexCoord1dv';
    public static procedure z_TexCoord1dv_ovr_1(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord1dv';
    
    public static procedure z_TexCoord1f_ovr_0(s: single);
    external 'opengl32.dll' name 'glTexCoord1f';
    
    public static procedure z_TexCoord1fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glTexCoord1fv';
    public static procedure z_TexCoord1fv_ovr_1(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord1fv';
    
    public static procedure z_TexCoord1i_ovr_0(s: Int32);
    external 'opengl32.dll' name 'glTexCoord1i';
    
    public static procedure z_TexCoord1iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glTexCoord1iv';
    public static procedure z_TexCoord1iv_ovr_1(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord1iv';
    
    public static procedure z_TexCoord1s_ovr_0(s: Int16);
    external 'opengl32.dll' name 'glTexCoord1s';
    
    public static procedure z_TexCoord1sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glTexCoord1sv';
    public static procedure z_TexCoord1sv_ovr_1(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord1sv';
    
    public static procedure z_TexCoord2d_ovr_0(s: real; t: real);
    external 'opengl32.dll' name 'glTexCoord2d';
    
    public static procedure z_TexCoord2dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glTexCoord2dv';
    public static procedure z_TexCoord2dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2dv';
    public static procedure z_TexCoord2dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2dv';
    
    public static procedure z_TexCoord2f_ovr_0(s: single; t: single);
    external 'opengl32.dll' name 'glTexCoord2f';
    
    public static procedure z_TexCoord2fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glTexCoord2fv';
    public static procedure z_TexCoord2fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2fv';
    public static procedure z_TexCoord2fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2fv';
    
    public static procedure z_TexCoord2i_ovr_0(s: Int32; t: Int32);
    external 'opengl32.dll' name 'glTexCoord2i';
    
    public static procedure z_TexCoord2iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glTexCoord2iv';
    public static procedure z_TexCoord2iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2iv';
    public static procedure z_TexCoord2iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2iv';
    
    public static procedure z_TexCoord2s_ovr_0(s: Int16; t: Int16);
    external 'opengl32.dll' name 'glTexCoord2s';
    
    public static procedure z_TexCoord2sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glTexCoord2sv';
    public static procedure z_TexCoord2sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2sv';
    public static procedure z_TexCoord2sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord2sv';
    
    public static procedure z_TexCoord3d_ovr_0(s: real; t: real; r: real);
    external 'opengl32.dll' name 'glTexCoord3d';
    
    public static procedure z_TexCoord3dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glTexCoord3dv';
    public static procedure z_TexCoord3dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3dv';
    public static procedure z_TexCoord3dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3dv';
    
    public static procedure z_TexCoord3f_ovr_0(s: single; t: single; r: single);
    external 'opengl32.dll' name 'glTexCoord3f';
    
    public static procedure z_TexCoord3fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glTexCoord3fv';
    public static procedure z_TexCoord3fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3fv';
    public static procedure z_TexCoord3fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3fv';
    
    public static procedure z_TexCoord3i_ovr_0(s: Int32; t: Int32; r: Int32);
    external 'opengl32.dll' name 'glTexCoord3i';
    
    public static procedure z_TexCoord3iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glTexCoord3iv';
    public static procedure z_TexCoord3iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3iv';
    public static procedure z_TexCoord3iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3iv';
    
    public static procedure z_TexCoord3s_ovr_0(s: Int16; t: Int16; r: Int16);
    external 'opengl32.dll' name 'glTexCoord3s';
    
    public static procedure z_TexCoord3sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glTexCoord3sv';
    public static procedure z_TexCoord3sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3sv';
    public static procedure z_TexCoord3sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord3sv';
    
    public static procedure z_TexCoord4d_ovr_0(s: real; t: real; r: real; q: real);
    external 'opengl32.dll' name 'glTexCoord4d';
    
    public static procedure z_TexCoord4dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glTexCoord4dv';
    public static procedure z_TexCoord4dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4dv';
    public static procedure z_TexCoord4dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4dv';
    
    public static procedure z_TexCoord4f_ovr_0(s: single; t: single; r: single; q: single);
    external 'opengl32.dll' name 'glTexCoord4f';
    
    public static procedure z_TexCoord4fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glTexCoord4fv';
    public static procedure z_TexCoord4fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4fv';
    public static procedure z_TexCoord4fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4fv';
    
    public static procedure z_TexCoord4i_ovr_0(s: Int32; t: Int32; r: Int32; q: Int32);
    external 'opengl32.dll' name 'glTexCoord4i';
    
    public static procedure z_TexCoord4iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glTexCoord4iv';
    public static procedure z_TexCoord4iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4iv';
    public static procedure z_TexCoord4iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4iv';
    
    public static procedure z_TexCoord4s_ovr_0(s: Int16; t: Int16; r: Int16; q: Int16);
    external 'opengl32.dll' name 'glTexCoord4s';
    
    public static procedure z_TexCoord4sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glTexCoord4sv';
    public static procedure z_TexCoord4sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4sv';
    public static procedure z_TexCoord4sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glTexCoord4sv';
    
    public static procedure z_TexCoordPointer_ovr_0(size: Int32; &type: TexCoordPointerType; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glTexCoordPointer';
    
    public static procedure z_TexEnvf_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; param: single);
    external 'opengl32.dll' name 'glTexEnvf';
    
    public static procedure z_TexEnvfv_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; var &params: single);
    external 'opengl32.dll' name 'glTexEnvfv';
    public static procedure z_TexEnvfv_ovr_0_anh0001(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexEnvfv';
    public static procedure z_TexEnvfv_ovr_2(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexEnvfv';
    
    public static procedure z_TexEnvi_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; param: Int32);
    external 'opengl32.dll' name 'glTexEnvi';
    
    public static procedure z_TexEnviv_ovr_0(target: TextureEnvTarget; pname: TextureEnvParameter; var &params: Int32);
    external 'opengl32.dll' name 'glTexEnviv';
    public static procedure z_TexEnviv_ovr_0_anh0001(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexEnviv';
    public static procedure z_TexEnviv_ovr_2(target: TextureEnvTarget; pname: TextureEnvParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexEnviv';
    
    public static procedure z_TexGend_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; param: real);
    external 'opengl32.dll' name 'glTexGend';
    
    public static procedure z_TexGendv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: real);
    external 'opengl32.dll' name 'glTexGendv';
    public static procedure z_TexGendv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGendv';
    public static procedure z_TexGendv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGendv';
    
    public static procedure z_TexGenf_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; param: single);
    external 'opengl32.dll' name 'glTexGenf';
    
    public static procedure z_TexGenfv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: single);
    external 'opengl32.dll' name 'glTexGenfv';
    public static procedure z_TexGenfv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGenfv';
    public static procedure z_TexGenfv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGenfv';
    
    public static procedure z_TexGeni_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; param: Int32);
    external 'opengl32.dll' name 'glTexGeni';
    
    public static procedure z_TexGeniv_ovr_0(coord: TextureCoordName; pname: TextureGenParameter; var &params: Int32);
    external 'opengl32.dll' name 'glTexGeniv';
    public static procedure z_TexGeniv_ovr_0_anh0001(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGeniv';
    public static procedure z_TexGeniv_ovr_2(coord: TextureCoordName; pname: TextureGenParameter; &params: IntPtr);
    external 'opengl32.dll' name 'glTexGeniv';
    
    public static procedure z_Translated_ovr_0(x: real; y: real; z: real);
    external 'opengl32.dll' name 'glTranslated';
    
    public static procedure z_Translatef_ovr_0(x: single; y: single; z: single);
    external 'opengl32.dll' name 'glTranslatef';
    
    public static procedure z_Vertex2d_ovr_0(x: real; y: real);
    external 'opengl32.dll' name 'glVertex2d';
    
    public static procedure z_Vertex2dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glVertex2dv';
    public static procedure z_Vertex2dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2dv';
    public static procedure z_Vertex2dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2dv';
    
    public static procedure z_Vertex2f_ovr_0(x: single; y: single);
    external 'opengl32.dll' name 'glVertex2f';
    
    public static procedure z_Vertex2fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glVertex2fv';
    public static procedure z_Vertex2fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2fv';
    public static procedure z_Vertex2fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2fv';
    
    public static procedure z_Vertex2i_ovr_0(x: Int32; y: Int32);
    external 'opengl32.dll' name 'glVertex2i';
    
    public static procedure z_Vertex2iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glVertex2iv';
    public static procedure z_Vertex2iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2iv';
    public static procedure z_Vertex2iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2iv';
    
    public static procedure z_Vertex2s_ovr_0(x: Int16; y: Int16);
    external 'opengl32.dll' name 'glVertex2s';
    
    public static procedure z_Vertex2sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glVertex2sv';
    public static procedure z_Vertex2sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2sv';
    public static procedure z_Vertex2sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex2sv';
    
    public static procedure z_Vertex3d_ovr_0(x: real; y: real; z: real);
    external 'opengl32.dll' name 'glVertex3d';
    
    public static procedure z_Vertex3dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glVertex3dv';
    public static procedure z_Vertex3dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3dv';
    public static procedure z_Vertex3dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3dv';
    
    public static procedure z_Vertex3f_ovr_0(x: single; y: single; z: single);
    external 'opengl32.dll' name 'glVertex3f';
    
    public static procedure z_Vertex3fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glVertex3fv';
    public static procedure z_Vertex3fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3fv';
    public static procedure z_Vertex3fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3fv';
    
    public static procedure z_Vertex3i_ovr_0(x: Int32; y: Int32; z: Int32);
    external 'opengl32.dll' name 'glVertex3i';
    
    public static procedure z_Vertex3iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glVertex3iv';
    public static procedure z_Vertex3iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3iv';
    public static procedure z_Vertex3iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3iv';
    
    public static procedure z_Vertex3s_ovr_0(x: Int16; y: Int16; z: Int16);
    external 'opengl32.dll' name 'glVertex3s';
    
    public static procedure z_Vertex3sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glVertex3sv';
    public static procedure z_Vertex3sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3sv';
    public static procedure z_Vertex3sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex3sv';
    
    public static procedure z_Vertex4d_ovr_0(x: real; y: real; z: real; w: real);
    external 'opengl32.dll' name 'glVertex4d';
    
    public static procedure z_Vertex4dv_ovr_0(var v: real);
    external 'opengl32.dll' name 'glVertex4dv';
    public static procedure z_Vertex4dv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4dv';
    public static procedure z_Vertex4dv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4dv';
    
    public static procedure z_Vertex4f_ovr_0(x: single; y: single; z: single; w: single);
    external 'opengl32.dll' name 'glVertex4f';
    
    public static procedure z_Vertex4fv_ovr_0(var v: single);
    external 'opengl32.dll' name 'glVertex4fv';
    public static procedure z_Vertex4fv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4fv';
    public static procedure z_Vertex4fv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4fv';
    
    public static procedure z_Vertex4i_ovr_0(x: Int32; y: Int32; z: Int32; w: Int32);
    external 'opengl32.dll' name 'glVertex4i';
    
    public static procedure z_Vertex4iv_ovr_0(var v: Int32);
    external 'opengl32.dll' name 'glVertex4iv';
    public static procedure z_Vertex4iv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4iv';
    public static procedure z_Vertex4iv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4iv';
    
    public static procedure z_Vertex4s_ovr_0(x: Int16; y: Int16; z: Int16; w: Int16);
    external 'opengl32.dll' name 'glVertex4s';
    
    public static procedure z_Vertex4sv_ovr_0(var v: Int16);
    external 'opengl32.dll' name 'glVertex4sv';
    public static procedure z_Vertex4sv_ovr_0_anh01(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4sv';
    public static procedure z_Vertex4sv_ovr_2(v: IntPtr);
    external 'opengl32.dll' name 'glVertex4sv';
    
    public static procedure z_VertexPointer_ovr_0(size: Int32; &type: VertexPointerType; stride: Int32; pointer: IntPtr);
    external 'opengl32.dll' name 'glVertexPointer';
    
  end;
  
  
  