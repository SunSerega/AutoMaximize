  
  
  
  [PCUNotRestore]
  cl = static class
    
    // added in cl1.0
    private static function z_BuildProgram_ovr_0(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clBuildProgram';
    private static function z_BuildProgram_ovr_0_anh0001000(&program: cl_program; num_devices: UInt32; device_list: IntPtr; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clBuildProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; device_list: array of cl_device_id; options: string; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (device_list<>nil) and (device_list.Length<>0) then
          Result := z_BuildProgram_ovr_0(&program, num_devices, device_list[0], par_4_str_ptr, pfn_notify, user_data) else
          Result := z_BuildProgram_ovr_0_anh0001000(&program, num_devices, IntPtr.Zero, par_4_str_ptr, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_BuildProgram_ovr_1_anh0001000(&program: cl_program; num_devices: UInt32; device_list: IntPtr; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clBuildProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; device_list: array of cl_device_id; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    if (device_list<>nil) and (device_list.Length<>0) then
      z_BuildProgram_ovr_0(&program, num_devices, device_list[0], options, pfn_notify, user_data) else
      z_BuildProgram_ovr_0_anh0001000(&program, num_devices, IntPtr.Zero, options, pfn_notify, user_data);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: string; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_BuildProgram_ovr_0(&program, num_devices, device_list, par_4_str_ptr, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    z_BuildProgram_ovr_0(&program, num_devices, device_list, options, pfn_notify, user_data);
    private static function z_BuildProgram_ovr_4(&program: cl_program; num_devices: UInt32; device_list: IntPtr; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clBuildProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; device_list: IntPtr; options: string; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_BuildProgram_ovr_4(&program, num_devices, device_list, par_4_str_ptr, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function BuildProgram(&program: cl_program; num_devices: UInt32; device_list: IntPtr; options: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    z_BuildProgram_ovr_4(&program, num_devices, device_list, options, pfn_notify, user_data);
    
    // added in cl2.1
    private static function z_CloneKernel_ovr_0(source_kernel: cl_kernel; var errcode_ret: ErrorCode): cl_kernel;
    external 'opencl.dll' name 'clCloneKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CloneKernel(source_kernel: cl_kernel; var errcode_ret: ErrorCode): cl_kernel :=
    z_CloneKernel_ovr_0(source_kernel, errcode_ret);
    
    // added in cl1.2
    private static function z_CompileProgram_ovr_0(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; var header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    private static function z_CompileProgram_ovr_0_anh0000000100(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: array of string; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_7_str_ptr: array of IntPtr;
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        par_7_str_ptr := header_include_names?.ConvertAll(arr_el1->Marshal.StringToHGlobalAnsi(arr_el1));
        if (par_7_str_ptr<>nil) and (par_7_str_ptr.Length<>0) then
          Result := z_CompileProgram_ovr_0(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, par_7_str_ptr[0], pfn_notify, user_data) else
          Result := z_CompileProgram_ovr_0_anh0000000100(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, IntPtr.Zero, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
        foreach var arr_el1 in par_7_str_ptr do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CompileProgram_ovr_1_anh0000000100(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: array of IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (header_include_names<>nil) and (header_include_names.Length<>0) then
          Result := z_CompileProgram_ovr_0(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, header_include_names[0], pfn_notify, user_data) else
          Result := z_CompileProgram_ovr_0_anh0000000100(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, IntPtr.Zero, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_headers: UInt32; var input_headers: cl_program; var header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_CompileProgram_ovr_0(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, header_include_names, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_CompileProgram_ovr_3(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; input_headers: IntPtr; header_include_names: pointer; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_headers: UInt32; input_headers: IntPtr; header_include_names: pointer; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_CompileProgram_ovr_3(&program, num_devices, device_list, par_4_str_ptr, num_input_headers, input_headers, header_include_names, pfn_notify, user_data);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_CompileProgram_ovr_4_anh0000000100(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: array of string; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    begin
      var par_7_str_ptr: array of IntPtr;
      try
        par_7_str_ptr := header_include_names?.ConvertAll(arr_el1->Marshal.StringToHGlobalAnsi(arr_el1));
        if (par_7_str_ptr<>nil) and (par_7_str_ptr.Length<>0) then
          Result := z_CompileProgram_ovr_0(&program, num_devices, device_list, options, num_input_headers, input_headers, par_7_str_ptr[0], pfn_notify, user_data) else
          Result := z_CompileProgram_ovr_0_anh0000000100(&program, num_devices, device_list, options, num_input_headers, input_headers, IntPtr.Zero, pfn_notify, user_data);
      finally
        foreach var arr_el1 in par_7_str_ptr do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CompileProgram_ovr_5_anh0000000100(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCompileProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; header_include_names: array of IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    if (header_include_names<>nil) and (header_include_names.Length<>0) then
      z_CompileProgram_ovr_0(&program, num_devices, device_list, options, num_input_headers, input_headers, header_include_names[0], pfn_notify, user_data) else
      z_CompileProgram_ovr_0_anh0000000100(&program, num_devices, device_list, options, num_input_headers, input_headers, IntPtr.Zero, pfn_notify, user_data);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; var input_headers: cl_program; var header_include_names: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    z_CompileProgram_ovr_0(&program, num_devices, device_list, options, num_input_headers, input_headers, header_include_names, pfn_notify, user_data);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CompileProgram(&program: cl_program; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_headers: UInt32; input_headers: IntPtr; header_include_names: pointer; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    z_CompileProgram_ovr_3(&program, num_devices, device_list, options, num_input_headers, input_headers, header_include_names, pfn_notify, user_data);
    
    // added in cl1.0
    private static function z_CreateBuffer_ovr_0(context: cl_context; flags: MemFlags; size: UIntPtr; var host_ptr: Byte; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_CreateBuffer_ovr_0<T>(context: cl_context; flags: MemFlags; size: UIntPtr; var host_ptr: T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      Result := z_CreateBuffer_ovr_0(context, flags, size, PByte(pointer(@host_ptr))^, errcode_ret);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_CreateBuffer_ovr_0_anh000010(context: cl_context; flags: MemFlags; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBuffer_ovr_0(context, flags, size, PByte(nil)^, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBuffer<T>(context: cl_context; flags: MemFlags; size: UIntPtr; host_ptr: array of T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      if (host_ptr<>nil) and (host_ptr.Length<>0) then
        Result := temp_CreateBuffer_ovr_0(context, flags, size, host_ptr[0], errcode_ret) else
        Result := temp_CreateBuffer_ovr_0_anh000010(context, flags, size, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBuffer<T>(context: cl_context; flags: MemFlags; size: UIntPtr; var host_ptr: T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      Result := z_CreateBuffer_ovr_0(context, flags, size, PByte(pointer(@host_ptr))^, errcode_ret);
    end;
    private static function z_CreateBuffer_ovr_2(context: cl_context; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBuffer(context: cl_context; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBuffer_ovr_2(context, flags, size, host_ptr, errcode_ret);
    
    // added in cl3.0
    private static function z_CreateBufferWithProperties_ovr_0(context: cl_context; var properties: UInt64; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithProperties';
    private static function z_CreateBufferWithProperties_ovr_0_anh0010000(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateBufferWithProperties_ovr_0(context, properties[0], flags, size, host_ptr, errcode_ret) else
      z_CreateBufferWithProperties_ovr_0_anh0010000(context, IntPtr.Zero, flags, size, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBufferWithProperties_ovr_0(context, properties, flags, size, host_ptr, errcode_ret);
    private static function z_CreateBufferWithProperties_ovr_2(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBufferWithProperties_ovr_2(context, properties, flags, size, host_ptr, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateCommandQueue_ovr_0(context: cl_context; device: cl_device_id; properties: CommandQueueProperties; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueue';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueue(context: cl_context; device: cl_device_id; properties: CommandQueueProperties; var errcode_ret: ErrorCode): cl_command_queue :=
    z_CreateCommandQueue_ovr_0(context, device, properties, errcode_ret);
    
    // added in cl2.0
    private static function z_CreateCommandQueueWithProperties_ovr_0(context: cl_context; device: cl_device_id; var properties: QueueProperties; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithProperties';
    private static function z_CreateCommandQueueWithProperties_ovr_0_anh00010(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithProperties(context: cl_context; device: cl_device_id; properties: array of QueueProperties; var errcode_ret: ErrorCode): cl_command_queue :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateCommandQueueWithProperties_ovr_0(context, device, properties[0], errcode_ret) else
      z_CreateCommandQueueWithProperties_ovr_0_anh00010(context, device, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithProperties(context: cl_context; device: cl_device_id; var properties: QueueProperties; var errcode_ret: ErrorCode): cl_command_queue :=
    z_CreateCommandQueueWithProperties_ovr_0(context, device, properties, errcode_ret);
    private static function z_CreateCommandQueueWithProperties_ovr_2(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithProperties(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue :=
    z_CreateCommandQueueWithProperties_ovr_2(context, device, properties, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateContext_ovr_0(var properties: ContextProperties; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    private static function z_CreateContext_ovr_0_anh0100000(properties: IntPtr; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    private static function z_CreateContext_ovr_0_anh0001000(var properties: ContextProperties; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    private static function z_CreateContext_ovr_0_anh0101000(properties: IntPtr; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: array of ContextProperties; num_devices: UInt32; devices: array of cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (properties<>nil) and (properties.Length<>0) then
      if (devices<>nil) and (devices.Length<>0) then
        z_CreateContext_ovr_0(properties[0], num_devices, devices[0], pfn_notify, user_data, errcode_ret) else
        z_CreateContext_ovr_0_anh0001000(properties[0], num_devices, IntPtr.Zero, pfn_notify, user_data, errcode_ret) else
      if (devices<>nil) and (devices.Length<>0) then
        z_CreateContext_ovr_0_anh0100000(IntPtr.Zero, num_devices, devices[0], pfn_notify, user_data, errcode_ret) else
        z_CreateContext_ovr_0_anh0101000(IntPtr.Zero, num_devices, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    private static function z_CreateContext_ovr_1_anh0100000(properties: IntPtr; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: array of ContextProperties; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateContext_ovr_0(properties[0], num_devices, devices, pfn_notify, user_data, errcode_ret) else
      z_CreateContext_ovr_0_anh0100000(IntPtr.Zero, num_devices, devices, pfn_notify, user_data, errcode_ret);
    private static function z_CreateContext_ovr_2(var properties: ContextProperties; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    private static function z_CreateContext_ovr_2_anh0100000(properties: IntPtr; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: array of ContextProperties; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateContext_ovr_2(properties[0], num_devices, devices, pfn_notify, user_data, errcode_ret) else
      z_CreateContext_ovr_2_anh0100000(IntPtr.Zero, num_devices, devices, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(var properties: ContextProperties; num_devices: UInt32; devices: array of cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (devices<>nil) and (devices.Length<>0) then
      z_CreateContext_ovr_0(properties, num_devices, devices[0], pfn_notify, user_data, errcode_ret) else
      z_CreateContext_ovr_0_anh0001000(properties, num_devices, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(var properties: ContextProperties; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContext_ovr_0(properties, num_devices, devices, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(var properties: ContextProperties; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContext_ovr_2(properties, num_devices, devices, pfn_notify, user_data, errcode_ret);
    private static function z_CreateContext_ovr_6(properties: IntPtr; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    private static function z_CreateContext_ovr_6_anh0001000(properties: IntPtr; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: IntPtr; num_devices: UInt32; devices: array of cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (devices<>nil) and (devices.Length<>0) then
      z_CreateContext_ovr_6(properties, num_devices, devices[0], pfn_notify, user_data, errcode_ret) else
      z_CreateContext_ovr_6_anh0001000(properties, num_devices, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: IntPtr; num_devices: UInt32; var devices: cl_device_id; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContext_ovr_6(properties, num_devices, devices, pfn_notify, user_data, errcode_ret);
    private static function z_CreateContext_ovr_8(properties: IntPtr; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContext(properties: IntPtr; num_devices: UInt32; devices: IntPtr; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContext_ovr_8(properties, num_devices, devices, pfn_notify, user_data, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateContextFromType_ovr_0(var properties: ContextProperties; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContextFromType';
    private static function z_CreateContextFromType_ovr_0_anh010000(properties: IntPtr; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContextFromType';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContextFromType(properties: array of ContextProperties; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateContextFromType_ovr_0(properties[0], device_type, pfn_notify, user_data, errcode_ret) else
      z_CreateContextFromType_ovr_0_anh010000(IntPtr.Zero, device_type, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContextFromType(var properties: ContextProperties; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContextFromType_ovr_0(properties, device_type, pfn_notify, user_data, errcode_ret);
    private static function z_CreateContextFromType_ovr_2(properties: IntPtr; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context;
    external 'opencl.dll' name 'clCreateContextFromType';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateContextFromType(properties: IntPtr; device_type: DeviceType; pfn_notify: CreateContextCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_context :=
    z_CreateContextFromType_ovr_2(properties, device_type, pfn_notify, user_data, errcode_ret);
    
    // added in cl1.2
    private static function z_CreateImage_ovr_0(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var host_ptr: Byte; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_CreateImage_ovr_0<T>(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var host_ptr: T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      Result := z_CreateImage_ovr_0(context, flags, image_format, image_desc, PByte(pointer(@host_ptr))^, errcode_ret);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_CreateImage_ovr_0_anh0000010(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage_ovr_0(context, flags, image_format, image_desc, PByte(nil)^, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage<T>(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: array of T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      if (host_ptr<>nil) and (host_ptr.Length<>0) then
        Result := temp_CreateImage_ovr_0(context, flags, image_format, image_desc, host_ptr[0], errcode_ret) else
        Result := temp_CreateImage_ovr_0_anh0000010(context, flags, image_format, image_desc, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage<T>(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var host_ptr: T; var errcode_ret: ErrorCode): cl_mem; where T: record;
    begin
      Result := z_CreateImage_ovr_0(context, flags, image_format, image_desc, PByte(pointer(@host_ptr))^, errcode_ret);
    end;
    private static function z_CreateImage_ovr_2(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage(context: cl_context; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage_ovr_2(context, flags, image_format, image_desc, host_ptr, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateImage2D_ovr_0(context: cl_context; flags: MemFlags; var image_format: cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage2D';
    private static function z_CreateImage2D_ovr_0_anh000100000(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage2D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage2D(context: cl_context; flags: MemFlags; image_format: array of cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImage2D_ovr_0(context, flags, image_format[0], image_width, image_height, image_row_pitch, host_ptr, errcode_ret) else
      z_CreateImage2D_ovr_0_anh000100000(context, flags, IntPtr.Zero, image_width, image_height, image_row_pitch, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage2D(context: cl_context; flags: MemFlags; var image_format: cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage2D_ovr_0(context, flags, image_format, image_width, image_height, image_row_pitch, host_ptr, errcode_ret);
    private static function z_CreateImage2D_ovr_2(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage2D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage2D(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_row_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage2D_ovr_2(context, flags, image_format, image_width, image_height, image_row_pitch, host_ptr, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateImage3D_ovr_0(context: cl_context; flags: MemFlags; var image_format: cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage3D';
    private static function z_CreateImage3D_ovr_0_anh00010000000(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage3D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage3D(context: cl_context; flags: MemFlags; image_format: array of cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImage3D_ovr_0(context, flags, image_format[0], image_width, image_height, image_depth, image_row_pitch, image_slice_pitch, host_ptr, errcode_ret) else
      z_CreateImage3D_ovr_0_anh00010000000(context, flags, IntPtr.Zero, image_width, image_height, image_depth, image_row_pitch, image_slice_pitch, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage3D(context: cl_context; flags: MemFlags; var image_format: cl_image_format; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage3D_ovr_0(context, flags, image_format, image_width, image_height, image_depth, image_row_pitch, image_slice_pitch, host_ptr, errcode_ret);
    private static function z_CreateImage3D_ovr_2(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImage3D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImage3D(context: cl_context; flags: MemFlags; image_format: IntPtr; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImage3D_ovr_2(context, flags, image_format, image_width, image_height, image_depth, image_row_pitch, image_slice_pitch, host_ptr, errcode_ret);
    
    // added in cl3.0
    private static function z_CreateImageWithProperties_ovr_0(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00001000(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00101000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00000100(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00100100(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00001100(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_0_anh00101100(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: array of cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      if (image_format<>nil) and (image_format.Length<>0) then
        if (image_desc<>nil) and (image_desc.Length<>0) then
          z_CreateImageWithProperties_ovr_0(context, properties[0], flags, image_format[0], image_desc[0], host_ptr, errcode_ret) else
          z_CreateImageWithProperties_ovr_0_anh00000100(context, properties[0], flags, image_format[0], IntPtr.Zero, host_ptr, errcode_ret) else
        if (image_desc<>nil) and (image_desc.Length<>0) then
          z_CreateImageWithProperties_ovr_0_anh00001000(context, properties[0], flags, IntPtr.Zero, image_desc[0], host_ptr, errcode_ret) else
          z_CreateImageWithProperties_ovr_0_anh00001100(context, properties[0], flags, IntPtr.Zero, IntPtr.Zero, host_ptr, errcode_ret) else
      if (image_format<>nil) and (image_format.Length<>0) then
        if (image_desc<>nil) and (image_desc.Length<>0) then
          z_CreateImageWithProperties_ovr_0_anh00100000(context, IntPtr.Zero, flags, image_format[0], image_desc[0], host_ptr, errcode_ret) else
          z_CreateImageWithProperties_ovr_0_anh00100100(context, IntPtr.Zero, flags, image_format[0], IntPtr.Zero, host_ptr, errcode_ret) else
        if (image_desc<>nil) and (image_desc.Length<>0) then
          z_CreateImageWithProperties_ovr_0_anh00101000(context, IntPtr.Zero, flags, IntPtr.Zero, image_desc[0], host_ptr, errcode_ret) else
          z_CreateImageWithProperties_ovr_0_anh00101100(context, IntPtr.Zero, flags, IntPtr.Zero, IntPtr.Zero, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_1_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_1_anh00001000(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_1_anh00101000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: array of cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      if (image_format<>nil) and (image_format.Length<>0) then
        z_CreateImageWithProperties_ovr_0(context, properties[0], flags, image_format[0], image_desc, host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00001000(context, properties[0], flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret) else
      if (image_format<>nil) and (image_format.Length<>0) then
        z_CreateImageWithProperties_ovr_0_anh00100000(context, IntPtr.Zero, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00101000(context, IntPtr.Zero, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_2(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_2_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_2_anh00001000(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_2_anh00101000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: array of cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      if (image_format<>nil) and (image_format.Length<>0) then
        z_CreateImageWithProperties_ovr_2(context, properties[0], flags, image_format[0], image_desc, host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_2_anh00001000(context, properties[0], flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret) else
      if (image_format<>nil) and (image_format.Length<>0) then
        z_CreateImageWithProperties_ovr_2_anh00100000(context, IntPtr.Zero, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_2_anh00101000(context, IntPtr.Zero, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_3_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_3_anh00100100(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_0(context, properties[0], flags, image_format, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00000100(context, properties[0], flags, image_format, IntPtr.Zero, host_ptr, errcode_ret) else
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_0_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00100100(context, IntPtr.Zero, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_4_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateImageWithProperties_ovr_0(context, properties[0], flags, image_format, image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_0_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_5_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateImageWithProperties_ovr_2(context, properties[0], flags, image_format, image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_2_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_6(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_6_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_6_anh00000100(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_6_anh00100100(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: IntPtr; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_6(context, properties[0], flags, image_format, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_6_anh00000100(context, properties[0], flags, image_format, IntPtr.Zero, host_ptr, errcode_ret) else
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_6_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_6_anh00100100(context, IntPtr.Zero, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_7_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateImageWithProperties_ovr_6(context, properties[0], flags, image_format, image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_6_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_8(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_8_anh00100000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: array of UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateImageWithProperties_ovr_8(context, properties[0], flags, image_format, image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_8_anh00100000(context, IntPtr.Zero, flags, image_format, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: array of cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_0(context, properties, flags, image_format[0], image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00000100(context, properties, flags, image_format[0], IntPtr.Zero, host_ptr, errcode_ret) else
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_0_anh00001000(context, properties, flags, IntPtr.Zero, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_0_anh00001100(context, properties, flags, IntPtr.Zero, IntPtr.Zero, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: array of cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImageWithProperties_ovr_0(context, properties, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_0_anh00001000(context, properties, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: array of cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImageWithProperties_ovr_2(context, properties, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_2_anh00001000(context, properties, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_desc<>nil) and (image_desc.Length<>0) then
      z_CreateImageWithProperties_ovr_0(context, properties, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_0_anh00000100(context, properties, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_0(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_2(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_desc<>nil) and (image_desc.Length<>0) then
      z_CreateImageWithProperties_ovr_6(context, properties, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_6_anh00000100(context, properties, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_6(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; var properties: UInt64; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_8(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_18(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_18_anh00001000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_18_anh00000100(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_18_anh00001100(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: array of cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_18(context, properties, flags, image_format[0], image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_18_anh00000100(context, properties, flags, image_format[0], IntPtr.Zero, host_ptr, errcode_ret) else
      if (image_desc<>nil) and (image_desc.Length<>0) then
        z_CreateImageWithProperties_ovr_18_anh00001000(context, properties, flags, IntPtr.Zero, image_desc[0], host_ptr, errcode_ret) else
        z_CreateImageWithProperties_ovr_18_anh00001100(context, properties, flags, IntPtr.Zero, IntPtr.Zero, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_19_anh00001000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: array of cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImageWithProperties_ovr_18(context, properties, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_18_anh00001000(context, properties, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_20(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_20_anh00001000(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: array of cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_CreateImageWithProperties_ovr_20(context, properties, flags, image_format[0], image_desc, host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_20_anh00001000(context, properties, flags, IntPtr.Zero, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_desc<>nil) and (image_desc.Length<>0) then
      z_CreateImageWithProperties_ovr_18(context, properties, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_18_anh00000100(context, properties, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_18(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; var image_format: cl_image_format; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_20(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_24(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    private static function z_CreateImageWithProperties_ovr_24_anh00000100(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: array of cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (image_desc<>nil) and (image_desc.Length<>0) then
      z_CreateImageWithProperties_ovr_24(context, properties, flags, image_format, image_desc[0], host_ptr, errcode_ret) else
      z_CreateImageWithProperties_ovr_24_anh00000100(context, properties, flags, image_format, IntPtr.Zero, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; var image_desc: cl_image_desc; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_24(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    private static function z_CreateImageWithProperties_ovr_26(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateImageWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateImageWithProperties(context: cl_context; properties: IntPtr; flags: MemFlags; image_format: IntPtr; image_desc: IntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateImageWithProperties_ovr_26(context, properties, flags, image_format, image_desc, host_ptr, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateKernel_ovr_0(&program: cl_program; kernel_name: IntPtr; var errcode_ret: ErrorCode): cl_kernel;
    external 'opencl.dll' name 'clCreateKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernel(&program: cl_program; kernel_name: string; var errcode_ret: ErrorCode): cl_kernel;
    begin
      var par_2_str_ptr: IntPtr;
      try
        par_2_str_ptr := Marshal.StringToHGlobalAnsi(kernel_name);
        Result := z_CreateKernel_ovr_0(&program, par_2_str_ptr, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_2_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernel(&program: cl_program; kernel_name: IntPtr; var errcode_ret: ErrorCode): cl_kernel :=
    z_CreateKernel_ovr_0(&program, kernel_name, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateKernelsInProgram_ovr_0(&program: cl_program; num_kernels: UInt32; var kernels: cl_kernel; var num_kernels_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateKernelsInProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernelsInProgram(&program: cl_program; num_kernels: UInt32; var kernels: cl_kernel; var num_kernels_ret: UInt32): ErrorCode :=
    z_CreateKernelsInProgram_ovr_0(&program, num_kernels, kernels, num_kernels_ret);
    private static function z_CreateKernelsInProgram_ovr_1(&program: cl_program; num_kernels: UInt32; var kernels: cl_kernel; num_kernels_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateKernelsInProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernelsInProgram(&program: cl_program; num_kernels: UInt32; var kernels: cl_kernel; num_kernels_ret: IntPtr): ErrorCode :=
    z_CreateKernelsInProgram_ovr_1(&program, num_kernels, kernels, num_kernels_ret);
    private static function z_CreateKernelsInProgram_ovr_2(&program: cl_program; num_kernels: UInt32; kernels: IntPtr; var num_kernels_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateKernelsInProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernelsInProgram(&program: cl_program; num_kernels: UInt32; kernels: IntPtr; var num_kernels_ret: UInt32): ErrorCode :=
    z_CreateKernelsInProgram_ovr_2(&program, num_kernels, kernels, num_kernels_ret);
    private static function z_CreateKernelsInProgram_ovr_3(&program: cl_program; num_kernels: UInt32; kernels: IntPtr; num_kernels_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateKernelsInProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateKernelsInProgram(&program: cl_program; num_kernels: UInt32; kernels: IntPtr; num_kernels_ret: IntPtr): ErrorCode :=
    z_CreateKernelsInProgram_ovr_3(&program, num_kernels, kernels, num_kernels_ret);
    
    // added in cl2.0
    private static function z_CreatePipe_ovr_0(context: cl_context; flags: MemFlags; pipe_packet_size: UInt32; pipe_max_packets: UInt32; properties: pointer; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreatePipe';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreatePipe(context: cl_context; flags: MemFlags; pipe_packet_size: UInt32; pipe_max_packets: UInt32; properties: pointer; var errcode_ret: ErrorCode): cl_mem :=
    z_CreatePipe_ovr_0(context, flags, pipe_packet_size, pipe_max_packets, properties, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateProgramWithBinary_ovr_0(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; var binaries: IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    private static function z_CreateProgramWithBinary_ovr_0_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of array of Byte; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_5_temp_arr1: array of IntPtr;
      try
        par_5_temp_arr1 := binaries?.ConvertAll(arr_el1->begin
          if (arr_el1=nil) or (arr_el1.Length=0) then
            Result := IntPtr.Zero else
          begin
            var l := Marshal.SizeOf&<Byte>*arr_el1.Length;
            Result := Marshal.AllocHGlobal(l);
            Marshal.Copy(arr_el1,0,Result,l);
          end;
        end);
        if (par_5_temp_arr1<>nil) and (par_5_temp_arr1.Length<>0) then
          Result := z_CreateProgramWithBinary_ovr_0(context, num_devices, device_list, lengths, par_5_temp_arr1[0], binary_status, errcode_ret) else
          Result := z_CreateProgramWithBinary_ovr_0_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
      finally
        if par_5_temp_arr1<>nil then foreach var arr_el1 in par_5_temp_arr1 do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CreateProgramWithBinary_ovr_1(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; var binaries: IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    private static function z_CreateProgramWithBinary_ovr_1_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of array of Byte; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program;
    begin
      var par_5_temp_arr1: array of IntPtr;
      try
        par_5_temp_arr1 := binaries?.ConvertAll(arr_el1->begin
          if (arr_el1=nil) or (arr_el1.Length=0) then
            Result := IntPtr.Zero else
          begin
            var l := Marshal.SizeOf&<Byte>*arr_el1.Length;
            Result := Marshal.AllocHGlobal(l);
            Marshal.Copy(arr_el1,0,Result,l);
          end;
        end);
        if (par_5_temp_arr1<>nil) and (par_5_temp_arr1.Length<>0) then
          Result := z_CreateProgramWithBinary_ovr_1(context, num_devices, device_list, lengths, par_5_temp_arr1[0], binary_status, errcode_ret) else
          Result := z_CreateProgramWithBinary_ovr_1_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
      finally
        if par_5_temp_arr1<>nil then foreach var arr_el1 in par_5_temp_arr1 do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CreateProgramWithBinary_ovr_2(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; var binaries: IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    private static function z_CreateProgramWithBinary_ovr_2_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of array of Byte; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_5_temp_arr1: array of IntPtr;
      try
        par_5_temp_arr1 := binaries?.ConvertAll(arr_el1->begin
          if (arr_el1=nil) or (arr_el1.Length=0) then
            Result := IntPtr.Zero else
          begin
            var l := Marshal.SizeOf&<Byte>*arr_el1.Length;
            Result := Marshal.AllocHGlobal(l);
            Marshal.Copy(arr_el1,0,Result,l);
          end;
        end);
        if (par_5_temp_arr1<>nil) and (par_5_temp_arr1.Length<>0) then
          Result := z_CreateProgramWithBinary_ovr_2(context, num_devices, device_list, lengths, par_5_temp_arr1[0], binary_status, errcode_ret) else
          Result := z_CreateProgramWithBinary_ovr_2_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
      finally
        if par_5_temp_arr1<>nil then foreach var arr_el1 in par_5_temp_arr1 do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CreateProgramWithBinary_ovr_3_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program :=
    if (binaries<>nil) and (binaries.Length<>0) then
      z_CreateProgramWithBinary_ovr_0(context, num_devices, device_list, lengths, binaries[0], binary_status, errcode_ret) else
      z_CreateProgramWithBinary_ovr_0_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
    private static function z_CreateProgramWithBinary_ovr_4_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program :=
    if (binaries<>nil) and (binaries.Length<>0) then
      z_CreateProgramWithBinary_ovr_1(context, num_devices, device_list, lengths, binaries[0], binary_status, errcode_ret) else
      z_CreateProgramWithBinary_ovr_1_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
    private static function z_CreateProgramWithBinary_ovr_5_anh00000100(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: array of IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (binaries<>nil) and (binaries.Length<>0) then
      z_CreateProgramWithBinary_ovr_2(context, num_devices, device_list, lengths, binaries[0], binary_status, errcode_ret) else
      z_CreateProgramWithBinary_ovr_2_anh00000100(context, num_devices, device_list, lengths, IntPtr.Zero, binary_status, errcode_ret);
    private static function z_CreateProgramWithBinary_ovr_6(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithBinary_ovr_6(context, num_devices, device_list, lengths, binaries, binary_status, errcode_ret);
    private static function z_CreateProgramWithBinary_ovr_7(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; var binary_status: ErrorCode; errcode_ret: IntPtr): cl_program :=
    z_CreateProgramWithBinary_ovr_7(context, num_devices, device_list, lengths, binaries, binary_status, errcode_ret);
    private static function z_CreateProgramWithBinary_ovr_8(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBinary';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBinary(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; var lengths: UIntPtr; binaries: IntPtr; binary_status: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithBinary_ovr_8(context, num_devices, device_list, lengths, binaries, binary_status, errcode_ret);
    
    // added in cl1.2
    private static function z_CreateProgramWithBuiltInKernels_ovr_0(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBuiltInKernels';
    private static function z_CreateProgramWithBuiltInKernels_ovr_0_anh000100(context: cl_context; num_devices: UInt32; device_list: IntPtr; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBuiltInKernels';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; kernel_names: string; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(kernel_names);
        if (device_list<>nil) and (device_list.Length<>0) then
          Result := z_CreateProgramWithBuiltInKernels_ovr_0(context, num_devices, device_list[0], par_4_str_ptr, errcode_ret) else
          Result := z_CreateProgramWithBuiltInKernels_ovr_0_anh000100(context, num_devices, IntPtr.Zero, par_4_str_ptr, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_CreateProgramWithBuiltInKernels_ovr_1_anh000100(context: cl_context; num_devices: UInt32; device_list: IntPtr; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBuiltInKernels';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (device_list<>nil) and (device_list.Length<>0) then
      z_CreateProgramWithBuiltInKernels_ovr_0(context, num_devices, device_list[0], kernel_names, errcode_ret) else
      z_CreateProgramWithBuiltInKernels_ovr_0_anh000100(context, num_devices, IntPtr.Zero, kernel_names, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; kernel_names: string; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(kernel_names);
        Result := z_CreateProgramWithBuiltInKernels_ovr_0(context, num_devices, device_list, par_4_str_ptr, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithBuiltInKernels_ovr_0(context, num_devices, device_list, kernel_names, errcode_ret);
    private static function z_CreateProgramWithBuiltInKernels_ovr_4(context: cl_context; num_devices: UInt32; device_list: IntPtr; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithBuiltInKernels';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; device_list: IntPtr; kernel_names: string; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(kernel_names);
        Result := z_CreateProgramWithBuiltInKernels_ovr_4(context, num_devices, device_list, par_4_str_ptr, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithBuiltInKernels(context: cl_context; num_devices: UInt32; device_list: IntPtr; kernel_names: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithBuiltInKernels_ovr_4(context, num_devices, device_list, kernel_names, errcode_ret);
    
    // added in cl2.1
    private static function z_CreateProgramWithIL_ovr_0(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithIL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithIL(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithIL_ovr_0(context, il, length, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateProgramWithSource_ovr_0(context: cl_context; count: UInt32; var strings: IntPtr; var lengths: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    private static function z_CreateProgramWithSource_ovr_0_anh000100(context: cl_context; count: UInt32; strings: IntPtr; var lengths: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    private static function z_CreateProgramWithSource_ovr_0_anh000010(context: cl_context; count: UInt32; var strings: IntPtr; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    private static function z_CreateProgramWithSource_ovr_0_anh000110(context: cl_context; count: UInt32; strings: IntPtr; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithSource(context: cl_context; count: UInt32; strings: array of string; lengths: array of UIntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_3_str_ptr: array of IntPtr;
      try
        par_3_str_ptr := strings?.ConvertAll(arr_el1->Marshal.StringToHGlobalAnsi(arr_el1));
        if (par_3_str_ptr<>nil) and (par_3_str_ptr.Length<>0) then
          if (lengths<>nil) and (lengths.Length<>0) then
            Result := z_CreateProgramWithSource_ovr_0(context, count, par_3_str_ptr[0], lengths[0], errcode_ret) else
            Result := z_CreateProgramWithSource_ovr_0_anh000010(context, count, par_3_str_ptr[0], IntPtr.Zero, errcode_ret) else
          if (lengths<>nil) and (lengths.Length<>0) then
            Result := z_CreateProgramWithSource_ovr_0_anh000100(context, count, IntPtr.Zero, lengths[0], errcode_ret) else
            Result := z_CreateProgramWithSource_ovr_0_anh000110(context, count, IntPtr.Zero, IntPtr.Zero, errcode_ret);
      finally
        foreach var arr_el1 in par_3_str_ptr do Marshal.FreeHGlobal(arr_el1);
      end;
    end;
    private static function z_CreateProgramWithSource_ovr_1_anh000100(context: cl_context; count: UInt32; strings: IntPtr; var lengths: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    private static function z_CreateProgramWithSource_ovr_1_anh000010(context: cl_context; count: UInt32; var strings: IntPtr; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    private static function z_CreateProgramWithSource_ovr_1_anh000110(context: cl_context; count: UInt32; strings: IntPtr; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithSource(context: cl_context; count: UInt32; strings: array of IntPtr; lengths: array of UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (strings<>nil) and (strings.Length<>0) then
      if (lengths<>nil) and (lengths.Length<>0) then
        z_CreateProgramWithSource_ovr_0(context, count, strings[0], lengths[0], errcode_ret) else
        z_CreateProgramWithSource_ovr_0_anh000010(context, count, strings[0], IntPtr.Zero, errcode_ret) else
      if (lengths<>nil) and (lengths.Length<>0) then
        z_CreateProgramWithSource_ovr_0_anh000100(context, count, IntPtr.Zero, lengths[0], errcode_ret) else
        z_CreateProgramWithSource_ovr_0_anh000110(context, count, IntPtr.Zero, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithSource(context: cl_context; count: UInt32; var strings: IntPtr; var lengths: UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithSource_ovr_0(context, count, strings, lengths, errcode_ret);
    private static function z_CreateProgramWithSource_ovr_3(context: cl_context; count: UInt32; strings: pointer; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithSource';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithSource(context: cl_context; count: UInt32; strings: pointer; lengths: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithSource_ovr_3(context, count, strings, lengths, errcode_ret);
    
    // added in cl1.0
    private static function z_CreateSampler_ovr_0(context: cl_context; normalized_coords: Bool; addressing_mode: AddressingMode; filter_mode: FilterMode; var errcode_ret: ErrorCode): cl_sampler;
    external 'opencl.dll' name 'clCreateSampler';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSampler(context: cl_context; normalized_coords: Bool; addressing_mode: AddressingMode; filter_mode: FilterMode; var errcode_ret: ErrorCode): cl_sampler :=
    z_CreateSampler_ovr_0(context, normalized_coords, addressing_mode, filter_mode, errcode_ret);
    
    // added in cl2.0
    private static function z_CreateSamplerWithProperties_ovr_0(context: cl_context; var sampler_properties: SamplerProperties; var errcode_ret: ErrorCode): cl_sampler;
    external 'opencl.dll' name 'clCreateSamplerWithProperties';
    private static function z_CreateSamplerWithProperties_ovr_0_anh0010(context: cl_context; sampler_properties: IntPtr; var errcode_ret: ErrorCode): cl_sampler;
    external 'opencl.dll' name 'clCreateSamplerWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSamplerWithProperties(context: cl_context; sampler_properties: array of SamplerProperties; var errcode_ret: ErrorCode): cl_sampler :=
    if (sampler_properties<>nil) and (sampler_properties.Length<>0) then
      z_CreateSamplerWithProperties_ovr_0(context, sampler_properties[0], errcode_ret) else
      z_CreateSamplerWithProperties_ovr_0_anh0010(context, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSamplerWithProperties(context: cl_context; var sampler_properties: SamplerProperties; var errcode_ret: ErrorCode): cl_sampler :=
    z_CreateSamplerWithProperties_ovr_0(context, sampler_properties, errcode_ret);
    private static function z_CreateSamplerWithProperties_ovr_2(context: cl_context; sampler_properties: IntPtr; var errcode_ret: ErrorCode): cl_sampler;
    external 'opencl.dll' name 'clCreateSamplerWithProperties';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSamplerWithProperties(context: cl_context; sampler_properties: IntPtr; var errcode_ret: ErrorCode): cl_sampler :=
    z_CreateSamplerWithProperties_ovr_2(context, sampler_properties, errcode_ret);
    
    // added in cl1.1
    private static function z_CreateSubBuffer_ovr_0(buffer: cl_mem; flags: MemFlags; buffer_create_type: BufferCreateType; var buffer_create_info: cl_buffer_region; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateSubBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubBuffer(buffer: cl_mem; flags: MemFlags; buffer_create_type: BufferCreateType; var buffer_create_info: cl_buffer_region; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateSubBuffer_ovr_0(buffer, flags, buffer_create_type, buffer_create_info, errcode_ret);
    private static function z_CreateSubBuffer_ovr_1(buffer: cl_mem; flags: MemFlags; buffer_create_type: BufferCreateType; buffer_create_info: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateSubBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubBuffer(buffer: cl_mem; flags: MemFlags; buffer_create_type: BufferCreateType; buffer_create_info: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateSubBuffer_ovr_1(buffer, flags, buffer_create_type, buffer_create_info, errcode_ret);
    
    // added in cl1.2
    private static function z_CreateSubDevices_ovr_0(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    private static function z_CreateSubDevices_ovr_0_anh001000(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: array of DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevices_ovr_0(in_device, properties[0], num_devices, out_devices, num_devices_ret) else
      z_CreateSubDevices_ovr_0_anh001000(in_device, IntPtr.Zero, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_1(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    private static function z_CreateSubDevices_ovr_1_anh001000(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: array of DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevices_ovr_1(in_device, properties[0], num_devices, out_devices, num_devices_ret) else
      z_CreateSubDevices_ovr_1_anh001000(in_device, IntPtr.Zero, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_2(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    private static function z_CreateSubDevices_ovr_2_anh001000(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: array of DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevices_ovr_2(in_device, properties[0], num_devices, out_devices, num_devices_ret) else
      z_CreateSubDevices_ovr_2_anh001000(in_device, IntPtr.Zero, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_3(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    private static function z_CreateSubDevices_ovr_3_anh001000(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: array of DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevices_ovr_3(in_device, properties[0], num_devices, out_devices, num_devices_ret) else
      z_CreateSubDevices_ovr_3_anh001000(in_device, IntPtr.Zero, num_devices, out_devices, num_devices_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode :=
    z_CreateSubDevices_ovr_0(in_device, properties, num_devices, out_devices, num_devices_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode :=
    z_CreateSubDevices_ovr_1(in_device, properties, num_devices, out_devices, num_devices_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode :=
    z_CreateSubDevices_ovr_2(in_device, properties, num_devices, out_devices, num_devices_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; var properties: DevicePartitionProperty; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode :=
    z_CreateSubDevices_ovr_3(in_device, properties, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_8(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; var num_devices_ret: UInt32): ErrorCode :=
    z_CreateSubDevices_ovr_8(in_device, properties, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_9(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; var out_devices: cl_device_id; num_devices_ret: IntPtr): ErrorCode :=
    z_CreateSubDevices_ovr_9(in_device, properties, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_10(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; var num_devices_ret: UInt32): ErrorCode :=
    z_CreateSubDevices_ovr_10(in_device, properties, num_devices, out_devices, num_devices_ret);
    private static function z_CreateSubDevices_ovr_11(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevices';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevices(in_device: cl_device_id; properties: IntPtr; num_devices: UInt32; out_devices: IntPtr; num_devices_ret: IntPtr): ErrorCode :=
    z_CreateSubDevices_ovr_11(in_device, properties, num_devices, out_devices, num_devices_ret);
    
    // added in cl1.1
    private static function z_CreateUserEvent_ovr_0(context: cl_context; var errcode_ret: ErrorCode): cl_event;
    external 'opencl.dll' name 'clCreateUserEvent';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateUserEvent(context: cl_context; var errcode_ret: ErrorCode): cl_event :=
    z_CreateUserEvent_ovr_0(context, errcode_ret);
    
    // added in cl1.0
    private static function z_EnqueueBarrier_ovr_0(command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrier';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrier(command_queue: cl_command_queue): ErrorCode :=
    z_EnqueueBarrier_ovr_0(command_queue);
    
    // added in cl1.2
    private static function z_EnqueueBarrierWithWaitList_ovr_0(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    private static function z_EnqueueBarrierWithWaitList_ovr_0_anh00010(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueBarrierWithWaitList_ovr_0(command_queue, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueBarrierWithWaitList_ovr_0_anh00010(command_queue, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueBarrierWithWaitList_ovr_1(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    private static function z_EnqueueBarrierWithWaitList_ovr_1_anh00010(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueBarrierWithWaitList_ovr_1(command_queue, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueBarrierWithWaitList_ovr_1_anh00010(command_queue, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueBarrierWithWaitList_ovr_0(command_queue, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueBarrierWithWaitList_ovr_1(command_queue, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueBarrierWithWaitList_ovr_4(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueBarrierWithWaitList_ovr_4(command_queue, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueBarrierWithWaitList_ovr_5(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueBarrierWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueBarrierWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueBarrierWithWaitList_ovr_5(command_queue, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueCopyBuffer_ovr_0(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    private static function z_EnqueueCopyBuffer_ovr_0_anh0000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBuffer_ovr_0(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBuffer_ovr_0_anh0000000010(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyBuffer_ovr_1(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    private static function z_EnqueueCopyBuffer_ovr_1_anh0000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBuffer_ovr_1(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBuffer_ovr_1_anh0000000010(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBuffer_ovr_0(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBuffer_ovr_1(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBuffer_ovr_4(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBuffer_ovr_4(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBuffer_ovr_5(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBuffer(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBuffer_ovr_5(command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.1
    private static function z_EnqueueCopyBufferRect_ovr_0(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000100000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001100000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000010000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001010000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00000110000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_0_anh00001110000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00000000000010(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00000010000010(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00000100000010(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00000110000010(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00001000000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00001010000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00001100000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_0_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_0_anh00001110000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyBufferRect_ovr_1(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000100000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001100000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000010000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001010000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00000110000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_1_anh00001110000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00000000000010(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00000010000010(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00000100000010(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00000110000010(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00001000000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00001010000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00001100000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyBufferRect_ovr_1_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyBufferRect_ovr_1_anh00001110000010(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_2_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_0(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_0_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_0_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_0_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_0_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_0_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_0_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_0_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_3_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_1(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_1_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_1_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_1_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_1_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_1_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_1_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_1_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferRect_ovr_4(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_4_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_4(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_4_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_4_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_4_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_4_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_4_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_4_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_4_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferRect_ovr_5(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00001000000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00000100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00001100000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00000010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00001010000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00000110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    private static function z_EnqueueCopyBufferRect_ovr_5_anh00001110000000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_5(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_5_anh00000010000000(command_queue, src_buffer, dst_buffer, src_origin[0], dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_5_anh00000100000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_5_anh00000110000000(command_queue, src_buffer, dst_buffer, src_origin[0], IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_5_anh00001000000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_5_anh00001010000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, dst_origin[0], IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyBufferRect_ovr_5_anh00001100000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, region[0], src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyBufferRect_ovr_5_anh00001110000000(command_queue, src_buffer, dst_buffer, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBufferRect_ovr_0(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBufferRect_ovr_0_anh00000000000010(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBufferRect_ovr_1(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBufferRect_ovr_1_anh00000000000010(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBufferRect_ovr_0(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBufferRect_ovr_1(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBufferRect_ovr_4(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferRect(command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBufferRect_ovr_5(command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueCopyBufferToImage_ovr_0(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000010010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000001010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_0_anh0000011010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_0(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_0_anh0000000010(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_0_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_0_anh0000001010(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_0_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_0_anh0000010010(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_0_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_0_anh0000011010(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyBufferToImage_ovr_1(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000000010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000010010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000001010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_1_anh0000011010(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_1(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_1_anh0000000010(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_1_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_1_anh0000001010(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_1_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_1_anh0000010010(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyBufferToImage_ovr_1_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyBufferToImage_ovr_1_anh0000011010(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyBufferToImage_ovr_2_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_2_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_2_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_0(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_0_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_0_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_0_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferToImage_ovr_3_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_3_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_3_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_1(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_1_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_1_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_1_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferToImage_ovr_4(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_4_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_4_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_4_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_4(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_4_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_4_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_4_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyBufferToImage_ovr_5(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_5_anh0000010000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_5_anh0000001000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    private static function z_EnqueueCopyBufferToImage_ovr_5_anh0000011000(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyBufferToImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (dst_origin<>nil) and (dst_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_5(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_5_anh0000001000(command_queue, src_buffer, dst_image, src_offset, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyBufferToImage_ovr_5_anh0000010000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyBufferToImage_ovr_5_anh0000011000(command_queue, src_buffer, dst_image, src_offset, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBufferToImage_ovr_0(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBufferToImage_ovr_0_anh0000000010(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyBufferToImage_ovr_1(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyBufferToImage_ovr_1_anh0000000010(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBufferToImage_ovr_0(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBufferToImage_ovr_1(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyBufferToImage_ovr_4(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyBufferToImage(command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyBufferToImage_ovr_5(command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueCopyImage_ovr_0(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000000010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000100010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000010010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000110010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000001010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000101010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000011010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_0_anh0000111010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000000010(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000001010(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000010010(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000011010(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000100010(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000101010(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000110010(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_0_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_0_anh0000111010(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyImage_ovr_1(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000000010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000100010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000010010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000110010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000001010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000101010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000011010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_1_anh0000111010(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000000010(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000001010(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000010010(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000011010(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000100010(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000101010(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (region<>nil) and (region.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000110010(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueCopyImage_ovr_1_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueCopyImage_ovr_1_anh0000111010(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyImage_ovr_2_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_2_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_0(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_0_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_0_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_0_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_0_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_0_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_0_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_0_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImage_ovr_3_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_3_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_1(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_1_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_1_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_1_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_1_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_1_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_1_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_1_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImage_ovr_4(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_4_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_4(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_4_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_4_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_4_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_4_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_4_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_4_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_4_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImage_ovr_5(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000001000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000101000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; var dst_origin: UIntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000011000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    private static function z_EnqueueCopyImage_ovr_5_anh0000111000(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: array of UIntPtr; dst_origin: array of UIntPtr; region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_5(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_5_anh0000001000(command_queue, src_image, dst_image, src_origin[0], dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_5_anh0000010000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_5_anh0000011000(command_queue, src_image, dst_image, src_origin[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (dst_origin<>nil) and (dst_origin.Length<>0) then
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_5_anh0000100000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_5_anh0000101000(command_queue, src_image, dst_image, IntPtr.Zero, dst_origin[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (region<>nil) and (region.Length<>0) then
          z_EnqueueCopyImage_ovr_5_anh0000110000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, region[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueCopyImage_ovr_5_anh0000111000(command_queue, src_image, dst_image, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyImage_ovr_0(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyImage_ovr_0_anh0000000010(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyImage_ovr_1(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyImage_ovr_1_anh0000000010(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyImage_ovr_0(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyImage_ovr_1(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyImage_ovr_4(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImage(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyImage_ovr_5(command_queue, src_image, dst_image, src_origin, dst_origin, region, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueCopyImageToBuffer_ovr_0(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000000010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000100010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000010010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_0_anh0000110010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_0(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000000010(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000010010(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000100010(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_0_anh0000110010(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyImageToBuffer_ovr_1(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000000010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000100010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000010010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_1_anh0000110010(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_1(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000000010(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000010010(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000100010(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueCopyImageToBuffer_ovr_1_anh0000110010(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueCopyImageToBuffer_ovr_2_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_2_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_2_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_0(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_0_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_0_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_0_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImageToBuffer_ovr_3_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_3_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_3_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_1(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_1_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_1_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_1_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImageToBuffer_ovr_4(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_4_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_4_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_4_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_4(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_4_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_4_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_4_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueCopyImageToBuffer_ovr_5(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_5_anh0000100000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_5_anh0000010000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    private static function z_EnqueueCopyImageToBuffer_ovr_5_anh0000110000(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueCopyImageToBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: array of UIntPtr; region: array of UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (src_origin<>nil) and (src_origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_5(command_queue, src_image, dst_buffer, src_origin[0], region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_5_anh0000010000(command_queue, src_image, dst_buffer, src_origin[0], IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueCopyImageToBuffer_ovr_5_anh0000100000(command_queue, src_image, dst_buffer, IntPtr.Zero, region[0], dst_offset, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueCopyImageToBuffer_ovr_5_anh0000110000(command_queue, src_image, dst_buffer, IntPtr.Zero, IntPtr.Zero, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyImageToBuffer_ovr_0(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyImageToBuffer_ovr_0_anh0000000010(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueCopyImageToBuffer_ovr_1(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueCopyImageToBuffer_ovr_1_anh0000000010(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyImageToBuffer_ovr_0(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyImageToBuffer_ovr_1(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueCopyImageToBuffer_ovr_4(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueCopyImageToBuffer(command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueCopyImageToBuffer_ovr_5(command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.2
    private static function z_EnqueueFillBuffer_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private static function z_EnqueueFillBuffer_ovr_0_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_0<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueFillBuffer_ovr_0_anh0000000010(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_0_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueFillBuffer_ovr_0_anh0000000010(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_0(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_0_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillBuffer_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private static function z_EnqueueFillBuffer_ovr_1_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_1<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueFillBuffer_ovr_1_anh0000000010(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_1_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueFillBuffer_ovr_1_anh0000000010(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_1(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_1_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_2<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_2_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_2(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_2_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_3<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_3_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_3(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_3_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillBuffer_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_4<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_4(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_4_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueFillBuffer_ovr_4(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_4(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_4_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillBuffer_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; var pattern: Byte; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_5<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_5(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueFillBuffer_ovr_5_anh0001000000(command_queue: cl_command_queue; buffer: cl_mem; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueFillBuffer_ovr_5(command_queue, buffer, PByte(nil)^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; pattern: array of T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueFillBuffer_ovr_5(command_queue, buffer, pattern[0], pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueFillBuffer_ovr_5_anh0001000000(command_queue, buffer, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueFillBuffer_ovr_0_anh0000000010(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueFillBuffer_ovr_1_anh0000000010(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_0(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_1(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_4(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; var pattern: T; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillBuffer_ovr_5(command_queue, buffer, PByte(pointer(@pattern))^, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillBuffer_ovr_12(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private static function z_EnqueueFillBuffer_ovr_12_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueFillBuffer_ovr_12(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueFillBuffer_ovr_12_anh0000000010(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueFillBuffer_ovr_13(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    private static function z_EnqueueFillBuffer_ovr_13_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueFillBuffer_ovr_13(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueFillBuffer_ovr_13_anh0000000010(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueFillBuffer_ovr_12(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueFillBuffer_ovr_13(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueFillBuffer_ovr_16(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueFillBuffer_ovr_16(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueFillBuffer_ovr_17(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillBuffer(command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueFillBuffer_ovr_17(command_queue, buffer, pattern, pattern_size, offset, size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.2
    private static function z_EnqueueFillImage_ovr_0(command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage<T>(command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillImage_ovr_0(command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillImage_ovr_1(command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage<T>(command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillImage_ovr_1(command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillImage_ovr_2(command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage<T>(command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillImage_ovr_2(command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillImage_ovr_3(command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage<T>(command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueFillImage_ovr_3(command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueFillImage_ovr_4(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueFillImage_ovr_4(command_queue, image, fill_color, origin, region, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueFillImage_ovr_5(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueFillImage_ovr_5(command_queue, image, fill_color, origin, region, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueFillImage_ovr_6(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueFillImage_ovr_6(command_queue, image, fill_color, origin, region, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueFillImage_ovr_7(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueFillImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueFillImage(command_queue: cl_command_queue; image: cl_mem; fill_color: IntPtr; var origin: UIntPtr; var region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueFillImage_ovr_7(command_queue, image, fill_color, origin, region, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueMapBuffer_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    private static function z_EnqueueMapBuffer_ovr_0_anh00000000100(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMapBuffer_ovr_0(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
      z_EnqueueMapBuffer_ovr_0_anh00000000100(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    private static function z_EnqueueMapBuffer_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    private static function z_EnqueueMapBuffer_ovr_1_anh00000000100(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMapBuffer_ovr_1(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
      z_EnqueueMapBuffer_ovr_1_anh00000000100(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapBuffer_ovr_0(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapBuffer_ovr_1(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    private static function z_EnqueueMapBuffer_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapBuffer_ovr_4(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    private static function z_EnqueueMapBuffer_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_map: Bool; map_flags: MapFlags; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapBuffer_ovr_5(command_queue, buffer, blocking_map, map_flags, offset, size, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    
    // added in cl1.0
    private static function z_EnqueueMapImage_ovr_0(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000000000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000010000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000001000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_0_anh0000011000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_0(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_0_anh0000000000100(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_0_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_0_anh0000001000100(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_0_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_0_anh0000010000100(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_0_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_0_anh0000011000100(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    private static function z_EnqueueMapImage_ovr_1(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000000000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000010000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000001000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_1_anh0000011000100(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_1(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_1_anh0000000000100(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_1_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_1_anh0000001000100(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_1_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_1_anh0000010000100(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueMapImage_ovr_1_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
          z_EnqueueMapImage_ovr_1_anh0000011000100(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    private static function z_EnqueueMapImage_ovr_2_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_2_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_2_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_0(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_0_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_0_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_0_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    private static function z_EnqueueMapImage_ovr_3_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_3_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_3_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_1(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_1_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_1_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_1_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    private static function z_EnqueueMapImage_ovr_4(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_4_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_4_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_4_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_4(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_4_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_4_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_4_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    private static function z_EnqueueMapImage_ovr_5(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_5_anh0000010000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_5_anh0000001000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    private static function z_EnqueueMapImage_ovr_5_anh0000011000000(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: IntPtr; region: IntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clEnqueueMapImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; origin: array of UIntPtr; region: array of UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    if (origin<>nil) and (origin.Length<>0) then
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_5(command_queue, image, blocking_map, map_flags, origin[0], region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_5_anh0000001000000(command_queue, image, blocking_map, map_flags, origin[0], IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
      if (region<>nil) and (region.Length<>0) then
        z_EnqueueMapImage_ovr_5_anh0000010000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, region[0], image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret) else
        z_EnqueueMapImage_ovr_5_anh0000011000000(command_queue, image, blocking_map, map_flags, IntPtr.Zero, IntPtr.Zero, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMapImage_ovr_0(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
      z_EnqueueMapImage_ovr_0_anh0000000000100(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMapImage_ovr_1(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list[0], &event, errcode_ret) else
      z_EnqueueMapImage_ovr_1_anh0000000000100(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, IntPtr.Zero, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapImage_ovr_0(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapImage_ovr_1(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapImage_ovr_4(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMapImage(command_queue: cl_command_queue; image: cl_mem; blocking_map: Bool; map_flags: MapFlags; var origin: UIntPtr; var region: UIntPtr; var image_row_pitch: UIntPtr; var image_slice_pitch: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr; var errcode_ret: ErrorCode): IntPtr :=
    z_EnqueueMapImage_ovr_5(command_queue, image, blocking_map, map_flags, origin, region, image_row_pitch, image_slice_pitch, num_events_in_wait_list, event_wait_list, &event, errcode_ret);
    
    // added in cl1.0
    private static function z_EnqueueMarker_ovr_0(command_queue: cl_command_queue; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarker';
    private static function z_EnqueueMarker_ovr_0_anh001(command_queue: cl_command_queue; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarker';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarker(command_queue: cl_command_queue; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMarker_ovr_0(command_queue, &event[0]) else
      z_EnqueueMarker_ovr_0_anh001(command_queue, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarker(command_queue: cl_command_queue; var &event: cl_event): ErrorCode :=
    z_EnqueueMarker_ovr_0(command_queue, &event);
    private static function z_EnqueueMarker_ovr_2(command_queue: cl_command_queue; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarker';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarker(command_queue: cl_command_queue; &event: IntPtr): ErrorCode :=
    z_EnqueueMarker_ovr_2(command_queue, &event);
    
    // added in cl1.2
    private static function z_EnqueueMarkerWithWaitList_ovr_0(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarkerWithWaitList';
    private static function z_EnqueueMarkerWithWaitList_ovr_0_anh00010(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarkerWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarkerWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMarkerWithWaitList_ovr_0(command_queue, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMarkerWithWaitList_ovr_0_anh00010(command_queue, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarkerWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMarkerWithWaitList_ovr_0(command_queue, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMarkerWithWaitList_ovr_2(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMarkerWithWaitList';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMarkerWithWaitList(command_queue: cl_command_queue; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMarkerWithWaitList_ovr_2(command_queue, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.2
    private static function z_EnqueueMigrateMemObjects_ovr_0(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_0_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_0_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_0_anh00010010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjects_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjects_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjects_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjects_ovr_0_anh00010010(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_1(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_1_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_1_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_1_anh00010010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjects_ovr_1(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjects_ovr_1_anh00000010(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjects_ovr_1_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjects_ovr_1_anh00010010(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_2_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjects_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_3_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_1(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjects_ovr_1_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_4(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_4_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_4(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjects_ovr_4_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_5(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_5_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_5(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjects_ovr_5_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjects_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_1(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjects_ovr_1_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_1(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_4(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_5(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_12(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_12_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_12(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjects_ovr_12_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_13(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    private static function z_EnqueueMigrateMemObjects_ovr_13_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjects_ovr_13(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjects_ovr_13_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_12(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_13(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_16(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_16(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjects_ovr_17(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjects(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjects_ovr_17(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueNativeKernel_ovr_0(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_0(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_1(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_1(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_2(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_2(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_3(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_3(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_4(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_4(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_5(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_5(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_6(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_6(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_7(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; var mem_list: cl_mem; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_7(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_8(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_8(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_9(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_9(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_10(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_10(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_11(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; var args_mem_loc: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_11(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_12(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_12(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_13(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_13(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_14(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueNativeKernel_ovr_14(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNativeKernel_ovr_15(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNativeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNativeKernel(command_queue: cl_command_queue; user_func: EnqueueNativeKernelCallback; args: IntPtr; cb_args: UIntPtr; num_mem_objects: UInt32; mem_list: IntPtr; args_mem_loc: pointer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueNativeKernel_ovr_15(command_queue, user_func, args, cb_args, num_mem_objects, mem_list, args_mem_loc, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueNDRangeKernel_ovr_0(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000000010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000100010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000010010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000110010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000001010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000101010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000011010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_0_anh0000111010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000000010(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000001010(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000010010(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000011010(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000100010(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000101010(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000110010(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_0_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_0_anh0000111010(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueNDRangeKernel_ovr_1(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000000010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000100010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000010010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000110010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000001010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000101010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000011010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_1_anh0000111010(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000000010(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000001010(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000010010(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000011010(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000100010(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000101010(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000110010(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, IntPtr.Zero, &event) else
          if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
            z_EnqueueNDRangeKernel_ovr_1_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
            z_EnqueueNDRangeKernel_ovr_1_anh0000111010(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_2_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_0(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_0_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_0_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_0_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_0_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_0_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_0_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_0_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_3_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_1(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_1_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_1_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_1_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_1_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_1_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_1_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_1_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNDRangeKernel_ovr_4(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_4_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_4(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_4_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_4_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_4_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_4_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_4_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_4_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_4_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueNDRangeKernel_ovr_5(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000100000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000010000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000110000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000001000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000101000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000011000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    private static function z_EnqueueNDRangeKernel_ovr_5_anh0000111000(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueNDRangeKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; local_work_size: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_5(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_5_anh0000001000(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_5_anh0000010000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_5_anh0000011000(command_queue, kernel, work_dim, global_work_offset[0], IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
      if (global_work_size<>nil) and (global_work_size.Length<>0) then
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_5_anh0000100000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_5_anh0000101000(command_queue, kernel, work_dim, IntPtr.Zero, global_work_size[0], IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event) else
        if (local_work_size<>nil) and (local_work_size.Length<>0) then
          z_EnqueueNDRangeKernel_ovr_5_anh0000110000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, local_work_size[0], num_events_in_wait_list, event_wait_list, &event) else
          z_EnqueueNDRangeKernel_ovr_5_anh0000111000(command_queue, kernel, work_dim, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueNDRangeKernel_ovr_0(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueNDRangeKernel_ovr_0_anh0000000010(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueNDRangeKernel_ovr_1(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueNDRangeKernel_ovr_1_anh0000000010(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueNDRangeKernel_ovr_0(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueNDRangeKernel_ovr_1(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueNDRangeKernel_ovr_4(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueNDRangeKernel(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueNDRangeKernel_ovr_5(command_queue, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueReadBuffer_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private static function z_EnqueueReadBuffer_ovr_0_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_0<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueReadBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_0_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReadBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_0_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBuffer_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private static function z_EnqueueReadBuffer_ovr_1_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_1<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueReadBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_1_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReadBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_1_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_2<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_2_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_2(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_2_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_3<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_3_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_3(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_3_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBuffer_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_4<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_4(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_4_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBuffer_ovr_4(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_4(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_4_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBuffer_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_5<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_5(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueReadBuffer_ovr_5_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBuffer_ovr_5(command_queue, buffer, blocking_read, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueReadBuffer_ovr_5(command_queue, buffer, blocking_read, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueReadBuffer_ovr_5_anh0000001000(command_queue, buffer, blocking_read, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueReadBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueReadBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_0(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_1(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_4(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBuffer_ovr_5(command_queue, buffer, blocking_read, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBuffer_ovr_12(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private static function z_EnqueueReadBuffer_ovr_12_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReadBuffer_ovr_12(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReadBuffer_ovr_12_anh0000000010(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReadBuffer_ovr_13(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    private static function z_EnqueueReadBuffer_ovr_13_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReadBuffer_ovr_13(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReadBuffer_ovr_13_anh0000000010(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBuffer_ovr_12(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBuffer_ovr_13(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadBuffer_ovr_16(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBuffer_ovr_16(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadBuffer_ovr_17(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBuffer_ovr_17(command_queue, buffer, blocking_read, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.1
    private static function z_EnqueueReadBufferRect_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBufferRect_ovr_0(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBufferRect_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBufferRect_ovr_1(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBufferRect_ovr_2(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBufferRect_ovr_2(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBufferRect_ovr_3(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadBufferRect_ovr_3(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadBufferRect_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBufferRect_ovr_4(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadBufferRect_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBufferRect_ovr_5(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadBufferRect_ovr_6(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReadBufferRect_ovr_6(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadBufferRect_ovr_7(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_read: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReadBufferRect_ovr_7(command_queue, buffer, blocking_read, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueReadImage_ovr_0(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadImage_ovr_0(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadImage_ovr_1(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadImage_ovr_1(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadImage_ovr_2(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadImage_ovr_2(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadImage_ovr_3(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueReadImage_ovr_3(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueReadImage_ovr_4(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReadImage_ovr_4(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadImage_ovr_5(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReadImage_ovr_5(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadImage_ovr_6(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReadImage_ovr_6(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReadImage_ovr_7(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReadImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReadImage(command_queue: cl_command_queue; image: cl_mem; blocking_read: Bool; var origin: UIntPtr; var region: UIntPtr; row_pitch: UIntPtr; slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReadImage_ovr_7(command_queue, image, blocking_read, origin, region, row_pitch, slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.0
    private static function z_EnqueueSVMFree_ovr_0(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_0_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_0_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_0_anh000100010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueSVMFree_ovr_0(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueSVMFree_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueSVMFree_ovr_0_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueSVMFree_ovr_0_anh000100010(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMFree_ovr_1(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_1_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_1_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_1_anh000100010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueSVMFree_ovr_1(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueSVMFree_ovr_1_anh000000010(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueSVMFree_ovr_1_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueSVMFree_ovr_1_anh000100010(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMFree_ovr_2_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      z_EnqueueSVMFree_ovr_0(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueSVMFree_ovr_0_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_3_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      z_EnqueueSVMFree_ovr_1(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueSVMFree_ovr_1_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_4(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_4_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      z_EnqueueSVMFree_ovr_4(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueSVMFree_ovr_4_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_5(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_5_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      z_EnqueueSVMFree_ovr_5(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueSVMFree_ovr_5_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFree_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFree_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFree_ovr_1(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFree_ovr_1_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFree_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFree_ovr_1(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFree_ovr_4(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFree_ovr_5(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_12(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_12_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFree_ovr_12(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFree_ovr_12_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMFree_ovr_13(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    private static function z_EnqueueSVMFree_ovr_13_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFree_ovr_13(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFree_ovr_13_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFree_ovr_12(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFree_ovr_13(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_16(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFree_ovr_16(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFree_ovr_17(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFree(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFree_ovr_17(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.0
    private static function z_EnqueueSVMMap_ovr_0(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    private static function z_EnqueueSVMMap_ovr_0_anh000000010(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMap_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMap_ovr_0_anh000000010(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMap_ovr_1(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    private static function z_EnqueueSVMMap_ovr_1_anh000000010(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMap_ovr_1(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMap_ovr_1_anh000000010(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMap_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMap_ovr_1(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMap_ovr_4(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMap_ovr_4(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMap_ovr_5(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMap(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMap_ovr_5(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.0
    private static function z_EnqueueSVMMemcpy_ovr_0(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    private static function z_EnqueueSVMMemcpy_ovr_0_anh000000010(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemcpy_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemcpy_ovr_0_anh000000010(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMemcpy_ovr_1(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    private static function z_EnqueueSVMMemcpy_ovr_1_anh000000010(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemcpy_ovr_1(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemcpy_ovr_1_anh000000010(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemcpy_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemcpy_ovr_1(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemcpy_ovr_4(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemcpy_ovr_4(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemcpy_ovr_5(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpy';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpy(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemcpy_ovr_5(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.0
    private static function z_EnqueueSVMMemFill_ovr_0(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private static function z_EnqueueSVMMemFill_ovr_0_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_0<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueSVMMemFill_ovr_0_anh000000010(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_0_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFill_ovr_0_anh000000010(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_0_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueSVMMemFill_ovr_1(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private static function z_EnqueueSVMMemFill_ovr_1_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_1<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueSVMMemFill_ovr_1_anh000000010(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_1_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFill_ovr_1_anh000000010(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_1_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_2<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_2_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_2(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_2_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_3<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_3_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_3(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_3_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueSVMMemFill_ovr_4(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_4<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_4(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_4_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_4(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_4(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_4_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueSVMMemFill_ovr_5(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_5<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_5(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueSVMMemFill_ovr_5_anh000100000(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_5(command_queue, svm_ptr, PByte(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (pattern<>nil) and (pattern.Length<>0) then
        Result := temp_EnqueueSVMMemFill_ovr_5(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueSVMMemFill_ovr_5_anh000100000(command_queue, svm_ptr, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueSVMMemFill_ovr_0_anh000000010(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueSVMMemFill_ovr_1_anh000000010(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_0(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_1(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_4(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueSVMMemFill_ovr_5(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueSVMMemFill_ovr_12(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private static function z_EnqueueSVMMemFill_ovr_12_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFill_ovr_12(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFill_ovr_12_anh000000010(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMemFill_ovr_13(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    private static function z_EnqueueSVMMemFill_ovr_13_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFill_ovr_13(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFill_ovr_13_anh000000010(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_12(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_13(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemFill_ovr_16(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_16(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemFill_ovr_17(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFill';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFill(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFill_ovr_17(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.1
    private static function z_EnqueueSVMMigrateMem_ovr_0(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000100010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000010010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_0_anh000110010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_0(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_0_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_0_anh000010010(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_0_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_0_anh000100010(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_0_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_0_anh000110010(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_1(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000100010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000010010(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_1_anh000110010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_1(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_1_anh000000010(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_1_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_1_anh000010010(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_1_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_1_anh000100010(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
        if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
          z_EnqueueSVMMigrateMem_ovr_1_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
          z_EnqueueSVMMigrateMem_ovr_1_anh000110010(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_2_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_2_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_2_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_0(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_0_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_0_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_0_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_3_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_3_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_3_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_1(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_1_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_1_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_1_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_4(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_4_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_4_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_4_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_4(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_4_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_4_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_4_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_5(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_5_anh000100000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_5_anh000010000(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_5_anh000110000(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; sizes: array of UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_5(command_queue, num_svm_pointers, svm_pointers[0], sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_5_anh000010000(command_queue, num_svm_pointers, svm_pointers[0], IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event) else
      if (sizes<>nil) and (sizes.Length<>0) then
        z_EnqueueSVMMigrateMem_ovr_5_anh000100000(command_queue, num_svm_pointers, IntPtr.Zero, sizes[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        z_EnqueueSVMMigrateMem_ovr_5_anh000110000(command_queue, num_svm_pointers, IntPtr.Zero, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMigrateMem_ovr_0(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMigrateMem_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMigrateMem_ovr_1(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMigrateMem_ovr_1_anh000000010(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_0(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_1(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_4(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; var sizes: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_5(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_12(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_12_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMigrateMem_ovr_12(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMigrateMem_ovr_12_anh000000010(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_13(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    private static function z_EnqueueSVMMigrateMem_ovr_13_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMigrateMem_ovr_13(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMigrateMem_ovr_13_anh000000010(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_12(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_13(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_16(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_16(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMigrateMem_ovr_17(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMigrateMem';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMigrateMem(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; sizes: IntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMigrateMem_ovr_17(command_queue, num_svm_pointers, svm_pointers, sizes, flags, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl2.0
    private static function z_EnqueueSVMUnmap_ovr_0(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    private static function z_EnqueueSVMUnmap_ovr_0_anh000010(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMUnmap_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMUnmap_ovr_0_anh000010(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMUnmap_ovr_1(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    private static function z_EnqueueSVMUnmap_ovr_1_anh000010(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMUnmap_ovr_1(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMUnmap_ovr_1_anh000010(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMUnmap_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMUnmap_ovr_1(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMUnmap_ovr_4(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMUnmap_ovr_4(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMUnmap_ovr_5(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmap';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmap(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMUnmap_ovr_5(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueTask_ovr_0(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    private static function z_EnqueueTask_ovr_0_anh000010(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    private static function z_EnqueueTask_ovr_0_anh000001(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    private static function z_EnqueueTask_ovr_0_anh000011(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueTask_ovr_0(command_queue, kernel, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueTask_ovr_0_anh000001(command_queue, kernel, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueTask_ovr_0_anh000010(command_queue, kernel, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueTask_ovr_0_anh000011(command_queue, kernel, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueTask_ovr_1_anh000010(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueTask_ovr_0(command_queue, kernel, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueTask_ovr_0_anh000010(command_queue, kernel, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueTask_ovr_2(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    private static function z_EnqueueTask_ovr_2_anh000010(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueTask_ovr_2(command_queue, kernel, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueTask_ovr_2_anh000010(command_queue, kernel, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueTask_ovr_0(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueTask_ovr_0_anh000001(command_queue, kernel, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueTask_ovr_0(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueTask_ovr_2(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueTask_ovr_6(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    private static function z_EnqueueTask_ovr_6_anh000001(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueTask_ovr_6(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueTask_ovr_6_anh000001(command_queue, kernel, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueTask_ovr_6(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueTask_ovr_8(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueTask';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueTask(command_queue: cl_command_queue; kernel: cl_kernel; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueTask_ovr_8(command_queue, kernel, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueUnmapMemObject_ovr_0(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    private static function z_EnqueueUnmapMemObject_ovr_0_anh0000010(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueUnmapMemObject_ovr_0(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueUnmapMemObject_ovr_0_anh0000010(command_queue, memobj, mapped_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueUnmapMemObject_ovr_1(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    private static function z_EnqueueUnmapMemObject_ovr_1_anh0000010(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueUnmapMemObject_ovr_1(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueUnmapMemObject_ovr_1_anh0000010(command_queue, memobj, mapped_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueUnmapMemObject_ovr_0(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueUnmapMemObject_ovr_1(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueUnmapMemObject_ovr_4(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueUnmapMemObject_ovr_4(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueUnmapMemObject_ovr_5(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueUnmapMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueUnmapMemObject(command_queue: cl_command_queue; memobj: cl_mem; mapped_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueUnmapMemObject_ovr_5(command_queue, memobj, mapped_ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueWaitForEvents_ovr_0(command_queue: cl_command_queue; num_events: UInt32; var event_list: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWaitForEvents';
    private static function z_EnqueueWaitForEvents_ovr_0_anh0001(command_queue: cl_command_queue; num_events: UInt32; event_list: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWaitForEvents';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWaitForEvents(command_queue: cl_command_queue; num_events: UInt32; event_list: array of cl_event): ErrorCode :=
    if (event_list<>nil) and (event_list.Length<>0) then
      z_EnqueueWaitForEvents_ovr_0(command_queue, num_events, event_list[0]) else
      z_EnqueueWaitForEvents_ovr_0_anh0001(command_queue, num_events, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWaitForEvents(command_queue: cl_command_queue; num_events: UInt32; var event_list: cl_event): ErrorCode :=
    z_EnqueueWaitForEvents_ovr_0(command_queue, num_events, event_list);
    private static function z_EnqueueWaitForEvents_ovr_2(command_queue: cl_command_queue; num_events: UInt32; event_list: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWaitForEvents';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWaitForEvents(command_queue: cl_command_queue; num_events: UInt32; event_list: IntPtr): ErrorCode :=
    z_EnqueueWaitForEvents_ovr_2(command_queue, num_events, event_list);
    
    // added in cl1.0
    private static function z_EnqueueWriteBuffer_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private static function z_EnqueueWriteBuffer_ovr_0_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_0<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueWriteBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_0_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueWriteBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_0_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBuffer_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private static function z_EnqueueWriteBuffer_ovr_1_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_1<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueWriteBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_1_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueWriteBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_1_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_2<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_2_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_2(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_2_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_3<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_3_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_3(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_3_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBuffer_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_4<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_4(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_4_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_4(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_4(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_4_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBuffer_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_5<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_5(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_EnqueueWriteBuffer_ovr_5_anh0000001000(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_5(command_queue, buffer, blocking_write, offset, size, PByte(nil)^, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: array of T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (ptr<>nil) and (ptr.Length<>0) then
        Result := temp_EnqueueWriteBuffer_ovr_5(command_queue, buffer, blocking_write, offset, size, ptr[0], num_events_in_wait_list, event_wait_list, &event) else
        Result := temp_EnqueueWriteBuffer_ovr_5_anh0000001000(command_queue, buffer, blocking_write, offset, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueWriteBuffer_ovr_0_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        Result := z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list[0], &event) else
        Result := z_EnqueueWriteBuffer_ovr_1_anh0000000010(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, IntPtr.Zero, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_0(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_1(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_4(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBuffer_ovr_5(command_queue, buffer, blocking_write, offset, size, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBuffer_ovr_12(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private static function z_EnqueueWriteBuffer_ovr_12_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueWriteBuffer_ovr_12(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueWriteBuffer_ovr_12_anh0000000010(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueWriteBuffer_ovr_13(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    private static function z_EnqueueWriteBuffer_ovr_13_anh0000000010(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueWriteBuffer_ovr_13(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueWriteBuffer_ovr_13_anh0000000010(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_12(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_13(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteBuffer_ovr_16(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_16(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteBuffer_ovr_17(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBuffer(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; offset: UIntPtr; size: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBuffer_ovr_17(command_queue, buffer, blocking_write, offset, size, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.1
    private static function z_EnqueueWriteBufferRect_ovr_0(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBufferRect_ovr_0(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBufferRect_ovr_1(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBufferRect_ovr_1(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBufferRect_ovr_2(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBufferRect_ovr_2(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBufferRect_ovr_3(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect<T>(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteBufferRect_ovr_3(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteBufferRect_ovr_4(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBufferRect_ovr_4(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteBufferRect_ovr_5(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBufferRect_ovr_5(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteBufferRect_ovr_6(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteBufferRect_ovr_6(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteBufferRect_ovr_7(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteBufferRect';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteBufferRect(command_queue: cl_command_queue; buffer: cl_mem; blocking_write: Bool; var buffer_offset: UIntPtr; var host_offset: UIntPtr; var region: UIntPtr; buffer_row_pitch: UIntPtr; buffer_slice_pitch: UIntPtr; host_row_pitch: UIntPtr; host_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteBufferRect_ovr_7(command_queue, buffer, blocking_write, buffer_offset, host_offset, region, buffer_row_pitch, buffer_slice_pitch, host_row_pitch, host_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_EnqueueWriteImage_ovr_0(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteImage_ovr_0(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteImage_ovr_1(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteImage_ovr_1(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteImage_ovr_2(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteImage_ovr_2(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteImage_ovr_3(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: Byte; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage<T>(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; var ptr: T; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode; where T: record;
    begin
      Result := z_EnqueueWriteImage_ovr_3(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, PByte(pointer(@ptr))^, num_events_in_wait_list, event_wait_list, &event);
    end;
    private static function z_EnqueueWriteImage_ovr_4(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteImage_ovr_4(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteImage_ovr_5(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteImage_ovr_5(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteImage_ovr_6(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueWriteImage_ovr_6(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueWriteImage_ovr_7(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueWriteImage';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueWriteImage(command_queue: cl_command_queue; image: cl_mem; blocking_write: Bool; var origin: UIntPtr; var region: UIntPtr; input_row_pitch: UIntPtr; input_slice_pitch: UIntPtr; ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueWriteImage_ovr_7(command_queue, image, blocking_write, origin, region, input_row_pitch, input_slice_pitch, ptr, num_events_in_wait_list, event_wait_list, &event);
    
    // added in cl1.0
    private static function z_Finish_ovr_0(command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clFinish';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function Finish(command_queue: cl_command_queue): ErrorCode :=
    z_Finish_ovr_0(command_queue);
    
    // added in cl1.0
    private static function z_Flush_ovr_0(command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clFlush';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function Flush(command_queue: cl_command_queue): ErrorCode :=
    z_Flush_ovr_0(command_queue);
    
    // added in cl1.0
    private static function z_GetCommandQueueInfo_ovr_0(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_0(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_1(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_1(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_2(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_2(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_3(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_3(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_4(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_4(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_5(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_5(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_6(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_6(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_7(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_7(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_8(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_8(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_9(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_9(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_10(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_10(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetCommandQueueInfo_ovr_11(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetCommandQueueInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetCommandQueueInfo(command_queue: cl_command_queue; param_name: CommandQueueInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetCommandQueueInfo_ovr_11(command_queue, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetContextInfo_ovr_0(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetContextInfo_ovr_0(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_1(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetContextInfo_ovr_1(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_2(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetContextInfo_ovr_2(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_3(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetContextInfo_ovr_3(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_4(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: ContextProperties; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: ContextProperties; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetContextInfo_ovr_4(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_5(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: ContextProperties; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; var param_value: ContextProperties; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetContextInfo_ovr_5(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_6(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetContextInfo_ovr_6(context, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetContextInfo_ovr_7(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetContextInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetContextInfo(context: cl_context; param_name: ContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetContextInfo_ovr_7(context, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl2.1
    private static function z_GetDeviceAndHostTimer_ovr_0(device: cl_device_id; var device_timestamp: UInt64; var host_timestamp: UInt64): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceAndHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceAndHostTimer(device: cl_device_id; var device_timestamp: UInt64; var host_timestamp: UInt64): ErrorCode :=
    z_GetDeviceAndHostTimer_ovr_0(device, device_timestamp, host_timestamp);
    private static function z_GetDeviceAndHostTimer_ovr_1(device: cl_device_id; var device_timestamp: UInt64; host_timestamp: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceAndHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceAndHostTimer(device: cl_device_id; var device_timestamp: UInt64; host_timestamp: IntPtr): ErrorCode :=
    z_GetDeviceAndHostTimer_ovr_1(device, device_timestamp, host_timestamp);
    private static function z_GetDeviceAndHostTimer_ovr_2(device: cl_device_id; device_timestamp: IntPtr; var host_timestamp: UInt64): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceAndHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceAndHostTimer(device: cl_device_id; device_timestamp: IntPtr; var host_timestamp: UInt64): ErrorCode :=
    z_GetDeviceAndHostTimer_ovr_2(device, device_timestamp, host_timestamp);
    private static function z_GetDeviceAndHostTimer_ovr_3(device: cl_device_id; device_timestamp: IntPtr; host_timestamp: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceAndHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceAndHostTimer(device: cl_device_id; device_timestamp: IntPtr; host_timestamp: IntPtr): ErrorCode :=
    z_GetDeviceAndHostTimer_ovr_3(device, device_timestamp, host_timestamp);
    
    // added in cl1.0
    private static function z_GetDeviceIDs_ovr_0(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDs(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDs_ovr_0(platform, device_type, num_entries, devices, num_devices);
    private static function z_GetDeviceIDs_ovr_1(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDs(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDs_ovr_1(platform, device_type, num_entries, devices, num_devices);
    private static function z_GetDeviceIDs_ovr_2(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDs(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDs_ovr_2(platform, device_type, num_entries, devices, num_devices);
    private static function z_GetDeviceIDs_ovr_3(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDs(platform: cl_platform_id; device_type: DeviceType; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDs_ovr_3(platform, device_type, num_entries, devices, num_devices);
    
    // added in cl1.0
    private static function z_GetDeviceInfo_ovr_0(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_0(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_1(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_1(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_2(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_2(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_3(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_3(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_4(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_4(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_5(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_5(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_6(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_6(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_7(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_7(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_8(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_8(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_9(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_9(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_10(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_10(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_11(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_11(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_12(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceFPConfig; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceFPConfig; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_12(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_13(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceFPConfig; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceFPConfig; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_13(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_14(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceMemCacheType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceMemCacheType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_14(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_15(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceMemCacheType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceMemCacheType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_15(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_16(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceLocalMemType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceLocalMemType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_16(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_17(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceLocalMemType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceLocalMemType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_17(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_18(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceExecCapabilities; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceExecCapabilities; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_18(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_19(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceExecCapabilities; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceExecCapabilities; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_19(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_20(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_20(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_21(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: CommandQueueProperties; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_21(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_22(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: cl_platform_id; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: cl_platform_id; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_22(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_23(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: cl_platform_id; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: cl_platform_id; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_23(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_24(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DevicePartitionProperty; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DevicePartitionProperty; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_24(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_25(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DevicePartitionProperty; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DevicePartitionProperty; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_25(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_26(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceAffinityDomain; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceAffinityDomain; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_26(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_27(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceAffinityDomain; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceAffinityDomain; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_27(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_28(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceSVMCapabilities; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceSVMCapabilities; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_28(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_29(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceSVMCapabilities; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; var param_value: DeviceSVMCapabilities; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_29(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_30(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_30(device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceInfo_ovr_31(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceInfo(device: cl_device_id; param_name: DeviceInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceInfo_ovr_31(device, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetEventInfo_ovr_0(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_0(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_1(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_command_queue; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_1(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_2(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_2(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_3(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_3(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_4(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_4(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_5(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_5(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_6(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandExecutionStatus; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandExecutionStatus; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_6(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_7(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandExecutionStatus; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: CommandExecutionStatus; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_7(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_8(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_8(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_9(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_9(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_10(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventInfo_ovr_10(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventInfo_ovr_11(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventInfo(&event: cl_event; param_name: EventInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventInfo_ovr_11(&event, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetEventProfilingInfo_ovr_0(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventProfilingInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventProfilingInfo(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventProfilingInfo_ovr_0(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventProfilingInfo_ovr_1(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventProfilingInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventProfilingInfo(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventProfilingInfo_ovr_1(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventProfilingInfo_ovr_2(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventProfilingInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventProfilingInfo(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetEventProfilingInfo_ovr_2(&event, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetEventProfilingInfo_ovr_3(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetEventProfilingInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetEventProfilingInfo(&event: cl_event; param_name: ProfilingInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetEventProfilingInfo_ovr_3(&event, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetExtensionFunctionAddress_ovr_0(func_name: IntPtr): IntPtr;
    external 'opencl.dll' name 'clGetExtensionFunctionAddress';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetExtensionFunctionAddress(func_name: string): IntPtr;
    begin
      var par_1_str_ptr: IntPtr;
      try
        par_1_str_ptr := Marshal.StringToHGlobalAnsi(func_name);
        Result := z_GetExtensionFunctionAddress_ovr_0(par_1_str_ptr);
      finally
        Marshal.FreeHGlobal(par_1_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetExtensionFunctionAddress(func_name: IntPtr): IntPtr :=
    z_GetExtensionFunctionAddress_ovr_0(func_name);
    
    // added in cl1.2
    private static function z_GetExtensionFunctionAddressForPlatform_ovr_0(platform: cl_platform_id; func_name: IntPtr): IntPtr;
    external 'opencl.dll' name 'clGetExtensionFunctionAddressForPlatform';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetExtensionFunctionAddressForPlatform(platform: cl_platform_id; func_name: string): IntPtr;
    begin
      var par_2_str_ptr: IntPtr;
      try
        par_2_str_ptr := Marshal.StringToHGlobalAnsi(func_name);
        Result := z_GetExtensionFunctionAddressForPlatform_ovr_0(platform, par_2_str_ptr);
      finally
        Marshal.FreeHGlobal(par_2_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetExtensionFunctionAddressForPlatform(platform: cl_platform_id; func_name: IntPtr): IntPtr :=
    z_GetExtensionFunctionAddressForPlatform_ovr_0(platform, func_name);
    
    // added in cl2.1
    private static function z_GetHostTimer_ovr_0(device: cl_device_id; var host_timestamp: UInt64): ErrorCode;
    external 'opencl.dll' name 'clGetHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetHostTimer(device: cl_device_id; var host_timestamp: UInt64): ErrorCode :=
    z_GetHostTimer_ovr_0(device, host_timestamp);
    private static function z_GetHostTimer_ovr_1(device: cl_device_id; host_timestamp: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetHostTimer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetHostTimer(device: cl_device_id; host_timestamp: IntPtr): ErrorCode :=
    z_GetHostTimer_ovr_1(device, host_timestamp);
    
    // added in cl1.0
    private static function z_GetImageInfo_ovr_0(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: cl_image_format; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: cl_image_format; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetImageInfo_ovr_0(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_1(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: cl_image_format; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: cl_image_format; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetImageInfo_ovr_1(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_2(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetImageInfo_ovr_2(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_3(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetImageInfo_ovr_3(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_4(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetImageInfo_ovr_4(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_5(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetImageInfo_ovr_5(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_6(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetImageInfo_ovr_6(image, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetImageInfo_ovr_7(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetImageInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetImageInfo(image: cl_mem; param_name: ImageInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetImageInfo_ovr_7(image, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.2
    private static function z_GetKernelArgInfo_ovr_0(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAddressQualifier; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAddressQualifier; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_0(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_1(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAddressQualifier; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAddressQualifier; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_1(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_2(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAccessQualifier; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAccessQualifier; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_2(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_3(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAccessQualifier; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgAccessQualifier; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_3(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_4(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_4(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_5(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_5(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_6(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgTypeQualifier; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgTypeQualifier; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_6(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_7(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgTypeQualifier; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; var param_value: KernelArgTypeQualifier; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_7(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_8(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_8(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelArgInfo_ovr_9(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelArgInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelArgInfo(kernel: cl_kernel; arg_index: UInt32; param_name: KernelArgInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelArgInfo_ovr_9(kernel, arg_index, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetKernelInfo_ovr_0(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_0(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_1(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_1(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_2(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_2(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_3(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_3(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_4(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_4(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_5(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_5(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_6(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_program; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_program; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_6(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_7(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_program; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; var param_value: cl_program; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_7(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_8(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_8(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelInfo_ovr_9(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelInfo(kernel: cl_kernel; param_name: KernelInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelInfo_ovr_9(kernel, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl2.1
    private static function z_GetKernelSubGroupInfo_ovr_0(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; var input_value: UIntPtr; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; var input_value: UIntPtr; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_0(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfo_ovr_1(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; var input_value: UIntPtr; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; var input_value: UIntPtr; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_1(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfo_ovr_2(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_2(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfo_ovr_3(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_3(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfo_ovr_4(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_4(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfo_ovr_5(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelSubGroupInfo_ovr_5(kernel, device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetKernelWorkGroupInfo_ovr_0(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_0(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelWorkGroupInfo_ovr_1(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_1(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelWorkGroupInfo_ovr_2(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_2(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelWorkGroupInfo_ovr_3(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_3(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelWorkGroupInfo_ovr_4(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_4(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelWorkGroupInfo_ovr_5(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelWorkGroupInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelWorkGroupInfo(kernel: cl_kernel; device: cl_device_id; param_name: KernelWorkGroupInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelWorkGroupInfo_ovr_5(kernel, device, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetMemObjectInfo_ovr_0(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemObjectType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemObjectType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_0(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_1(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemObjectType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemObjectType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_1(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_2(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemFlags; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemFlags; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_2(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_3(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemFlags; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: MemFlags; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_3(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_4(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_4(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_5(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_5(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_6(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_6(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_7(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_7(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_8(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_8(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_9(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_9(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_10(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_10(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_11(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_11(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_12(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_mem; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_mem; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_12(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_13(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_mem; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: cl_mem; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_13(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_14(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_14(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_15(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_15(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_16(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_16(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemObjectInfo_ovr_17(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemObjectInfo(memobj: cl_mem; param_name: MemInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemObjectInfo_ovr_17(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl2.0
    private static function z_GetPipeInfo_ovr_0(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPipeInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPipeInfo(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetPipeInfo_ovr_0(pipe, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPipeInfo_ovr_1(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPipeInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPipeInfo(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetPipeInfo_ovr_1(pipe, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPipeInfo_ovr_2(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPipeInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPipeInfo(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetPipeInfo_ovr_2(pipe, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPipeInfo_ovr_3(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPipeInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPipeInfo(pipe: cl_mem; param_name: PipeInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetPipeInfo_ovr_3(pipe, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetPlatformIDs_ovr_0(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformIDs(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): ErrorCode :=
    z_GetPlatformIDs_ovr_0(num_entries, platforms, num_platforms);
    private static function z_GetPlatformIDs_ovr_1(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformIDs(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): ErrorCode :=
    z_GetPlatformIDs_ovr_1(num_entries, platforms, num_platforms);
    private static function z_GetPlatformIDs_ovr_2(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformIDs(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode :=
    z_GetPlatformIDs_ovr_2(num_entries, platforms, num_platforms);
    private static function z_GetPlatformIDs_ovr_3(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformIDs';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformIDs(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode :=
    z_GetPlatformIDs_ovr_3(num_entries, platforms, num_platforms);
    
    // added in cl1.0
    private static function z_GetPlatformInfo_ovr_0(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_0(platform, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPlatformInfo_ovr_1(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_1(platform, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPlatformInfo_ovr_2(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; var param_value: UInt64; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_2(platform, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPlatformInfo_ovr_3(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; var param_value: UInt64; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_3(platform, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPlatformInfo_ovr_4(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_4(platform, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetPlatformInfo_ovr_5(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetPlatformInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetPlatformInfo(platform: cl_platform_id; param_name: PlatformInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetPlatformInfo_ovr_5(platform, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetProgramBuildInfo_ovr_0(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: BuildStatus; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: BuildStatus; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_0(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_1(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: BuildStatus; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: BuildStatus; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_1(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_2(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_2(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_3(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_3(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_4(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: ProgramBinaryType; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: ProgramBinaryType; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_4(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_5(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: ProgramBinaryType; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: ProgramBinaryType; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_5(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_6(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_6(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_7(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_7(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_8(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_8(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramBuildInfo_ovr_9(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramBuildInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramBuildInfo(&program: cl_program; device: cl_device_id; param_name: ProgramBuildInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramBuildInfo_ovr_9(&program, device, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetProgramInfo_ovr_0(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_0(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_1(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_1(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_2(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_2(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_3(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_3(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_4(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_device_id; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_4(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_5(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: cl_device_id; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_5(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_6(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_6(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_7(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_7(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_8(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UIntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_8(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_9(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: UIntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_9(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_10(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_10(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_11(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_11(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_12(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_12(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_13(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_13(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_14(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_14(&program, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetProgramInfo_ovr_15(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetProgramInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetProgramInfo(&program: cl_program; param_name: ProgramInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetProgramInfo_ovr_15(&program, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetSamplerInfo_ovr_0(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: UInt32; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_0(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_1(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: UInt32; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_1(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_2(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: cl_context; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_2(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_3(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: cl_context; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_3(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_4(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: Bool; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_4(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_5(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: Bool; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_5(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_6(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: AddressingMode; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: AddressingMode; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_6(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_7(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: AddressingMode; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: AddressingMode; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_7(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_8(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: FilterMode; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: FilterMode; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_8(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_9(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: FilterMode; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; var param_value: FilterMode; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_9(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_10(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_10(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetSamplerInfo_ovr_11(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSamplerInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSamplerInfo(sampler: cl_sampler; param_name: SamplerInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetSamplerInfo_ovr_11(sampler, param_name, param_value_size, param_value, param_value_size_ret);
    
    // added in cl1.0
    private static function z_GetSupportedImageFormats_ovr_0(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; var num_image_formats: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    private static function z_GetSupportedImageFormats_ovr_0_anh0000010(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; var num_image_formats: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    private static function z_GetSupportedImageFormats_ovr_0_anh0000001(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    private static function z_GetSupportedImageFormats_ovr_0_anh0000011(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: array of cl_image_format; num_image_formats: array of UInt32): ErrorCode :=
    if (image_formats<>nil) and (image_formats.Length<>0) then
      if (num_image_formats<>nil) and (num_image_formats.Length<>0) then
        z_GetSupportedImageFormats_ovr_0(context, flags, image_type, num_entries, image_formats[0], num_image_formats[0]) else
        z_GetSupportedImageFormats_ovr_0_anh0000001(context, flags, image_type, num_entries, image_formats[0], IntPtr.Zero) else
      if (num_image_formats<>nil) and (num_image_formats.Length<>0) then
        z_GetSupportedImageFormats_ovr_0_anh0000010(context, flags, image_type, num_entries, IntPtr.Zero, num_image_formats[0]) else
        z_GetSupportedImageFormats_ovr_0_anh0000011(context, flags, image_type, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetSupportedImageFormats_ovr_1_anh0000010(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; var num_image_formats: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: array of cl_image_format; var num_image_formats: UInt32): ErrorCode :=
    if (image_formats<>nil) and (image_formats.Length<>0) then
      z_GetSupportedImageFormats_ovr_0(context, flags, image_type, num_entries, image_formats[0], num_image_formats) else
      z_GetSupportedImageFormats_ovr_0_anh0000010(context, flags, image_type, num_entries, IntPtr.Zero, num_image_formats);
    private static function z_GetSupportedImageFormats_ovr_2(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    private static function z_GetSupportedImageFormats_ovr_2_anh0000010(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: array of cl_image_format; num_image_formats: IntPtr): ErrorCode :=
    if (image_formats<>nil) and (image_formats.Length<>0) then
      z_GetSupportedImageFormats_ovr_2(context, flags, image_type, num_entries, image_formats[0], num_image_formats) else
      z_GetSupportedImageFormats_ovr_2_anh0000010(context, flags, image_type, num_entries, IntPtr.Zero, num_image_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; num_image_formats: array of UInt32): ErrorCode :=
    if (num_image_formats<>nil) and (num_image_formats.Length<>0) then
      z_GetSupportedImageFormats_ovr_0(context, flags, image_type, num_entries, image_formats, num_image_formats[0]) else
      z_GetSupportedImageFormats_ovr_0_anh0000001(context, flags, image_type, num_entries, image_formats, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; var num_image_formats: UInt32): ErrorCode :=
    z_GetSupportedImageFormats_ovr_0(context, flags, image_type, num_entries, image_formats, num_image_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; var image_formats: cl_image_format; num_image_formats: IntPtr): ErrorCode :=
    z_GetSupportedImageFormats_ovr_2(context, flags, image_type, num_entries, image_formats, num_image_formats);
    private static function z_GetSupportedImageFormats_ovr_6(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; var num_image_formats: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    private static function z_GetSupportedImageFormats_ovr_6_anh0000001(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: array of UInt32): ErrorCode :=
    if (num_image_formats<>nil) and (num_image_formats.Length<>0) then
      z_GetSupportedImageFormats_ovr_6(context, flags, image_type, num_entries, image_formats, num_image_formats[0]) else
      z_GetSupportedImageFormats_ovr_6_anh0000001(context, flags, image_type, num_entries, image_formats, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; var num_image_formats: UInt32): ErrorCode :=
    z_GetSupportedImageFormats_ovr_6(context, flags, image_type, num_entries, image_formats, num_image_formats);
    private static function z_GetSupportedImageFormats_ovr_8(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetSupportedImageFormats';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetSupportedImageFormats(context: cl_context; flags: MemFlags; image_type: MemObjectType; num_entries: UInt32; image_formats: IntPtr; num_image_formats: IntPtr): ErrorCode :=
    z_GetSupportedImageFormats_ovr_8(context, flags, image_type, num_entries, image_formats, num_image_formats);
    
    // added in cl1.2
    private static function z_LinkProgram_ovr_0(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_0_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_0_anh0000001000(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_0_anh0001001000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: string; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (device_list<>nil) and (device_list.Length<>0) then
          if (input_programs<>nil) and (input_programs.Length<>0) then
            Result := z_LinkProgram_ovr_0(context, num_devices, device_list[0], par_4_str_ptr, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
            Result := z_LinkProgram_ovr_0_anh0000001000(context, num_devices, device_list[0], par_4_str_ptr, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret) else
          if (input_programs<>nil) and (input_programs.Length<>0) then
            Result := z_LinkProgram_ovr_0_anh0001000000(context, num_devices, IntPtr.Zero, par_4_str_ptr, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
            Result := z_LinkProgram_ovr_0_anh0001001000(context, num_devices, IntPtr.Zero, par_4_str_ptr, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_LinkProgram_ovr_1_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: string; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (device_list<>nil) and (device_list.Length<>0) then
          Result := z_LinkProgram_ovr_0(context, num_devices, device_list[0], par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret) else
          Result := z_LinkProgram_ovr_0_anh0001000000(context, num_devices, IntPtr.Zero, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_LinkProgram_ovr_2(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_2_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: string; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (device_list<>nil) and (device_list.Length<>0) then
          Result := z_LinkProgram_ovr_2(context, num_devices, device_list[0], par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret) else
          Result := z_LinkProgram_ovr_2_anh0001000000(context, num_devices, IntPtr.Zero, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_LinkProgram_ovr_3_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_3_anh0001001000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (device_list<>nil) and (device_list.Length<>0) then
      if (input_programs<>nil) and (input_programs.Length<>0) then
        z_LinkProgram_ovr_0(context, num_devices, device_list[0], options, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
        z_LinkProgram_ovr_0_anh0000001000(context, num_devices, device_list[0], options, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret) else
      if (input_programs<>nil) and (input_programs.Length<>0) then
        z_LinkProgram_ovr_0_anh0001000000(context, num_devices, IntPtr.Zero, options, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
        z_LinkProgram_ovr_0_anh0001001000(context, num_devices, IntPtr.Zero, options, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    private static function z_LinkProgram_ovr_4_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (device_list<>nil) and (device_list.Length<>0) then
      z_LinkProgram_ovr_0(context, num_devices, device_list[0], options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret) else
      z_LinkProgram_ovr_0_anh0001000000(context, num_devices, IntPtr.Zero, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    private static function z_LinkProgram_ovr_5_anh0001000000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: array of cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (device_list<>nil) and (device_list.Length<>0) then
      z_LinkProgram_ovr_2(context, num_devices, device_list[0], options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret) else
      z_LinkProgram_ovr_2_anh0001000000(context, num_devices, IntPtr.Zero, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (input_programs<>nil) and (input_programs.Length<>0) then
          Result := z_LinkProgram_ovr_0(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
          Result := z_LinkProgram_ovr_0_anh0000001000(context, num_devices, device_list, par_4_str_ptr, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_LinkProgram_ovr_0(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: string; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_LinkProgram_ovr_2(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (input_programs<>nil) and (input_programs.Length<>0) then
      z_LinkProgram_ovr_0(context, num_devices, device_list, options, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
      z_LinkProgram_ovr_0_anh0000001000(context, num_devices, device_list, options, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_LinkProgram_ovr_0(context, num_devices, device_list, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; var device_list: cl_device_id; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_LinkProgram_ovr_2(context, num_devices, device_list, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    private static function z_LinkProgram_ovr_12(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    private static function z_LinkProgram_ovr_12_anh0000001000(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: string; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        if (input_programs<>nil) and (input_programs.Length<>0) then
          Result := z_LinkProgram_ovr_12(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
          Result := z_LinkProgram_ovr_12_anh0000001000(context, num_devices, device_list, par_4_str_ptr, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: string; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_LinkProgram_ovr_12(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    private static function z_LinkProgram_ovr_14(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clLinkProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: string; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program;
    begin
      var par_4_str_ptr: IntPtr;
      try
        par_4_str_ptr := Marshal.StringToHGlobalAnsi(options);
        Result := z_LinkProgram_ovr_14(context, num_devices, device_list, par_4_str_ptr, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
      finally
        Marshal.FreeHGlobal(par_4_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: array of cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (input_programs<>nil) and (input_programs.Length<>0) then
      z_LinkProgram_ovr_12(context, num_devices, device_list, options, num_input_programs, input_programs[0], pfn_notify, user_data, errcode_ret) else
      z_LinkProgram_ovr_12_anh0000001000(context, num_devices, device_list, options, num_input_programs, IntPtr.Zero, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; var input_programs: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_LinkProgram_ovr_12(context, num_devices, device_list, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function LinkProgram(context: cl_context; num_devices: UInt32; device_list: IntPtr; options: IntPtr; num_input_programs: UInt32; input_programs: IntPtr; pfn_notify: ProgramCallback; user_data: IntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_LinkProgram_ovr_14(context, num_devices, device_list, options, num_input_programs, input_programs, pfn_notify, user_data, errcode_ret);
    
    // added in cl1.0
    private static function z_ReleaseCommandQueue_ovr_0(command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clReleaseCommandQueue';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseCommandQueue(command_queue: cl_command_queue): ErrorCode :=
    z_ReleaseCommandQueue_ovr_0(command_queue);
    
    // added in cl1.0
    private static function z_ReleaseContext_ovr_0(context: cl_context): ErrorCode;
    external 'opencl.dll' name 'clReleaseContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseContext(context: cl_context): ErrorCode :=
    z_ReleaseContext_ovr_0(context);
    
    // added in cl1.2
    private static function z_ReleaseDevice_ovr_0(device: cl_device_id): ErrorCode;
    external 'opencl.dll' name 'clReleaseDevice';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseDevice(device: cl_device_id): ErrorCode :=
    z_ReleaseDevice_ovr_0(device);
    
    // added in cl1.0
    private static function z_ReleaseEvent_ovr_0(&event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clReleaseEvent';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseEvent(&event: cl_event): ErrorCode :=
    z_ReleaseEvent_ovr_0(&event);
    
    // added in cl1.0
    private static function z_ReleaseKernel_ovr_0(kernel: cl_kernel): ErrorCode;
    external 'opencl.dll' name 'clReleaseKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseKernel(kernel: cl_kernel): ErrorCode :=
    z_ReleaseKernel_ovr_0(kernel);
    
    // added in cl1.0
    private static function z_ReleaseMemObject_ovr_0(memobj: cl_mem): ErrorCode;
    external 'opencl.dll' name 'clReleaseMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseMemObject(memobj: cl_mem): ErrorCode :=
    z_ReleaseMemObject_ovr_0(memobj);
    
    // added in cl1.0
    private static function z_ReleaseProgram_ovr_0(&program: cl_program): ErrorCode;
    external 'opencl.dll' name 'clReleaseProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseProgram(&program: cl_program): ErrorCode :=
    z_ReleaseProgram_ovr_0(&program);
    
    // added in cl1.0
    private static function z_ReleaseSampler_ovr_0(sampler: cl_sampler): ErrorCode;
    external 'opencl.dll' name 'clReleaseSampler';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseSampler(sampler: cl_sampler): ErrorCode :=
    z_ReleaseSampler_ovr_0(sampler);
    
    // added in cl1.0
    private static function z_RetainCommandQueue_ovr_0(command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clRetainCommandQueue';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainCommandQueue(command_queue: cl_command_queue): ErrorCode :=
    z_RetainCommandQueue_ovr_0(command_queue);
    
    // added in cl1.0
    private static function z_RetainContext_ovr_0(context: cl_context): ErrorCode;
    external 'opencl.dll' name 'clRetainContext';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainContext(context: cl_context): ErrorCode :=
    z_RetainContext_ovr_0(context);
    
    // added in cl1.2
    private static function z_RetainDevice_ovr_0(device: cl_device_id): ErrorCode;
    external 'opencl.dll' name 'clRetainDevice';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainDevice(device: cl_device_id): ErrorCode :=
    z_RetainDevice_ovr_0(device);
    
    // added in cl1.0
    private static function z_RetainEvent_ovr_0(&event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clRetainEvent';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainEvent(&event: cl_event): ErrorCode :=
    z_RetainEvent_ovr_0(&event);
    
    // added in cl1.0
    private static function z_RetainKernel_ovr_0(kernel: cl_kernel): ErrorCode;
    external 'opencl.dll' name 'clRetainKernel';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainKernel(kernel: cl_kernel): ErrorCode :=
    z_RetainKernel_ovr_0(kernel);
    
    // added in cl1.0
    private static function z_RetainMemObject_ovr_0(memobj: cl_mem): ErrorCode;
    external 'opencl.dll' name 'clRetainMemObject';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainMemObject(memobj: cl_mem): ErrorCode :=
    z_RetainMemObject_ovr_0(memobj);
    
    // added in cl1.0
    private static function z_RetainProgram_ovr_0(&program: cl_program): ErrorCode;
    external 'opencl.dll' name 'clRetainProgram';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainProgram(&program: cl_program): ErrorCode :=
    z_RetainProgram_ovr_0(&program);
    
    // added in cl1.0
    private static function z_RetainSampler_ovr_0(sampler: cl_sampler): ErrorCode;
    external 'opencl.dll' name 'clRetainSampler';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainSampler(sampler: cl_sampler): ErrorCode :=
    z_RetainSampler_ovr_0(sampler);
    
    // added in cl1.0
    private static function z_SetCommandQueueProperty_ovr_0(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; var old_properties: CommandQueueProperties): ErrorCode;
    external 'opencl.dll' name 'clSetCommandQueueProperty';
    private static function z_SetCommandQueueProperty_ovr_0_anh00001(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; old_properties: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetCommandQueueProperty';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetCommandQueueProperty(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; old_properties: array of CommandQueueProperties): ErrorCode :=
    if (old_properties<>nil) and (old_properties.Length<>0) then
      z_SetCommandQueueProperty_ovr_0(command_queue, properties, enable, old_properties[0]) else
      z_SetCommandQueueProperty_ovr_0_anh00001(command_queue, properties, enable, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetCommandQueueProperty(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; var old_properties: CommandQueueProperties): ErrorCode :=
    z_SetCommandQueueProperty_ovr_0(command_queue, properties, enable, old_properties);
    private static function z_SetCommandQueueProperty_ovr_2(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; old_properties: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetCommandQueueProperty';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetCommandQueueProperty(command_queue: cl_command_queue; properties: CommandQueueProperties; enable: Bool; old_properties: IntPtr): ErrorCode :=
    z_SetCommandQueueProperty_ovr_2(command_queue, properties, enable, old_properties);
    
    // added in cl3.0
    private static function z_SetContextDestructorCallback_ovr_0(context: cl_context; pfn_notify: ContextDestructorCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetContextDestructorCallback';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetContextDestructorCallback(context: cl_context; pfn_notify: ContextDestructorCallback; user_data: IntPtr): ErrorCode :=
    z_SetContextDestructorCallback_ovr_0(context, pfn_notify, user_data);
    
    // added in cl2.1
    private static function z_SetDefaultDeviceCommandQueue_ovr_0(context: cl_context; device: cl_device_id; command_queue: cl_command_queue): ErrorCode;
    external 'opencl.dll' name 'clSetDefaultDeviceCommandQueue';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetDefaultDeviceCommandQueue(context: cl_context; device: cl_device_id; command_queue: cl_command_queue): ErrorCode :=
    z_SetDefaultDeviceCommandQueue_ovr_0(context, device, command_queue);
    
    // added in cl1.1
    private static function z_SetEventCallback_ovr_0(&event: cl_event; command_exec_callback_type: CommandExecutionStatus; pfn_notify: EventCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetEventCallback';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetEventCallback(&event: cl_event; command_exec_callback_type: CommandExecutionStatus; pfn_notify: EventCallback; user_data: IntPtr): ErrorCode :=
    z_SetEventCallback_ovr_0(&event, command_exec_callback_type, pfn_notify, user_data);
    
    // added in cl1.0
    private static function z_SetKernelArg_ovr_0(kernel: cl_kernel; arg_index: UInt32; arg_size: UIntPtr; var arg_value: Byte): ErrorCode;
    external 'opencl.dll' name 'clSetKernelArg';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelArg<T>(kernel: cl_kernel; arg_index: UInt32; arg_size: UIntPtr; var arg_value: T): ErrorCode; where T: record;
    begin
      Result := z_SetKernelArg_ovr_0(kernel, arg_index, arg_size, PByte(pointer(@arg_value))^);
    end;
    private static function z_SetKernelArg_ovr_1(kernel: cl_kernel; arg_index: UInt32; arg_size: UIntPtr; arg_value: pointer): ErrorCode;
    external 'opencl.dll' name 'clSetKernelArg';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelArg(kernel: cl_kernel; arg_index: UInt32; arg_size: UIntPtr; arg_value: pointer): ErrorCode :=
    z_SetKernelArg_ovr_1(kernel, arg_index, arg_size, arg_value);
    
    // added in cl2.0
    private static function z_SetKernelArgSVMPointer_ovr_0(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetKernelArgSVMPointer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelArgSVMPointer(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode :=
    z_SetKernelArgSVMPointer_ovr_0(kernel, arg_index, arg_value);
    
    // added in cl2.0
    private static function z_SetKernelExecInfo_ovr_0(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; var param_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetKernelExecInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelExecInfo(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; var param_value: IntPtr): ErrorCode :=
    z_SetKernelExecInfo_ovr_0(kernel, param_name, param_value_size, param_value);
    private static function z_SetKernelExecInfo_ovr_1(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; var param_value: Bool): ErrorCode;
    external 'opencl.dll' name 'clSetKernelExecInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelExecInfo(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; var param_value: Bool): ErrorCode :=
    z_SetKernelExecInfo_ovr_1(kernel, param_name, param_value_size, param_value);
    private static function z_SetKernelExecInfo_ovr_2(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; param_value: pointer): ErrorCode;
    external 'opencl.dll' name 'clSetKernelExecInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelExecInfo(kernel: cl_kernel; param_name: KernelExecInfo; param_value_size: UIntPtr; param_value: pointer): ErrorCode :=
    z_SetKernelExecInfo_ovr_2(kernel, param_name, param_value_size, param_value);
    
    // added in cl1.1
    private static function z_SetMemObjectDestructorCallback_ovr_0(memobj: cl_mem; pfn_notify: MemObjectDestructorCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetMemObjectDestructorCallback';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetMemObjectDestructorCallback(memobj: cl_mem; pfn_notify: MemObjectDestructorCallback; user_data: IntPtr): ErrorCode :=
    z_SetMemObjectDestructorCallback_ovr_0(memobj, pfn_notify, user_data);
    
    // added in cl2.2
    private static function z_SetProgramReleaseCallback_ovr_0(&program: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetProgramReleaseCallback';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetProgramReleaseCallback(&program: cl_program; pfn_notify: ProgramCallback; user_data: IntPtr): ErrorCode :=
    z_SetProgramReleaseCallback_ovr_0(&program, pfn_notify, user_data);
    
    // added in cl2.2
    private static function z_SetProgramSpecializationConstant_ovr_0(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; var spec_value: Byte): ErrorCode;
    external 'opencl.dll' name 'clSetProgramSpecializationConstant';
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_SetProgramSpecializationConstant_ovr_0<T>(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; var spec_value: T): ErrorCode; where T: record;
    begin
      Result := z_SetProgramSpecializationConstant_ovr_0(&program, spec_id, spec_size, PByte(pointer(@spec_value))^);
    end;
    private [MethodImpl(MethodImplOptions.AggressiveInlining)] static function temp_SetProgramSpecializationConstant_ovr_0_anh00001(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr): ErrorCode :=
    z_SetProgramSpecializationConstant_ovr_0(&program, spec_id, spec_size, PByte(nil)^);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetProgramSpecializationConstant<T>(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; spec_value: array of T): ErrorCode; where T: record;
    begin
      if (spec_value<>nil) and (spec_value.Length<>0) then
        Result := temp_SetProgramSpecializationConstant_ovr_0(&program, spec_id, spec_size, spec_value[0]) else
        Result := temp_SetProgramSpecializationConstant_ovr_0_anh00001(&program, spec_id, spec_size);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetProgramSpecializationConstant<T>(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; var spec_value: T): ErrorCode; where T: record;
    begin
      Result := z_SetProgramSpecializationConstant_ovr_0(&program, spec_id, spec_size, PByte(pointer(@spec_value))^);
    end;
    private static function z_SetProgramSpecializationConstant_ovr_2(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; spec_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetProgramSpecializationConstant';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetProgramSpecializationConstant(&program: cl_program; spec_id: UInt32; spec_size: UIntPtr; spec_value: IntPtr): ErrorCode :=
    z_SetProgramSpecializationConstant_ovr_2(&program, spec_id, spec_size, spec_value);
    
    // added in cl1.1
    private static function z_SetUserEventStatus_ovr_0(&event: cl_event; execution_status: CommandExecutionStatus): ErrorCode;
    external 'opencl.dll' name 'clSetUserEventStatus';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetUserEventStatus(&event: cl_event; execution_status: CommandExecutionStatus): ErrorCode :=
    z_SetUserEventStatus_ovr_0(&event, execution_status);
    
    // added in cl2.0
    private static function z_SVMAlloc_ovr_0(context: cl_context; flags: SvmMemFlags; size: UIntPtr; alignment: UInt32): IntPtr;
    external 'opencl.dll' name 'clSVMAlloc';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SVMAlloc(context: cl_context; flags: SvmMemFlags; size: UIntPtr; alignment: UInt32): IntPtr :=
    z_SVMAlloc_ovr_0(context, flags, size, alignment);
    
    // added in cl2.0
    private static procedure z_SVMFree_ovr_0(context: cl_context; svm_pointer: IntPtr);
    external 'opencl.dll' name 'clSVMFree';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure SVMFree(context: cl_context; svm_pointer: IntPtr) :=
    z_SVMFree_ovr_0(context, svm_pointer);
    
    // added in cl1.0
    private static function z_UnloadCompiler_ovr_0: ErrorCode;
    external 'opencl.dll' name 'clUnloadCompiler';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function UnloadCompiler: ErrorCode :=
    z_UnloadCompiler_ovr_0;
    
    // added in cl1.2
    private static function z_UnloadPlatformCompiler_ovr_0(platform: cl_platform_id): ErrorCode;
    external 'opencl.dll' name 'clUnloadPlatformCompiler';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function UnloadPlatformCompiler(platform: cl_platform_id): ErrorCode :=
    z_UnloadPlatformCompiler_ovr_0(platform);
    
    // added in cl1.0
    private static function z_WaitForEvents_ovr_0(num_events: UInt32; var event_list: cl_event): ErrorCode;
    external 'opencl.dll' name 'clWaitForEvents';
    private static function z_WaitForEvents_ovr_0_anh001(num_events: UInt32; event_list: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clWaitForEvents';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function WaitForEvents(num_events: UInt32; event_list: array of cl_event): ErrorCode :=
    if (event_list<>nil) and (event_list.Length<>0) then
      z_WaitForEvents_ovr_0(num_events, event_list[0]) else
      z_WaitForEvents_ovr_0_anh001(num_events, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function WaitForEvents(num_events: UInt32; var event_list: cl_event): ErrorCode :=
    z_WaitForEvents_ovr_0(num_events, event_list);
    private static function z_WaitForEvents_ovr_2(num_events: UInt32; event_list: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clWaitForEvents';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function WaitForEvents(num_events: UInt32; event_list: IntPtr): ErrorCode :=
    z_WaitForEvents_ovr_2(num_events, event_list);
    
  end;
  
  {$region Extensions}
  
  [PCUNotRestore]
  clD3d10SharingKHR = static class
    public const _ExtStr = 'khr_d3d10_sharing';
    
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_0(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000010(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000001(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000011(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromD3D10KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000011(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_1_anh00000010(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromD3D10KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_2(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_2_anh00000010(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromD3D10KHR_ovr_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromD3D10KHR_ovr_2_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromD3D10KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromD3D10KHR_ovr_0_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromD3D10KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromD3D10KHR_ovr_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_6(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_6_anh00000001(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromD3D10KHR_ovr_6(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromD3D10KHR_ovr_6_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromD3D10KHR_ovr_6(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromD3D10KHR_ovr_8(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D10KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: D3d10DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d10DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromD3D10KHR_ovr_8(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    
    private static function z_CreateFromD3D10BufferKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10BufferKHR';
    private static function z_CreateFromD3D10BufferKHR_ovr_0_anh00010(context: cl_context; flags: MemFlags; resource: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10BufferKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10BufferKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D10BufferKHR_ovr_0(context, flags, resource[0], errcode_ret) else
      z_CreateFromD3D10BufferKHR_ovr_0_anh00010(context, flags, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10BufferKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10BufferKHR_ovr_0(context, flags, resource, errcode_ret);
    private static function z_CreateFromD3D10BufferKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10BufferKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10BufferKHR(context: cl_context; flags: MemFlags; resource: pointer; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10BufferKHR_ovr_2(context, flags, resource, errcode_ret);
    
    private static function z_CreateFromD3D10Texture2DKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture2DKHR';
    private static function z_CreateFromD3D10Texture2DKHR_ovr_0_anh000100(context: cl_context; flags: MemFlags; resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture2DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture2DKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D10Texture2DKHR_ovr_0(context, flags, resource[0], subresource, errcode_ret) else
      z_CreateFromD3D10Texture2DKHR_ovr_0_anh000100(context, flags, IntPtr.Zero, subresource, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture2DKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10Texture2DKHR_ovr_0(context, flags, resource, subresource, errcode_ret);
    private static function z_CreateFromD3D10Texture2DKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture2DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture2DKHR(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10Texture2DKHR_ovr_2(context, flags, resource, subresource, errcode_ret);
    
    private static function z_CreateFromD3D10Texture3DKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture3DKHR';
    private static function z_CreateFromD3D10Texture3DKHR_ovr_0_anh000100(context: cl_context; flags: MemFlags; resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture3DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture3DKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D10Texture3DKHR_ovr_0(context, flags, resource[0], subresource, errcode_ret) else
      z_CreateFromD3D10Texture3DKHR_ovr_0_anh000100(context, flags, IntPtr.Zero, subresource, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture3DKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10Texture3DKHR_ovr_0(context, flags, resource, subresource, errcode_ret);
    private static function z_CreateFromD3D10Texture3DKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D10Texture3DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D10Texture3DKHR(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D10Texture3DKHR_ovr_2(context, flags, resource, subresource, errcode_ret);
    
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D10ObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D10ObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D10ObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D10ObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D10ObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D10ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D10ObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clD3d11SharingKHR = static class
    public const _ExtStr = 'khr_d3d11_sharing';
    
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_0(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000010(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000001(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000011(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromD3D11KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000011(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_1_anh00000010(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromD3D11KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_2(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_2_anh00000010(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromD3D11KHR_ovr_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromD3D11KHR_ovr_2_anh00000010(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromD3D11KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromD3D11KHR_ovr_0_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromD3D11KHR_ovr_0(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromD3D11KHR_ovr_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_6(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_6_anh00000001(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromD3D11KHR_ovr_6(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromD3D11KHR_ovr_6_anh00000001(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromD3D11KHR_ovr_6(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromD3D11KHR_ovr_8(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromD3D11KHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: D3d11DeviceSourceKhr; d3d_object: IntPtr; d3d_device_set: D3d11DeviceSetKhr; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromD3D11KHR_ovr_8(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    
    private static function z_CreateFromD3D11BufferKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11BufferKHR';
    private static function z_CreateFromD3D11BufferKHR_ovr_0_anh00010(context: cl_context; flags: MemFlags; resource: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11BufferKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11BufferKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D11BufferKHR_ovr_0(context, flags, resource[0], errcode_ret) else
      z_CreateFromD3D11BufferKHR_ovr_0_anh00010(context, flags, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11BufferKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11BufferKHR_ovr_0(context, flags, resource, errcode_ret);
    private static function z_CreateFromD3D11BufferKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11BufferKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11BufferKHR(context: cl_context; flags: MemFlags; resource: pointer; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11BufferKHR_ovr_2(context, flags, resource, errcode_ret);
    
    private static function z_CreateFromD3D11Texture2DKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture2DKHR';
    private static function z_CreateFromD3D11Texture2DKHR_ovr_0_anh000100(context: cl_context; flags: MemFlags; resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture2DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture2DKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D11Texture2DKHR_ovr_0(context, flags, resource[0], subresource, errcode_ret) else
      z_CreateFromD3D11Texture2DKHR_ovr_0_anh000100(context, flags, IntPtr.Zero, subresource, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture2DKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11Texture2DKHR_ovr_0(context, flags, resource, subresource, errcode_ret);
    private static function z_CreateFromD3D11Texture2DKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture2DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture2DKHR(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11Texture2DKHR_ovr_2(context, flags, resource, subresource, errcode_ret);
    
    private static function z_CreateFromD3D11Texture3DKHR_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture3DKHR';
    private static function z_CreateFromD3D11Texture3DKHR_ovr_0_anh000100(context: cl_context; flags: MemFlags; resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture3DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture3DKHR(context: cl_context; flags: MemFlags; resource: array of IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromD3D11Texture3DKHR_ovr_0(context, flags, resource[0], subresource, errcode_ret) else
      z_CreateFromD3D11Texture3DKHR_ovr_0_anh000100(context, flags, IntPtr.Zero, subresource, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture3DKHR(context: cl_context; flags: MemFlags; var resource: IntPtr; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11Texture3DKHR_ovr_0(context, flags, resource, subresource, errcode_ret);
    private static function z_CreateFromD3D11Texture3DKHR_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromD3D11Texture3DKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromD3D11Texture3DKHR(context: cl_context; flags: MemFlags; resource: pointer; subresource: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromD3D11Texture3DKHR_ovr_2(context, flags, resource, subresource, errcode_ret);
    
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireD3D11ObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireD3D11ObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireD3D11ObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseD3D11ObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseD3D11ObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseD3D11ObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseD3D11ObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clDx9MediaSharingKHR = static class
    public const _ExtStr = 'khr_dx9_media_sharing';
    
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000001(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100001(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000011(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100011(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      if (devices<>nil) and (devices.Length<>0) then
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices[0], num_devices[0]) else
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000001(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices[0], IntPtr.Zero) else
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000010(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices[0]) else
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000011(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, IntPtr.Zero, IntPtr.Zero) else
      if (devices<>nil) and (devices.Length<>0) then
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices[0], num_devices[0]) else
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100001(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices[0], IntPtr.Zero) else
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100010(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices[0]) else
          z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100011(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_1_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_1_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_1_anh000100010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      if (devices<>nil) and (devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000010(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices) else
      if (devices<>nil) and (devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100010(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000100010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      if (devices<>nil) and (devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000000010(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices) else
      if (devices<>nil) and (devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000100010(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_3_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_3_anh000100001(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000001(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100001(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_4_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_5_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000000001(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000100001(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000000001(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000100001(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_7_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_8(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_8_anh000100000(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: array of UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    if (media_adapter_type<>nil) and (media_adapter_type.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_8(platform, num_media_adapters, media_adapter_type[0], media_adapters, media_adapter_set, num_entries, devices, num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_8_anh000100000(platform, num_media_adapters, IntPtr.Zero, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000011(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_0(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_2(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_6(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: UInt32; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_8(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000001(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000011(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000011(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_19_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_20(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_20_anh000000010(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_20(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_20_anh000000010(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_18(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_20(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_24(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_24_anh000000001(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_24(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_24_anh000000001(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_24(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_26(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9MediaAdapterKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: UInt32; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9MediaAdapterKHR_ovr_26(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    
    private static function z_CreateFromDX9MediaSurfaceKHR_ovr_0(context: cl_context; flags: MemFlags; adapter_type: UInt32; surface_info: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromDX9MediaSurfaceKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromDX9MediaSurfaceKHR(context: cl_context; flags: MemFlags; adapter_type: UInt32; surface_info: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromDX9MediaSurfaceKHR_ovr_0(context, flags, adapter_type, surface_info, plane, errcode_ret);
    
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9MediaSurfacesKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9MediaSurfacesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9MediaSurfacesKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clEglImageKHR = static class
    public const _ExtStr = 'khr_egl_image';
    
    private static function z_CreateFromEGLImageKHR_ovr_0(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; var properties: EglImagePropertiesKhr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromEGLImageKHR';
    private static function z_CreateFromEGLImageKHR_ovr_0_anh0000010(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; properties: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromEGLImageKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromEGLImageKHR(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; properties: array of EglImagePropertiesKhr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateFromEGLImageKHR_ovr_0(context, egldisplay, eglimage, flags, properties[0], errcode_ret) else
      z_CreateFromEGLImageKHR_ovr_0_anh0000010(context, egldisplay, eglimage, flags, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromEGLImageKHR(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; var properties: EglImagePropertiesKhr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromEGLImageKHR_ovr_0(context, egldisplay, eglimage, flags, properties, errcode_ret);
    private static function z_CreateFromEGLImageKHR_ovr_2(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; properties: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromEGLImageKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromEGLImageKHR(context: cl_context; egldisplay: IntPtr; eglimage: IntPtr; flags: MemFlags; properties: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromEGLImageKHR_ovr_2(context, egldisplay, eglimage, flags, properties, errcode_ret);
    
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireEGLObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireEGLObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireEGLObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireEGLObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseEGLObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseEGLObjectsKHR_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseEGLObjectsKHR_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseEGLObjectsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseEGLObjectsKHR_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clEglEventKHR = static class
    public const _ExtStr = 'khr_egl_event';
    
    private static function z_CreateEventFromEGLSyncKHR_ovr_0(context: cl_context; sync: IntPtr; display: IntPtr; var errcode_ret: ErrorCode): cl_event;
    external 'opencl.dll' name 'clCreateEventFromEGLSyncKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateEventFromEGLSyncKHR(context: cl_context; sync: IntPtr; display: IntPtr; var errcode_ret: ErrorCode): cl_event :=
    z_CreateEventFromEGLSyncKHR_ovr_0(context, sync, display, errcode_ret);
    
  end;
  
  [PCUNotRestore]
  clSetMemObjectDestructorAPPLE = static class
    public const _ExtStr = 'APPLE_SetMemObjectDestructor';
    
    private static function z_SetMemObjectDestructorAPPLE_ovr_0(memobj: cl_mem; pfn_notify: MemObjectDestructorCallback; user_data: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetMemObjectDestructorAPPLE';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetMemObjectDestructorAPPLE(memobj: cl_mem; pfn_notify: MemObjectDestructorCallback; user_data: IntPtr): ErrorCode :=
    z_SetMemObjectDestructorAPPLE_ovr_0(memobj, pfn_notify, user_data);
    
  end;
  
  [PCUNotRestore]
  clContextLoggingFunctionsAPPLE = static class
    public const _ExtStr = 'APPLE_ContextLoggingFunctions';
    
    private static procedure z_LogMessagesToSystemLogAPPLE_ovr_0(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    external 'opencl.dll' name 'clLogMessagesToSystemLogAPPLE';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToSystemLogAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var par_1_str_ptr: IntPtr;
      try
        par_1_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
        z_LogMessagesToSystemLogAPPLE_ovr_0(par_1_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(par_1_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToSystemLogAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
    z_LogMessagesToSystemLogAPPLE_ovr_0(errstr, private_info, cb, user_data);
    
    private static procedure z_LogMessagesToStdoutAPPLE_ovr_0(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    external 'opencl.dll' name 'clLogMessagesToStdoutAPPLE';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToStdoutAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var par_1_str_ptr: IntPtr;
      try
        par_1_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
        z_LogMessagesToStdoutAPPLE_ovr_0(par_1_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(par_1_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToStdoutAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
    z_LogMessagesToStdoutAPPLE_ovr_0(errstr, private_info, cb, user_data);
    
    private static procedure z_LogMessagesToStderrAPPLE_ovr_0(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    external 'opencl.dll' name 'clLogMessagesToStderrAPPLE';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToStderrAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var par_1_str_ptr: IntPtr;
      try
        par_1_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
        z_LogMessagesToStderrAPPLE_ovr_0(par_1_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(par_1_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure LogMessagesToStderrAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
    z_LogMessagesToStderrAPPLE_ovr_0(errstr, private_info, cb, user_data);
    
  end;
  
  [PCUNotRestore]
  clIcdKHR = static class
    public const _ExtStr = 'khr_icd';
    
    private static function z_IcdGetPlatformIDsKHR_ovr_0(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    private static function z_IcdGetPlatformIDsKHR_ovr_0_anh0010(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    private static function z_IcdGetPlatformIDsKHR_ovr_0_anh0001(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    private static function z_IcdGetPlatformIDsKHR_ovr_0_anh0011(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: array of cl_platform_id; num_platforms: array of UInt32): ErrorCode :=
    if (platforms<>nil) and (platforms.Length<>0) then
      if (num_platforms<>nil) and (num_platforms.Length<>0) then
        z_IcdGetPlatformIDsKHR_ovr_0(num_entries, platforms[0], num_platforms[0]) else
        z_IcdGetPlatformIDsKHR_ovr_0_anh0001(num_entries, platforms[0], IntPtr.Zero) else
      if (num_platforms<>nil) and (num_platforms.Length<>0) then
        z_IcdGetPlatformIDsKHR_ovr_0_anh0010(num_entries, IntPtr.Zero, num_platforms[0]) else
        z_IcdGetPlatformIDsKHR_ovr_0_anh0011(num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_IcdGetPlatformIDsKHR_ovr_1_anh0010(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: array of cl_platform_id; var num_platforms: UInt32): ErrorCode :=
    if (platforms<>nil) and (platforms.Length<>0) then
      z_IcdGetPlatformIDsKHR_ovr_0(num_entries, platforms[0], num_platforms) else
      z_IcdGetPlatformIDsKHR_ovr_0_anh0010(num_entries, IntPtr.Zero, num_platforms);
    private static function z_IcdGetPlatformIDsKHR_ovr_2(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    private static function z_IcdGetPlatformIDsKHR_ovr_2_anh0010(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: array of cl_platform_id; num_platforms: IntPtr): ErrorCode :=
    if (platforms<>nil) and (platforms.Length<>0) then
      z_IcdGetPlatformIDsKHR_ovr_2(num_entries, platforms[0], num_platforms) else
      z_IcdGetPlatformIDsKHR_ovr_2_anh0010(num_entries, IntPtr.Zero, num_platforms);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: array of UInt32): ErrorCode :=
    if (num_platforms<>nil) and (num_platforms.Length<>0) then
      z_IcdGetPlatformIDsKHR_ovr_0(num_entries, platforms, num_platforms[0]) else
      z_IcdGetPlatformIDsKHR_ovr_0_anh0001(num_entries, platforms, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): ErrorCode :=
    z_IcdGetPlatformIDsKHR_ovr_0(num_entries, platforms, num_platforms);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): ErrorCode :=
    z_IcdGetPlatformIDsKHR_ovr_2(num_entries, platforms, num_platforms);
    private static function z_IcdGetPlatformIDsKHR_ovr_6(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    private static function z_IcdGetPlatformIDsKHR_ovr_6_anh0001(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: IntPtr; num_platforms: array of UInt32): ErrorCode :=
    if (num_platforms<>nil) and (num_platforms.Length<>0) then
      z_IcdGetPlatformIDsKHR_ovr_6(num_entries, platforms, num_platforms[0]) else
      z_IcdGetPlatformIDsKHR_ovr_6_anh0001(num_entries, platforms, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): ErrorCode :=
    z_IcdGetPlatformIDsKHR_ovr_6(num_entries, platforms, num_platforms);
    private static function z_IcdGetPlatformIDsKHR_ovr_8(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clIcdGetPlatformIDsKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): ErrorCode :=
    z_IcdGetPlatformIDsKHR_ovr_8(num_entries, platforms, num_platforms);
    
  end;
  
  [PCUNotRestore]
  clIlProgramKHR = static class
    public const _ExtStr = 'khr_il_program';
    
    private static function z_CreateProgramWithILKHR_ovr_0(context: cl_context; var il: byte; length: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithILKHR';
    private static function z_CreateProgramWithILKHR_ovr_0_anh00100(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithILKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithILKHR(context: cl_context; il: array of byte; length: UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    if (il<>nil) and (il.Length<>0) then
      z_CreateProgramWithILKHR_ovr_0(context, il[0], length, errcode_ret) else
      z_CreateProgramWithILKHR_ovr_0_anh00100(context, IntPtr.Zero, length, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithILKHR(context: cl_context; var il: byte; length: UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithILKHR_ovr_0(context, il, length, errcode_ret);
    private static function z_CreateProgramWithILKHR_ovr_2(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: ErrorCode): cl_program;
    external 'opencl.dll' name 'clCreateProgramWithILKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateProgramWithILKHR(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: ErrorCode): cl_program :=
    z_CreateProgramWithILKHR_ovr_2(context, il, length, errcode_ret);
    
  end;
  
  [PCUNotRestore]
  clTerminateContextKHR = static class
    public const _ExtStr = 'khr_terminate_context';
    
    private static function z_TerminateContextKHR_ovr_0(context: cl_context): ErrorCode;
    external 'opencl.dll' name 'clTerminateContextKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function TerminateContextKHR(context: cl_context): ErrorCode :=
    z_TerminateContextKHR_ovr_0(context);
    
  end;
  
  [PCUNotRestore]
  clCreateCommandQueueKHR = static class
    public const _ExtStr = 'khr_create_command_queue';
    
    private static function z_CreateCommandQueueWithPropertiesKHR_ovr_0(context: cl_context; device: cl_device_id; var properties: UInt64; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithPropertiesKHR';
    private static function z_CreateCommandQueueWithPropertiesKHR_ovr_0_anh00010(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithPropertiesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; properties: array of UInt64; var errcode_ret: ErrorCode): cl_command_queue :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateCommandQueueWithPropertiesKHR_ovr_0(context, device, properties[0], errcode_ret) else
      z_CreateCommandQueueWithPropertiesKHR_ovr_0_anh00010(context, device, IntPtr.Zero, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; var properties: UInt64; var errcode_ret: ErrorCode): cl_command_queue :=
    z_CreateCommandQueueWithPropertiesKHR_ovr_0(context, device, properties, errcode_ret);
    private static function z_CreateCommandQueueWithPropertiesKHR_ovr_2(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue;
    external 'opencl.dll' name 'clCreateCommandQueueWithPropertiesKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: ErrorCode): cl_command_queue :=
    z_CreateCommandQueueWithPropertiesKHR_ovr_2(context, device, properties, errcode_ret);
    
  end;
  
  [PCUNotRestore]
  clDeviceFissionEXT = static class
    public const _ExtStr = 'ext_device_fission';
    
    private static function z_ReleaseDeviceEXT_ovr_0(device: cl_device_id): ErrorCode;
    external 'opencl.dll' name 'clReleaseDeviceEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseDeviceEXT(device: cl_device_id): ErrorCode :=
    z_ReleaseDeviceEXT_ovr_0(device);
    
    private static function z_RetainDeviceEXT_ovr_0(device: cl_device_id): ErrorCode;
    external 'opencl.dll' name 'clRetainDeviceEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainDeviceEXT(device: cl_device_id): ErrorCode :=
    z_RetainDeviceEXT_ovr_0(device);
    
    private static function z_CreateSubDevicesEXT_ovr_0(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh000010(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh001010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh000001(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh001001(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh000011(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_0_anh001011(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (out_devices<>nil) and (out_devices.Length<>0) then
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_CreateSubDevicesEXT_ovr_0(in_device, properties[0], num_entries, out_devices[0], num_devices[0]) else
          z_CreateSubDevicesEXT_ovr_0_anh000001(in_device, properties[0], num_entries, out_devices[0], IntPtr.Zero) else
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_CreateSubDevicesEXT_ovr_0_anh000010(in_device, properties[0], num_entries, IntPtr.Zero, num_devices[0]) else
          z_CreateSubDevicesEXT_ovr_0_anh000011(in_device, properties[0], num_entries, IntPtr.Zero, IntPtr.Zero) else
      if (out_devices<>nil) and (out_devices.Length<>0) then
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_CreateSubDevicesEXT_ovr_0_anh001000(in_device, IntPtr.Zero, num_entries, out_devices[0], num_devices[0]) else
          z_CreateSubDevicesEXT_ovr_0_anh001001(in_device, IntPtr.Zero, num_entries, out_devices[0], IntPtr.Zero) else
        if (num_devices<>nil) and (num_devices.Length<>0) then
          z_CreateSubDevicesEXT_ovr_0_anh001010(in_device, IntPtr.Zero, num_entries, IntPtr.Zero, num_devices[0]) else
          z_CreateSubDevicesEXT_ovr_0_anh001011(in_device, IntPtr.Zero, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_CreateSubDevicesEXT_ovr_1_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_1_anh000010(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_1_anh001010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (out_devices<>nil) and (out_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0(in_device, properties[0], num_entries, out_devices[0], num_devices) else
        z_CreateSubDevicesEXT_ovr_0_anh000010(in_device, properties[0], num_entries, IntPtr.Zero, num_devices) else
      if (out_devices<>nil) and (out_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0_anh001000(in_device, IntPtr.Zero, num_entries, out_devices[0], num_devices) else
        z_CreateSubDevicesEXT_ovr_0_anh001010(in_device, IntPtr.Zero, num_entries, IntPtr.Zero, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_2(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_2_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_2_anh000010(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_2_anh001010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (out_devices<>nil) and (out_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_2(in_device, properties[0], num_entries, out_devices[0], num_devices) else
        z_CreateSubDevicesEXT_ovr_2_anh000010(in_device, properties[0], num_entries, IntPtr.Zero, num_devices) else
      if (out_devices<>nil) and (out_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_2_anh001000(in_device, IntPtr.Zero, num_entries, out_devices[0], num_devices) else
        z_CreateSubDevicesEXT_ovr_2_anh001010(in_device, IntPtr.Zero, num_entries, IntPtr.Zero, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_3_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_3_anh001001(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0(in_device, properties[0], num_entries, out_devices, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_0_anh000001(in_device, properties[0], num_entries, out_devices, IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_0_anh001001(in_device, IntPtr.Zero, num_entries, out_devices, IntPtr.Zero);
    private static function z_CreateSubDevicesEXT_ovr_4_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevicesEXT_ovr_0(in_device, properties[0], num_entries, out_devices, num_devices) else
      z_CreateSubDevicesEXT_ovr_0_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_5_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevicesEXT_ovr_2(in_device, properties[0], num_entries, out_devices, num_devices) else
      z_CreateSubDevicesEXT_ovr_2_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_6(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_6_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_6_anh000001(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_6_anh001001(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_6(in_device, properties[0], num_entries, out_devices, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_6_anh000001(in_device, properties[0], num_entries, out_devices, IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_6_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_6_anh001001(in_device, IntPtr.Zero, num_entries, out_devices, IntPtr.Zero);
    private static function z_CreateSubDevicesEXT_ovr_7_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevicesEXT_ovr_6(in_device, properties[0], num_entries, out_devices, num_devices) else
      z_CreateSubDevicesEXT_ovr_6_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_8(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_8_anh001000(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateSubDevicesEXT_ovr_8(in_device, properties[0], num_entries, out_devices, num_devices) else
      z_CreateSubDevicesEXT_ovr_8_anh001000(in_device, IntPtr.Zero, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0(in_device, properties, num_entries, out_devices[0], num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_0_anh000001(in_device, properties, num_entries, out_devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_0_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_0_anh000011(in_device, properties, num_entries, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_0(in_device, properties, num_entries, out_devices[0], num_devices) else
      z_CreateSubDevicesEXT_ovr_0_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_2(in_device, properties, num_entries, out_devices[0], num_devices) else
      z_CreateSubDevicesEXT_ovr_2_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_0(in_device, properties, num_entries, out_devices, num_devices[0]) else
      z_CreateSubDevicesEXT_ovr_0_anh000001(in_device, properties, num_entries, out_devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_0(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_2(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_6(in_device, properties, num_entries, out_devices, num_devices[0]) else
      z_CreateSubDevicesEXT_ovr_6_anh000001(in_device, properties, num_entries, out_devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_6(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; var properties: DevicePartitionPropertyExt; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_8(in_device, properties, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_18(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_18_anh000010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_18_anh000001(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_18_anh000011(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_18(in_device, properties, num_entries, out_devices[0], num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_18_anh000001(in_device, properties, num_entries, out_devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_CreateSubDevicesEXT_ovr_18_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices[0]) else
        z_CreateSubDevicesEXT_ovr_18_anh000011(in_device, properties, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_CreateSubDevicesEXT_ovr_19_anh000010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_18(in_device, properties, num_entries, out_devices[0], num_devices) else
      z_CreateSubDevicesEXT_ovr_18_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_20(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_20_anh000010(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (out_devices<>nil) and (out_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_20(in_device, properties, num_entries, out_devices[0], num_devices) else
      z_CreateSubDevicesEXT_ovr_20_anh000010(in_device, properties, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_18(in_device, properties, num_entries, out_devices, num_devices[0]) else
      z_CreateSubDevicesEXT_ovr_18_anh000001(in_device, properties, num_entries, out_devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_18(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_20(in_device, properties, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_24(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    private static function z_CreateSubDevicesEXT_ovr_24_anh000001(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_CreateSubDevicesEXT_ovr_24(in_device, properties, num_entries, out_devices, num_devices[0]) else
      z_CreateSubDevicesEXT_ovr_24_anh000001(in_device, properties, num_entries, out_devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_24(in_device, properties, num_entries, out_devices, num_devices);
    private static function z_CreateSubDevicesEXT_ovr_26(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clCreateSubDevicesEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_CreateSubDevicesEXT_ovr_26(in_device, properties, num_entries, out_devices, num_devices);
    
  end;
  
  [PCUNotRestore]
  clMigrateMemobjectEXT = static class
    public const _ExtStr = 'ext_migrate_memobject';
    
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000001(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010001(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000011(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010011(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000001(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000011(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010001(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010010(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010011(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_1_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_1_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_1_anh00010010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010010(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_2(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_2_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_2_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_2_anh00010010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_2(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjectEXT_ovr_2_anh00000010(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_2_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueMigrateMemObjectEXT_ovr_2_anh00010010(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_3_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_3_anh00010001(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000001(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010001(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_4_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_0_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_5_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_2(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_2_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_6(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_6_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_6_anh00000001(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_6_anh00010001(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_6(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_6_anh00000001(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_6_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_6_anh00010001(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_7_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_6(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_6_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_8(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_8_anh00010000(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_8(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_8_anh00010000(command_queue, num_mem_objects, IntPtr.Zero, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000011(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_2(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_2_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemObjectEXT_ovr_0_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_0(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_2(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_6(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemObjectEXT_ovr_6_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_6(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_8(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_18(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000001(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000011(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_18(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000011(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_19_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_18(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_20(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_20_anh00000010(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_20(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemObjectEXT_ovr_20_anh00000010(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_18(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemObjectEXT_ovr_18_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_18(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_20(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_24(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    private static function z_EnqueueMigrateMemObjectEXT_ovr_24_anh00000001(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemObjectEXT_ovr_24(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemObjectEXT_ovr_24_anh00000001(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_24(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemObjectEXT_ovr_26(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemObjectEXT';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: MemMigrationFlagsExt; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemObjectEXT_ovr_26(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clExtHostPtrQCOM = static class
    public const _ExtStr = 'qcom_ext_host_ptr';
    
    private static function z_GetDeviceImageInfoQCOM_ovr_0(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    private static function z_GetDeviceImageInfoQCOM_ovr_0_anh000010000(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    private static function z_GetDeviceImageInfoQCOM_ovr_0_anh000000001(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    private static function z_GetDeviceImageInfoQCOM_ovr_0_anh000010001(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: array of cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (image_format<>nil) and (image_format.Length<>0) then
      if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
        z_GetDeviceImageInfoQCOM_ovr_0(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, param_value_size_ret[0]) else
        z_GetDeviceImageInfoQCOM_ovr_0_anh000000001(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, IntPtr.Zero) else
      if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
        z_GetDeviceImageInfoQCOM_ovr_0_anh000010000(device, image_width, image_height, IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret[0]) else
        z_GetDeviceImageInfoQCOM_ovr_0_anh000010001(device, image_width, image_height, IntPtr.Zero, param_name, param_value_size, param_value, IntPtr.Zero);
    private static function z_GetDeviceImageInfoQCOM_ovr_1_anh000010000(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: array of cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_GetDeviceImageInfoQCOM_ovr_0(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, param_value_size_ret) else
      z_GetDeviceImageInfoQCOM_ovr_0_anh000010000(device, image_width, image_height, IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceImageInfoQCOM_ovr_2(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    private static function z_GetDeviceImageInfoQCOM_ovr_2_anh000010000(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: array of cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    if (image_format<>nil) and (image_format.Length<>0) then
      z_GetDeviceImageInfoQCOM_ovr_2(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, param_value_size_ret) else
      z_GetDeviceImageInfoQCOM_ovr_2_anh000010000(device, image_width, image_height, IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetDeviceImageInfoQCOM_ovr_0(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetDeviceImageInfoQCOM_ovr_0_anh000000001(device, image_width, image_height, image_format, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceImageInfoQCOM_ovr_0(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceImageInfoQCOM_ovr_2(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceImageInfoQCOM_ovr_6(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    private static function z_GetDeviceImageInfoQCOM_ovr_6_anh000000001(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetDeviceImageInfoQCOM_ovr_6(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetDeviceImageInfoQCOM_ovr_6_anh000000001(device, image_width, image_height, image_format, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetDeviceImageInfoQCOM_ovr_6(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetDeviceImageInfoQCOM_ovr_8(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceImageInfoQCOM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: ImagePitchInfoQcom; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetDeviceImageInfoQCOM_ovr_8(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    
  end;
  
  [PCUNotRestore]
  clUseGrallocPtrIMG = static class
    public const _ExtStr = 'img_use_gralloc_ptr';
    
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGrallocObjectsIMG_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGrallocObjectsIMG_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGrallocObjectsIMG_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGrallocObjectsIMG_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGrallocObjectsIMG_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGrallocObjectsIMG_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGrallocObjectsIMG_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGrallocObjectsIMG';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGrallocObjectsIMG_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clSubgroupsKHR = static class
    public const _ExtStr = 'khr_subgroups';
    
    private static function z_GetKernelSubGroupInfoKHR_ovr_0(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfoKHR';
    private static function z_GetKernelSubGroupInfoKHR_ovr_0_anh000000001(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfoKHR(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetKernelSubGroupInfoKHR_ovr_0(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetKernelSubGroupInfoKHR_ovr_0_anh000000001(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfoKHR(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetKernelSubGroupInfoKHR_ovr_0(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    private static function z_GetKernelSubGroupInfoKHR_ovr_2(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetKernelSubGroupInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetKernelSubGroupInfoKHR(in_kernel: cl_kernel; in_device: cl_device_id; param_name: KernelSubGroupInfo; input_value_size: UIntPtr; input_value: IntPtr; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetKernelSubGroupInfoKHR_ovr_2(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    
  end;
  
  [PCUNotRestore]
  clImportMemoryARM = static class
    public const _ExtStr = 'arm_import_memory';
    
    private static function z_ImportMemoryARM_ovr_0(context: cl_context; flags: MemFlags; var properties: ImportPropertiesArm; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clImportMemoryARM';
    private static function z_ImportMemoryARM_ovr_0_anh0001000(context: cl_context; flags: MemFlags; properties: IntPtr; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clImportMemoryARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ImportMemoryARM(context: cl_context; flags: MemFlags; properties: array of ImportPropertiesArm; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_ImportMemoryARM_ovr_0(context, flags, properties[0], memory, size, errcode_ret) else
      z_ImportMemoryARM_ovr_0_anh0001000(context, flags, IntPtr.Zero, memory, size, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ImportMemoryARM(context: cl_context; flags: MemFlags; var properties: ImportPropertiesArm; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_ImportMemoryARM_ovr_0(context, flags, properties, memory, size, errcode_ret);
    private static function z_ImportMemoryARM_ovr_2(context: cl_context; flags: MemFlags; properties: IntPtr; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clImportMemoryARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ImportMemoryARM(context: cl_context; flags: MemFlags; properties: IntPtr; memory: IntPtr; size: UIntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_ImportMemoryARM_ovr_2(context, flags, properties, memory, size, errcode_ret);
    
  end;
  
  [PCUNotRestore]
  clSharedVirtualMemoryARM = static class
    public const _ExtStr = 'arm_shared_virtual_memory';
    
    private static function z_SVMAllocARM_ovr_0(context: cl_context; flags: SvmMemFlagsArm; size: UIntPtr; alignment: UInt32): IntPtr;
    external 'opencl.dll' name 'clSVMAllocARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SVMAllocARM(context: cl_context; flags: SvmMemFlagsArm; size: UIntPtr; alignment: UInt32): IntPtr :=
    z_SVMAllocARM_ovr_0(context, flags, size, alignment);
    
    private static procedure z_SVMFreeARM_ovr_0(context: cl_context; svm_pointer: IntPtr);
    external 'opencl.dll' name 'clSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static procedure SVMFreeARM(context: cl_context; svm_pointer: IntPtr) :=
    z_SVMFreeARM_ovr_0(context, svm_pointer);
    
    private static function z_EnqueueSVMFreeARM_ovr_0(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    private static function z_EnqueueSVMFreeARM_ovr_0_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    private static function z_EnqueueSVMFreeARM_ovr_0_anh000000001(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    private static function z_EnqueueSVMFreeARM_ovr_0_anh000000011(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMFreeARM_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueSVMFreeARM_ovr_0_anh000000001(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMFreeARM_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueSVMFreeARM_ovr_0_anh000000011(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueSVMFreeARM_ovr_1_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFreeARM_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFreeARM_ovr_0_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMFreeARM_ovr_2(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    private static function z_EnqueueSVMFreeARM_ovr_2_anh000000010(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMFreeARM_ovr_2(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMFreeARM_ovr_2_anh000000010(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMFreeARM_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMFreeARM_ovr_0_anh000000001(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFreeARM_ovr_0(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFreeARM_ovr_2(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFreeARM_ovr_6(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    private static function z_EnqueueSVMFreeARM_ovr_6_anh000000001(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMFreeARM_ovr_6(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMFreeARM_ovr_6_anh000000001(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMFreeARM_ovr_6(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMFreeARM_ovr_8(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMFreeARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: IntPtr; pfn_free_func: EnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMFreeARM_ovr_8(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueSVMMemcpyARM_ovr_0(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    private static function z_EnqueueSVMMemcpyARM_ovr_0_anh000000010(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    private static function z_EnqueueSVMMemcpyARM_ovr_0_anh000000001(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    private static function z_EnqueueSVMMemcpyARM_ovr_0_anh000000011(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMemcpyARM_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueSVMMemcpyARM_ovr_0_anh000000001(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMemcpyARM_ovr_0_anh000000010(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueSVMMemcpyARM_ovr_0_anh000000011(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueSVMMemcpyARM_ovr_1_anh000000010(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemcpyARM_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemcpyARM_ovr_0_anh000000010(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMemcpyARM_ovr_2(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    private static function z_EnqueueSVMMemcpyARM_ovr_2_anh000000010(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemcpyARM_ovr_2(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemcpyARM_ovr_2_anh000000010(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMemcpyARM_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMemcpyARM_ovr_0_anh000000001(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemcpyARM_ovr_0(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemcpyARM_ovr_2(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemcpyARM_ovr_6(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    private static function z_EnqueueSVMMemcpyARM_ovr_6_anh000000001(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMemcpyARM_ovr_6(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMemcpyARM_ovr_6_anh000000001(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemcpyARM_ovr_6(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemcpyARM_ovr_8(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemcpyARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemcpyARM_ovr_8(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueSVMMemFillARM_ovr_0(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    private static function z_EnqueueSVMMemFillARM_ovr_0_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    private static function z_EnqueueSVMMemFillARM_ovr_0_anh000000001(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    private static function z_EnqueueSVMMemFillARM_ovr_0_anh000000011(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMemFillARM_ovr_0(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueSVMMemFillARM_ovr_0_anh000000001(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMemFillARM_ovr_0_anh000000010(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueSVMMemFillARM_ovr_0_anh000000011(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueSVMMemFillARM_ovr_1_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFillARM_ovr_0(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFillARM_ovr_0_anh000000010(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMemFillARM_ovr_2(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    private static function z_EnqueueSVMMemFillARM_ovr_2_anh000000010(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMemFillARM_ovr_2(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMemFillARM_ovr_2_anh000000010(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMemFillARM_ovr_0(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMemFillARM_ovr_0_anh000000001(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFillARM_ovr_0(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFillARM_ovr_2(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemFillARM_ovr_6(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    private static function z_EnqueueSVMMemFillARM_ovr_6_anh000000001(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMemFillARM_ovr_6(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMemFillARM_ovr_6_anh000000001(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMemFillARM_ovr_6(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMemFillARM_ovr_8(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMemFillARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMemFillARM_ovr_8(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueSVMMapARM_ovr_0(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    private static function z_EnqueueSVMMapARM_ovr_0_anh000000010(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    private static function z_EnqueueSVMMapARM_ovr_0_anh000000001(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    private static function z_EnqueueSVMMapARM_ovr_0_anh000000011(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMapARM_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueSVMMapARM_ovr_0_anh000000001(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMMapARM_ovr_0_anh000000010(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueSVMMapARM_ovr_0_anh000000011(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueSVMMapARM_ovr_1_anh000000010(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMapARM_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMapARM_ovr_0_anh000000010(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMMapARM_ovr_2(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    private static function z_EnqueueSVMMapARM_ovr_2_anh000000010(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMMapARM_ovr_2(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMMapARM_ovr_2_anh000000010(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMapARM_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMapARM_ovr_0_anh000000001(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMapARM_ovr_0(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMapARM_ovr_2(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMapARM_ovr_6(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    private static function z_EnqueueSVMMapARM_ovr_6_anh000000001(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMMapARM_ovr_6(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMMapARM_ovr_6_anh000000001(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMMapARM_ovr_6(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMMapARM_ovr_8(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMMapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: Bool; flags: MapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMMapARM_ovr_8(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueSVMUnmapARM_ovr_0(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    private static function z_EnqueueSVMUnmapARM_ovr_0_anh000010(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    private static function z_EnqueueSVMUnmapARM_ovr_0_anh000001(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    private static function z_EnqueueSVMUnmapARM_ovr_0_anh000011(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMUnmapARM_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueSVMUnmapARM_ovr_0_anh000001(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueSVMUnmapARM_ovr_0_anh000010(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueSVMUnmapARM_ovr_0_anh000011(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueSVMUnmapARM_ovr_1_anh000010(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMUnmapARM_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMUnmapARM_ovr_0_anh000010(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueSVMUnmapARM_ovr_2(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    private static function z_EnqueueSVMUnmapARM_ovr_2_anh000010(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueSVMUnmapARM_ovr_2(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueSVMUnmapARM_ovr_2_anh000010(command_queue, svm_ptr, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMUnmapARM_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMUnmapARM_ovr_0_anh000001(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMUnmapARM_ovr_0(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMUnmapARM_ovr_2(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMUnmapARM_ovr_6(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    private static function z_EnqueueSVMUnmapARM_ovr_6_anh000001(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueSVMUnmapARM_ovr_6(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueSVMUnmapARM_ovr_6_anh000001(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueSVMUnmapARM_ovr_6(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueSVMUnmapARM_ovr_8(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueSVMUnmapARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueSVMUnmapARM_ovr_8(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_SetKernelArgSVMPointerARM_ovr_0(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetKernelArgSVMPointerARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelArgSVMPointerARM(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode :=
    z_SetKernelArgSVMPointerARM_ovr_0(kernel, arg_index, arg_value);
    
    private static function z_SetKernelExecInfoARM_ovr_0(kernel: cl_kernel; param_name: KernelExecInfoArm; param_value_size: UIntPtr; param_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetKernelExecInfoARM';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelExecInfoARM(kernel: cl_kernel; param_name: KernelExecInfoArm; param_value_size: UIntPtr; param_value: IntPtr): ErrorCode :=
    z_SetKernelExecInfoARM_ovr_0(kernel, param_name, param_value_size, param_value);
    
  end;
  
  [PCUNotRestore]
  clAcceleratorINTEL = static class
    public const _ExtStr = 'intel_accelerator';
    
    private static function z_CreateAcceleratorINTEL_ovr_0(context: cl_context; accelerator_type: AcceleratorTypeIntel; descriptor_size: UIntPtr; descriptor: IntPtr; var errcode_ret: ErrorCode): cl_accelerator_intel;
    external 'opencl.dll' name 'clCreateAcceleratorINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateAcceleratorINTEL(context: cl_context; accelerator_type: AcceleratorTypeIntel; descriptor_size: UIntPtr; descriptor: IntPtr; var errcode_ret: ErrorCode): cl_accelerator_intel :=
    z_CreateAcceleratorINTEL_ovr_0(context, accelerator_type, descriptor_size, descriptor, errcode_ret);
    
    private static function z_GetAcceleratorInfoINTEL_ovr_0(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetAcceleratorInfoINTEL';
    private static function z_GetAcceleratorInfoINTEL_ovr_0_anh000001(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetAcceleratorInfoINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetAcceleratorInfoINTEL(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetAcceleratorInfoINTEL_ovr_0(accelerator, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetAcceleratorInfoINTEL_ovr_0_anh000001(accelerator, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetAcceleratorInfoINTEL(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetAcceleratorInfoINTEL_ovr_0(accelerator, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetAcceleratorInfoINTEL_ovr_2(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetAcceleratorInfoINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetAcceleratorInfoINTEL(accelerator: cl_accelerator_intel; param_name: AcceleratorInfoIntel; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetAcceleratorInfoINTEL_ovr_2(accelerator, param_name, param_value_size, param_value, param_value_size_ret);
    
    private static function z_RetainAcceleratorINTEL_ovr_0(accelerator: cl_accelerator_intel): ErrorCode;
    external 'opencl.dll' name 'clRetainAcceleratorINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function RetainAcceleratorINTEL(accelerator: cl_accelerator_intel): ErrorCode :=
    z_RetainAcceleratorINTEL_ovr_0(accelerator);
    
    private static function z_ReleaseAcceleratorINTEL_ovr_0(accelerator: cl_accelerator_intel): ErrorCode;
    external 'opencl.dll' name 'clReleaseAcceleratorINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function ReleaseAcceleratorINTEL(accelerator: cl_accelerator_intel): ErrorCode :=
    z_ReleaseAcceleratorINTEL_ovr_0(accelerator);
    
  end;
  
  [PCUNotRestore]
  clGlEventKHR = static class
    public const _ExtStr = 'khr_gl_event';
    
    private static function z_CreateEventFromGLsyncKHR_ovr_0(context: cl_context; sync: IntPtr; var errcode_ret: ErrorCode): cl_event;
    external 'opencl.dll' name 'clCreateEventFromGLsyncKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateEventFromGLsyncKHR(context: cl_context; sync: IntPtr; var errcode_ret: ErrorCode): cl_event :=
    z_CreateEventFromGLsyncKHR_ovr_0(context, sync, errcode_ret);
    
  end;
  
  [PCUNotRestore]
  clVaApiMediaSharingINTEL = static class
    public const _ExtStr = 'intel_va_api_media_sharing';
    
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000010(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000001(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000011(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000001(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000010(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000011(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_1_anh00000010(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000010(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_2(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_2_anh00000010(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_2(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_2_anh00000010(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0_anh00000001(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_0(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_2(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_6(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_6_anh00000001(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_6(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_6_anh00000001(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_6(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_8(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromVA_APIMediaAdapterINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: VaApiDeviceSourceIntel; media_adapter: IntPtr; media_adapter_set: VaApiDeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromVA_APIMediaAdapterINTEL_ovr_8(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    
    private static function z_CreateFromVA_APIMediaSurfaceINTEL_ovr_0(context: cl_context; flags: MemFlags; var surface: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromVA_APIMediaSurfaceINTEL';
    private static function z_CreateFromVA_APIMediaSurfaceINTEL_ovr_0_anh000100(context: cl_context; flags: MemFlags; surface: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromVA_APIMediaSurfaceINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromVA_APIMediaSurfaceINTEL(context: cl_context; flags: MemFlags; surface: array of IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (surface<>nil) and (surface.Length<>0) then
      z_CreateFromVA_APIMediaSurfaceINTEL_ovr_0(context, flags, surface[0], plane, errcode_ret) else
      z_CreateFromVA_APIMediaSurfaceINTEL_ovr_0_anh000100(context, flags, IntPtr.Zero, plane, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromVA_APIMediaSurfaceINTEL(context: cl_context; flags: MemFlags; var surface: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromVA_APIMediaSurfaceINTEL_ovr_0(context, flags, surface, plane, errcode_ret);
    private static function z_CreateFromVA_APIMediaSurfaceINTEL_ovr_2(context: cl_context; flags: MemFlags; surface: pointer; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromVA_APIMediaSurfaceINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromVA_APIMediaSurfaceINTEL(context: cl_context; flags: MemFlags; surface: pointer; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromVA_APIMediaSurfaceINTEL_ovr_2(context, flags, surface, plane, errcode_ret);
    
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireVA_APIMediaSurfacesINTEL_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseVA_APIMediaSurfacesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseVA_APIMediaSurfacesINTEL_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clDx9MediaSharingINTEL = static class
    public const _ExtStr = 'intel_dx9_media_sharing';
    
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_0(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000010(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000001(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000011(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9INTEL_ovr_0(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices[0], num_devices[0]) else
        z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000001(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices[0], IntPtr.Zero) else
      if (num_devices<>nil) and (num_devices.Length<>0) then
        z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000010(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, IntPtr.Zero, num_devices[0]) else
        z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000011(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_1_anh00000010(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; var num_devices: UInt32): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9INTEL_ovr_0(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000010(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, IntPtr.Zero, num_devices);
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_2(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_2_anh00000010(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: array of cl_device_id; num_devices: IntPtr): ErrorCode :=
    if (devices<>nil) and (devices.Length<>0) then
      z_GetDeviceIDsFromDX9INTEL_ovr_2(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices[0], num_devices) else
      z_GetDeviceIDsFromDX9INTEL_ovr_2_anh00000010(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, IntPtr.Zero, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9INTEL_ovr_0(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9INTEL_ovr_0_anh00000001(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9INTEL_ovr_0(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9INTEL_ovr_2(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_6(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_6_anh00000001(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: array of UInt32): ErrorCode :=
    if (num_devices<>nil) and (num_devices.Length<>0) then
      z_GetDeviceIDsFromDX9INTEL_ovr_6(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices[0]) else
      z_GetDeviceIDsFromDX9INTEL_ovr_6_anh00000001(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): ErrorCode :=
    z_GetDeviceIDsFromDX9INTEL_ovr_6(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    private static function z_GetDeviceIDsFromDX9INTEL_ovr_8(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetDeviceIDsFromDX9INTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: Dx9DeviceSourceIntel; dx9_object: IntPtr; dx9_device_set: Dx9DeviceSetIntel; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): ErrorCode :=
    z_GetDeviceIDsFromDX9INTEL_ovr_8(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    
    private static function z_CreateFromDX9MediaSurfaceINTEL_ovr_0(context: cl_context; flags: MemFlags; var resource: IntPtr; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromDX9MediaSurfaceINTEL';
    private static function z_CreateFromDX9MediaSurfaceINTEL_ovr_0_anh0001000(context: cl_context; flags: MemFlags; resource: IntPtr; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromDX9MediaSurfaceINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromDX9MediaSurfaceINTEL(context: cl_context; flags: MemFlags; resource: array of IntPtr; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    if (resource<>nil) and (resource.Length<>0) then
      z_CreateFromDX9MediaSurfaceINTEL_ovr_0(context, flags, resource[0], sharedHandle, plane, errcode_ret) else
      z_CreateFromDX9MediaSurfaceINTEL_ovr_0_anh0001000(context, flags, IntPtr.Zero, sharedHandle, plane, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromDX9MediaSurfaceINTEL(context: cl_context; flags: MemFlags; var resource: IntPtr; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromDX9MediaSurfaceINTEL_ovr_0(context, flags, resource, sharedHandle, plane, errcode_ret);
    private static function z_CreateFromDX9MediaSurfaceINTEL_ovr_2(context: cl_context; flags: MemFlags; resource: pointer; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromDX9MediaSurfaceINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromDX9MediaSurfaceINTEL(context: cl_context; flags: MemFlags; resource: pointer; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromDX9MediaSurfaceINTEL_ovr_2(context, flags, resource, sharedHandle, plane, errcode_ret);
    
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireDX9ObjectsINTEL_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireDX9ObjectsINTEL_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireDX9ObjectsINTEL_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseDX9ObjectsINTEL_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseDX9ObjectsINTEL_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseDX9ObjectsINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseDX9ObjectsINTEL_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clGlSharingKHR = static class
    public const _ExtStr = 'khr_gl_sharing';
    
    private static function z_GetGLContextInfoKHR_ovr_0(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    private static function z_GetGLContextInfoKHR_ovr_0_anh010000(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    private static function z_GetGLContextInfoKHR_ovr_0_anh000001(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    private static function z_GetGLContextInfoKHR_ovr_0_anh010001(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: array of ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
        z_GetGLContextInfoKHR_ovr_0(properties[0], param_name, param_value_size, param_value, param_value_size_ret[0]) else
        z_GetGLContextInfoKHR_ovr_0_anh000001(properties[0], param_name, param_value_size, param_value, IntPtr.Zero) else
      if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
        z_GetGLContextInfoKHR_ovr_0_anh010000(IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret[0]) else
        z_GetGLContextInfoKHR_ovr_0_anh010001(IntPtr.Zero, param_name, param_value_size, param_value, IntPtr.Zero);
    private static function z_GetGLContextInfoKHR_ovr_1_anh010000(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: array of ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_GetGLContextInfoKHR_ovr_0(properties[0], param_name, param_value_size, param_value, param_value_size_ret) else
      z_GetGLContextInfoKHR_ovr_0_anh010000(IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetGLContextInfoKHR_ovr_2(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    private static function z_GetGLContextInfoKHR_ovr_2_anh010000(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: array of ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    if (properties<>nil) and (properties.Length<>0) then
      z_GetGLContextInfoKHR_ovr_2(properties[0], param_name, param_value_size, param_value, param_value_size_ret) else
      z_GetGLContextInfoKHR_ovr_2_anh010000(IntPtr.Zero, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetGLContextInfoKHR_ovr_0(properties, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetGLContextInfoKHR_ovr_0_anh000001(properties, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetGLContextInfoKHR_ovr_0(properties, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(var properties: ContextProperties; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetGLContextInfoKHR_ovr_2(properties, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetGLContextInfoKHR_ovr_6(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    private static function z_GetGLContextInfoKHR_ovr_6_anh000001(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetGLContextInfoKHR_ovr_6(properties, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetGLContextInfoKHR_ovr_6_anh000001(properties, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetGLContextInfoKHR_ovr_6(properties, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetGLContextInfoKHR_ovr_8(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLContextInfoKHR';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLContextInfoKHR(properties: IntPtr; param_name: GlContextInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetGLContextInfoKHR_ovr_8(properties, param_name, param_value_size, param_value, param_value_size_ret);
    
    private static function z_CreateFromGLBuffer_ovr_0(context: cl_context; flags: MemFlags; bufobj: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromGLBuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromGLBuffer(context: cl_context; flags: MemFlags; bufobj: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromGLBuffer_ovr_0(context, flags, bufobj, errcode_ret);
    
    private static function z_CreateFromGLTexture_ovr_0(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromGLTexture';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromGLTexture(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromGLTexture_ovr_0(context, flags, target, miplevel, texture, errcode_ret);
    
    private static function z_CreateFromGLTexture2D_ovr_0(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromGLTexture2D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromGLTexture2D(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromGLTexture2D_ovr_0(context, flags, target, miplevel, texture, errcode_ret);
    
    private static function z_CreateFromGLTexture3D_ovr_0(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromGLTexture3D';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromGLTexture3D(context: cl_context; flags: MemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromGLTexture3D_ovr_0(context, flags, target, miplevel, texture, errcode_ret);
    
    private static function z_CreateFromGLRenderbuffer_ovr_0(context: cl_context; flags: MemFlags; renderbuffer: UInt32; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateFromGLRenderbuffer';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateFromGLRenderbuffer(context: cl_context; flags: MemFlags; renderbuffer: UInt32; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateFromGLRenderbuffer_ovr_0(context, flags, renderbuffer, errcode_ret);
    
    private static function z_GetGLObjectInfo_ovr_0(memobj: cl_mem; var gl_object_type: GlObjectType; var gl_object_name: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    private static function z_GetGLObjectInfo_ovr_0_anh0010(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    private static function z_GetGLObjectInfo_ovr_0_anh0001(memobj: cl_mem; var gl_object_type: GlObjectType; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    private static function z_GetGLObjectInfo_ovr_0_anh0011(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: array of GlObjectType; gl_object_name: array of UInt32): ErrorCode :=
    if (gl_object_type<>nil) and (gl_object_type.Length<>0) then
      if (gl_object_name<>nil) and (gl_object_name.Length<>0) then
        z_GetGLObjectInfo_ovr_0(memobj, gl_object_type[0], gl_object_name[0]) else
        z_GetGLObjectInfo_ovr_0_anh0001(memobj, gl_object_type[0], IntPtr.Zero) else
      if (gl_object_name<>nil) and (gl_object_name.Length<>0) then
        z_GetGLObjectInfo_ovr_0_anh0010(memobj, IntPtr.Zero, gl_object_name[0]) else
        z_GetGLObjectInfo_ovr_0_anh0011(memobj, IntPtr.Zero, IntPtr.Zero);
    private static function z_GetGLObjectInfo_ovr_1_anh0010(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: array of GlObjectType; var gl_object_name: UInt32): ErrorCode :=
    if (gl_object_type<>nil) and (gl_object_type.Length<>0) then
      z_GetGLObjectInfo_ovr_0(memobj, gl_object_type[0], gl_object_name) else
      z_GetGLObjectInfo_ovr_0_anh0010(memobj, IntPtr.Zero, gl_object_name);
    private static function z_GetGLObjectInfo_ovr_2(memobj: cl_mem; var gl_object_type: GlObjectType; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    private static function z_GetGLObjectInfo_ovr_2_anh0010(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: array of GlObjectType; gl_object_name: IntPtr): ErrorCode :=
    if (gl_object_type<>nil) and (gl_object_type.Length<>0) then
      z_GetGLObjectInfo_ovr_2(memobj, gl_object_type[0], gl_object_name) else
      z_GetGLObjectInfo_ovr_2_anh0010(memobj, IntPtr.Zero, gl_object_name);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; var gl_object_type: GlObjectType; gl_object_name: array of UInt32): ErrorCode :=
    if (gl_object_name<>nil) and (gl_object_name.Length<>0) then
      z_GetGLObjectInfo_ovr_0(memobj, gl_object_type, gl_object_name[0]) else
      z_GetGLObjectInfo_ovr_0_anh0001(memobj, gl_object_type, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; var gl_object_type: GlObjectType; var gl_object_name: UInt32): ErrorCode :=
    z_GetGLObjectInfo_ovr_0(memobj, gl_object_type, gl_object_name);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; var gl_object_type: GlObjectType; gl_object_name: IntPtr): ErrorCode :=
    z_GetGLObjectInfo_ovr_2(memobj, gl_object_type, gl_object_name);
    private static function z_GetGLObjectInfo_ovr_6(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    private static function z_GetGLObjectInfo_ovr_6_anh0001(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: array of UInt32): ErrorCode :=
    if (gl_object_name<>nil) and (gl_object_name.Length<>0) then
      z_GetGLObjectInfo_ovr_6(memobj, gl_object_type, gl_object_name[0]) else
      z_GetGLObjectInfo_ovr_6_anh0001(memobj, gl_object_type, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): ErrorCode :=
    z_GetGLObjectInfo_ovr_6(memobj, gl_object_type, gl_object_name);
    private static function z_GetGLObjectInfo_ovr_8(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLObjectInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLObjectInfo(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): ErrorCode :=
    z_GetGLObjectInfo_ovr_8(memobj, gl_object_type, gl_object_name);
    
    private static function z_GetGLTextureInfo_ovr_0(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLTextureInfo';
    private static function z_GetGLTextureInfo_ovr_0_anh000001(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLTextureInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLTextureInfo(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetGLTextureInfo_ovr_0(memobj, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetGLTextureInfo_ovr_0_anh000001(memobj, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLTextureInfo(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetGLTextureInfo_ovr_0(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetGLTextureInfo_ovr_2(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetGLTextureInfo';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetGLTextureInfo(memobj: cl_mem; param_name: GlTextureInfo; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetGLTextureInfo_ovr_2(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    
    private static function z_EnqueueAcquireGLObjects_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireGLObjects_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueAcquireGLObjects_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueAcquireGLObjects_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueAcquireGLObjects_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireGLObjects_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGLObjects_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueAcquireGLObjects_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireGLObjects_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGLObjects_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueAcquireGLObjects_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGLObjects_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueAcquireGLObjects_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGLObjects_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGLObjects_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueAcquireGLObjects_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueAcquireGLObjects_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueAcquireGLObjects_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGLObjects_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueAcquireGLObjects_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGLObjects_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    private static function z_EnqueueAcquireGLObjects_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueAcquireGLObjects_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueAcquireGLObjects_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueAcquireGLObjects_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueAcquireGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueAcquireGLObjects_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueReleaseGLObjects_ovr_0(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_0_anh0001011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseGLObjects_ovr_0_anh0000011(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event[0]) else
          z_EnqueueReleaseGLObjects_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
        if (&event<>nil) and (&event.Length<>0) then
          z_EnqueueReleaseGLObjects_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
          z_EnqueueReleaseGLObjects_ovr_0_anh0001011(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseGLObjects_ovr_1_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_1_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_1_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_2(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_2_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_2_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_2_anh0001010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGLObjects_ovr_2_anh0000010(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, IntPtr.Zero, &event) else
      if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list[0], &event) else
        z_EnqueueReleaseGLObjects_ovr_2_anh0001010(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_3_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_3_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseGLObjects_ovr_4_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGLObjects_ovr_0_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_5_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGLObjects_ovr_2_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_6(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_6_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_6_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_6_anh0001001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_6_anh0000001(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_6_anh0001001(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    private static function z_EnqueueReleaseGLObjects_ovr_7_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_6(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGLObjects_ovr_6_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_8(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_8_anh0001000(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    if (mem_objects<>nil) and (mem_objects.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_8(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
      z_EnqueueReleaseGLObjects_ovr_8_anh0001000(command_queue, num_objects, IntPtr.Zero, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_0_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGLObjects_ovr_0_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGLObjects_ovr_2_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGLObjects_ovr_0_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_0(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGLObjects_ovr_6_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_18(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_18_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_18_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_18_anh0000011(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueReleaseGLObjects_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueReleaseGLObjects_ovr_18_anh0000011(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueReleaseGLObjects_ovr_19_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGLObjects_ovr_18_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_20(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_20_anh0000010(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueReleaseGLObjects_ovr_20_anh0000010(command_queue, num_objects, mem_objects, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGLObjects_ovr_18_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_18(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_20(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_24(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    private static function z_EnqueueReleaseGLObjects_ovr_24_anh0000001(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueReleaseGLObjects_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueReleaseGLObjects_ovr_24_anh0000001(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_24(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueReleaseGLObjects_ovr_26(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueReleaseGLObjects';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueReleaseGLObjects_ovr_26(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clUnifiedSharedMemoryINTEL = static class
    public const _ExtStr = 'intel_unified_shared_memory';
    
    private static function z_HostMemAllocINTEL_ovr_0(context: cl_context; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clHostMemAllocINTEL';
    private static function z_HostMemAllocINTEL_ovr_0_anh001000(context: cl_context; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clHostMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function HostMemAllocINTEL(context: cl_context; properties: array of MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    if (properties<>nil) and (properties.Length<>0) then
      z_HostMemAllocINTEL_ovr_0(context, properties[0], size, alignment, errcode_ret) else
      z_HostMemAllocINTEL_ovr_0_anh001000(context, IntPtr.Zero, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function HostMemAllocINTEL(context: cl_context; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_HostMemAllocINTEL_ovr_0(context, properties, size, alignment, errcode_ret);
    private static function z_HostMemAllocINTEL_ovr_2(context: cl_context; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clHostMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function HostMemAllocINTEL(context: cl_context; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_HostMemAllocINTEL_ovr_2(context, properties, size, alignment, errcode_ret);
    
    private static function z_DeviceMemAllocINTEL_ovr_0(context: cl_context; device: cl_device_id; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clDeviceMemAllocINTEL';
    private static function z_DeviceMemAllocINTEL_ovr_0_anh0001000(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clDeviceMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; properties: array of MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    if (properties<>nil) and (properties.Length<>0) then
      z_DeviceMemAllocINTEL_ovr_0(context, device, properties[0], size, alignment, errcode_ret) else
      z_DeviceMemAllocINTEL_ovr_0_anh0001000(context, device, IntPtr.Zero, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_DeviceMemAllocINTEL_ovr_0(context, device, properties, size, alignment, errcode_ret);
    private static function z_DeviceMemAllocINTEL_ovr_2(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clDeviceMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_DeviceMemAllocINTEL_ovr_2(context, device, properties, size, alignment, errcode_ret);
    
    private static function z_SharedMemAllocINTEL_ovr_0(context: cl_context; device: cl_device_id; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clSharedMemAllocINTEL';
    private static function z_SharedMemAllocINTEL_ovr_0_anh0001000(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clSharedMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; properties: array of MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    if (properties<>nil) and (properties.Length<>0) then
      z_SharedMemAllocINTEL_ovr_0(context, device, properties[0], size, alignment, errcode_ret) else
      z_SharedMemAllocINTEL_ovr_0_anh0001000(context, device, IntPtr.Zero, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; var properties: MemPropertiesIntel; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_SharedMemAllocINTEL_ovr_0(context, device, properties, size, alignment, errcode_ret);
    private static function z_SharedMemAllocINTEL_ovr_2(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr;
    external 'opencl.dll' name 'clSharedMemAllocINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: ErrorCode): IntPtr :=
    z_SharedMemAllocINTEL_ovr_2(context, device, properties, size, alignment, errcode_ret);
    
    private static function z_MemFreeINTEL_ovr_0(context: cl_context; ptr: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clMemFreeINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function MemFreeINTEL(context: cl_context; ptr: IntPtr): ErrorCode :=
    z_MemFreeINTEL_ovr_0(context, ptr);
    
    private static function z_GetMemAllocInfoINTEL_ovr_0(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemAllocInfoINTEL';
    private static function z_GetMemAllocInfoINTEL_ovr_0_anh0000001(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemAllocInfoINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemAllocInfoINTEL(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: array of UIntPtr): ErrorCode :=
    if (param_value_size_ret<>nil) and (param_value_size_ret.Length<>0) then
      z_GetMemAllocInfoINTEL_ovr_0(context, ptr, param_name, param_value_size, param_value, param_value_size_ret[0]) else
      z_GetMemAllocInfoINTEL_ovr_0_anh0000001(context, ptr, param_name, param_value_size, param_value, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemAllocInfoINTEL(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; var param_value_size_ret: UIntPtr): ErrorCode :=
    z_GetMemAllocInfoINTEL_ovr_0(context, ptr, param_name, param_value_size, param_value, param_value_size_ret);
    private static function z_GetMemAllocInfoINTEL_ovr_2(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clGetMemAllocInfoINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function GetMemAllocInfoINTEL(context: cl_context; ptr: IntPtr; param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr; param_value_size_ret: IntPtr): ErrorCode :=
    z_GetMemAllocInfoINTEL_ovr_2(context, ptr, param_name, param_value_size, param_value, param_value_size_ret);
    
    private static function z_SetKernelArgMemPointerINTEL_ovr_0(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clSetKernelArgMemPointerINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function SetKernelArgMemPointerINTEL(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): ErrorCode :=
    z_SetKernelArgMemPointerINTEL_ovr_0(kernel, arg_index, arg_value);
    
    private static function z_EnqueueMemsetINTEL_ovr_0(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    private static function z_EnqueueMemsetINTEL_ovr_0_anh00000010(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    private static function z_EnqueueMemsetINTEL_ovr_0_anh00000001(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    private static function z_EnqueueMemsetINTEL_ovr_0_anh00000011(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemsetINTEL_ovr_0(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMemsetINTEL_ovr_0_anh00000001(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemsetINTEL_ovr_0_anh00000010(command_queue, dst_ptr, value, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMemsetINTEL_ovr_0_anh00000011(command_queue, dst_ptr, value, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMemsetINTEL_ovr_1_anh00000010(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemsetINTEL_ovr_0(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemsetINTEL_ovr_0_anh00000010(command_queue, dst_ptr, value, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMemsetINTEL_ovr_2(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    private static function z_EnqueueMemsetINTEL_ovr_2_anh00000010(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemsetINTEL_ovr_2(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemsetINTEL_ovr_2_anh00000010(command_queue, dst_ptr, value, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemsetINTEL_ovr_0(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemsetINTEL_ovr_0_anh00000001(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMemsetINTEL_ovr_0(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMemsetINTEL_ovr_2(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemsetINTEL_ovr_6(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    private static function z_EnqueueMemsetINTEL_ovr_6_anh00000001(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemsetINTEL_ovr_6(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemsetINTEL_ovr_6_anh00000001(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMemsetINTEL_ovr_6(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemsetINTEL_ovr_8(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemsetINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMemsetINTEL_ovr_8(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueMemFillINTEL_ovr_0(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    private static function z_EnqueueMemFillINTEL_ovr_0_anh000000010(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    private static function z_EnqueueMemFillINTEL_ovr_0_anh000000001(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    private static function z_EnqueueMemFillINTEL_ovr_0_anh000000011(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemFillINTEL_ovr_0(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMemFillINTEL_ovr_0_anh000000001(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemFillINTEL_ovr_0_anh000000010(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMemFillINTEL_ovr_0_anh000000011(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMemFillINTEL_ovr_1_anh000000010(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemFillINTEL_ovr_0(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemFillINTEL_ovr_0_anh000000010(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMemFillINTEL_ovr_2(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    private static function z_EnqueueMemFillINTEL_ovr_2_anh000000010(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemFillINTEL_ovr_2(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemFillINTEL_ovr_2_anh000000010(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemFillINTEL_ovr_0(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemFillINTEL_ovr_0_anh000000001(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMemFillINTEL_ovr_0(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMemFillINTEL_ovr_2(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemFillINTEL_ovr_6(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    private static function z_EnqueueMemFillINTEL_ovr_6_anh000000001(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemFillINTEL_ovr_6(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemFillINTEL_ovr_6_anh000000001(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMemFillINTEL_ovr_6(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemFillINTEL_ovr_8(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemFillINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMemFillINTEL_ovr_8(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueMemcpyINTEL_ovr_0(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    private static function z_EnqueueMemcpyINTEL_ovr_0_anh000000010(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    private static function z_EnqueueMemcpyINTEL_ovr_0_anh000000001(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    private static function z_EnqueueMemcpyINTEL_ovr_0_anh000000011(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemcpyINTEL_ovr_0(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMemcpyINTEL_ovr_0_anh000000001(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemcpyINTEL_ovr_0_anh000000010(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMemcpyINTEL_ovr_0_anh000000011(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMemcpyINTEL_ovr_1_anh000000010(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemcpyINTEL_ovr_0(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemcpyINTEL_ovr_0_anh000000010(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMemcpyINTEL_ovr_2(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    private static function z_EnqueueMemcpyINTEL_ovr_2_anh000000010(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemcpyINTEL_ovr_2(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemcpyINTEL_ovr_2_anh000000010(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemcpyINTEL_ovr_0(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemcpyINTEL_ovr_0_anh000000001(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMemcpyINTEL_ovr_0(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMemcpyINTEL_ovr_2(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemcpyINTEL_ovr_6(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    private static function z_EnqueueMemcpyINTEL_ovr_6_anh000000001(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemcpyINTEL_ovr_6(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemcpyINTEL_ovr_6_anh000000001(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMemcpyINTEL_ovr_6(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemcpyINTEL_ovr_8(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemcpyINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: Bool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMemcpyINTEL_ovr_8(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueMemAdviseINTEL_ovr_0(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    private static function z_EnqueueMemAdviseINTEL_ovr_0_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    private static function z_EnqueueMemAdviseINTEL_ovr_0_anh00000001(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    private static function z_EnqueueMemAdviseINTEL_ovr_0_anh00000011(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemAdviseINTEL_ovr_0(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMemAdviseINTEL_ovr_0_anh00000001(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMemAdviseINTEL_ovr_0_anh00000010(command_queue, ptr, size, advice, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMemAdviseINTEL_ovr_0_anh00000011(command_queue, ptr, size, advice, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMemAdviseINTEL_ovr_1_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemAdviseINTEL_ovr_0(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemAdviseINTEL_ovr_0_anh00000010(command_queue, ptr, size, advice, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMemAdviseINTEL_ovr_2(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    private static function z_EnqueueMemAdviseINTEL_ovr_2_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMemAdviseINTEL_ovr_2(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMemAdviseINTEL_ovr_2_anh00000010(command_queue, ptr, size, advice, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemAdviseINTEL_ovr_0(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemAdviseINTEL_ovr_0_anh00000001(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMemAdviseINTEL_ovr_0(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMemAdviseINTEL_ovr_2(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemAdviseINTEL_ovr_6(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    private static function z_EnqueueMemAdviseINTEL_ovr_6_anh00000001(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMemAdviseINTEL_ovr_6(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMemAdviseINTEL_ovr_6_anh00000001(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMemAdviseINTEL_ovr_6(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMemAdviseINTEL_ovr_8(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMemAdviseINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMemAdviseINTEL_ovr_8(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    
    private static function z_EnqueueMigrateMemINTEL_ovr_0(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    private static function z_EnqueueMigrateMemINTEL_ovr_0_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    private static function z_EnqueueMigrateMemINTEL_ovr_0_anh00000001(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    private static function z_EnqueueMigrateMemINTEL_ovr_0_anh00000011(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: array of cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemINTEL_ovr_0(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], &event[0]) else
        z_EnqueueMigrateMemINTEL_ovr_0_anh00000001(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], IntPtr.Zero) else
      if (&event<>nil) and (&event.Length<>0) then
        z_EnqueueMigrateMemINTEL_ovr_0_anh00000010(command_queue, ptr, size, flags, num_events_in_wait_list, IntPtr.Zero, &event[0]) else
        z_EnqueueMigrateMemINTEL_ovr_0_anh00000011(command_queue, ptr, size, flags, num_events_in_wait_list, IntPtr.Zero, IntPtr.Zero);
    private static function z_EnqueueMigrateMemINTEL_ovr_1_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemINTEL_ovr_0(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemINTEL_ovr_0_anh00000010(command_queue, ptr, size, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    private static function z_EnqueueMigrateMemINTEL_ovr_2(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    private static function z_EnqueueMigrateMemINTEL_ovr_2_anh00000010(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): ErrorCode :=
    if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
      z_EnqueueMigrateMemINTEL_ovr_2(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], &event) else
      z_EnqueueMigrateMemINTEL_ovr_2_anh00000010(command_queue, ptr, size, flags, num_events_in_wait_list, IntPtr.Zero, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemINTEL_ovr_0(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemINTEL_ovr_0_anh00000001(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemINTEL_ovr_0(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemINTEL_ovr_2(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemINTEL_ovr_6(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    private static function z_EnqueueMigrateMemINTEL_ovr_6_anh00000001(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: array of cl_event): ErrorCode :=
    if (&event<>nil) and (&event.Length<>0) then
      z_EnqueueMigrateMemINTEL_ovr_6(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event[0]) else
      z_EnqueueMigrateMemINTEL_ovr_6_anh00000001(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, IntPtr.Zero);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): ErrorCode :=
    z_EnqueueMigrateMemINTEL_ovr_6(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    private static function z_EnqueueMigrateMemINTEL_ovr_8(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode;
    external 'opencl.dll' name 'clEnqueueMigrateMemINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: MemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): ErrorCode :=
    z_EnqueueMigrateMemINTEL_ovr_8(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  [PCUNotRestore]
  clCreateBufferWithPropertiesINTEL = static class
    public const _ExtStr = 'intel_create_buffer_with_properties';
    
    private static function z_CreateBufferWithPropertiesINTEL_ovr_0(context: cl_context; var properties: MemPropertiesIntel; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithPropertiesINTEL';
    private static function z_CreateBufferWithPropertiesINTEL_ovr_0_anh0010000(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithPropertiesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithPropertiesINTEL(context: cl_context; properties: array of MemPropertiesIntel; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    if (properties<>nil) and (properties.Length<>0) then
      z_CreateBufferWithPropertiesINTEL_ovr_0(context, properties[0], flags, size, host_ptr, errcode_ret) else
      z_CreateBufferWithPropertiesINTEL_ovr_0_anh0010000(context, IntPtr.Zero, flags, size, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithPropertiesINTEL(context: cl_context; var properties: MemPropertiesIntel; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBufferWithPropertiesINTEL_ovr_0(context, properties, flags, size, host_ptr, errcode_ret);
    private static function z_CreateBufferWithPropertiesINTEL_ovr_2(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem;
    external 'opencl.dll' name 'clCreateBufferWithPropertiesINTEL';
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] static function CreateBufferWithPropertiesINTEL(context: cl_context; properties: IntPtr; flags: MemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: ErrorCode): cl_mem :=
    z_CreateBufferWithPropertiesINTEL_ovr_2(context, properties, flags, size, host_ptr, errcode_ret);
    
  end;
  
  {$endregion Extensions}
  
  
  