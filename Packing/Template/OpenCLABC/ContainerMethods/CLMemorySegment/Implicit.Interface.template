    
    
    
    {$region 1#Write&Read}
    
    public function WriteValue<TRecord>(val: TRecord): CLMemorySegment; where TRecord: record;
    
    public function WriteValue<TRecord>(val: CommandQueue<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteValue<TRecord>(val: TRecord; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteValue<TRecord>(val: CommandQueue<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray1<TRecord>(a: array of TRecord): CLMemorySegment; where TRecord: record;
    
    public function WriteArray2<TRecord>(a: array[,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function WriteArray3<TRecord>(a: array[,,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function ReadArray1<TRecord>(a: array of TRecord): CLMemorySegment; where TRecord: record;
    
    public function ReadArray2<TRecord>(a: array[,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function ReadArray3<TRecord>(a: array[,,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function WriteArray1<TRecord>(a: array of TRecord; a_ind, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray2<TRecord>(a: array[,] of TRecord; a_ind1,a_ind2, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray3<TRecord>(a: array[,,] of TRecord; a_ind1,a_ind2,a_ind3, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray1<TRecord>(a: array of TRecord; a_ind, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray2<TRecord>(a: array[,] of TRecord; a_ind1,a_ind2, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray3<TRecord>(a: array[,,] of TRecord; a_ind1,a_ind2,a_ind3, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray1<TRecord>(a: CommandQueue<array of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray2<TRecord>(a: CommandQueue<array[,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray1<TRecord>(a: CommandQueue<array of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray2<TRecord>(a: CommandQueue<array[,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray1<TRecord>(a: CommandQueue<array of TRecord>; a_ind, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray2<TRecord>(a: CommandQueue<array[,] of TRecord>; a_ind1,a_ind2, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>; a_ind1,a_ind2,a_ind3, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray1<TRecord>(a: CommandQueue<array of TRecord>; a_ind, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray2<TRecord>(a: CommandQueue<array[,] of TRecord>; a_ind1,a_ind2, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>; a_ind1,a_ind2,a_ind3, el_count, mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteArraySegment<TRecord>(a: ArraySegment<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadArraySegment<TRecord>(a: ArraySegment<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteData(ptr: CommandQueue<IntPtr>): CLMemorySegment;
    
    public function WriteData(ptr: CommandQueue<IntPtr>; mem_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadData(ptr: CommandQueue<IntPtr>): CLMemorySegment;
    
    public function ReadData(ptr: CommandQueue<IntPtr>; mem_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteData(ptr: pointer): CLMemorySegment;
    
    public function WriteData(ptr: pointer; mem_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadData(ptr: pointer): CLMemorySegment;
    
    public function ReadData(ptr: pointer; mem_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteNativeMemoryArea(native_data: NativeMemoryArea): CLMemorySegment;
    
    public function WriteNativeMemoryArea(native_data: NativeMemoryArea; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteNativeMemory(native_data: NativeMemory): CLMemorySegment;
    
    public function WriteNativeMemory(native_data: NativeMemory; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeValue<TRecord>(native_data: NativeValue<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeValue<TRecord>(native_data: NativeValue<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArray<TRecord>(native_data: NativeArray<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArray<TRecord>(native_data: NativeArray<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeMemoryArea(native_data: NativeMemoryArea): CLMemorySegment;
    
    public function ReadNativeMemoryArea(native_data: NativeMemoryArea; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadNativeMemory(native_data: NativeMemory): CLMemorySegment;
    
    public function ReadNativeMemory(native_data: NativeMemory; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeValue<TRecord>(native_data: NativeValue<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeValue<TRecord>(native_data: NativeValue<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArray<TRecord>(native_data: NativeArray<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArray<TRecord>(native_data: NativeArray<TRecord>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>): CLMemorySegment;
    
    public function WriteNativeMemory(native_data: CommandQueue<NativeMemory>): CLMemorySegment;
    
    public function WriteNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>): CLMemorySegment;
    
    public function ReadNativeMemory(native_data: CommandQueue<NativeMemory>): CLMemorySegment;
    
    public function ReadNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteNativeMemory(native_data: CommandQueue<NativeMemory>; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function WriteNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function WriteNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadNativeMemory(native_data: CommandQueue<NativeMemory>; mem_offset: CommandQueue<integer>): CLMemorySegment;
    
    public function ReadNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function ReadNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>; mem_offset: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    {$endregion 1#Write&Read}
    
    {$region 2#Fill}
    
    public function FillValue<TRecord>(val: TRecord): CLMemorySegment; where TRecord: record;
    
    public function FillValue<TRecord>(val: CommandQueue<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillValue<TRecord>(val: TRecord; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillValue<TRecord>(val: CommandQueue<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray1<TRecord>(a: array of TRecord): CLMemorySegment; where TRecord: record;
    
    public function FillArray2<TRecord>(a: array[,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function FillArray3<TRecord>(a: array[,,] of TRecord): CLMemorySegment; where TRecord: record;
    
    public function FillArray1<TRecord>(a: array of TRecord; a_ind, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray2<TRecord>(a: array[,] of TRecord; a_ind1,a_ind2, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray3<TRecord>(a: array[,,] of TRecord; a_ind1,a_ind2,a_ind3, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray1<TRecord>(a: CommandQueue<array of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillArray2<TRecord>(a: CommandQueue<array[,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillArray1<TRecord>(a: CommandQueue<array of TRecord>; a_ind, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray2<TRecord>(a: CommandQueue<array[,] of TRecord>; a_ind1,a_ind2, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArray3<TRecord>(a: CommandQueue<array[,,] of TRecord>; a_ind1,a_ind2,a_ind3, pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillArraySegment<TRecord>(a: ArraySegment<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillArraySegment<TRecord>(a: ArraySegment<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillData(ptr: CommandQueue<IntPtr>; pattern_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillData(ptr: CommandQueue<IntPtr>; pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillData(ptr: pointer; pattern_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillData(ptr: pointer; pattern_byte_len, mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillNativeMemoryArea(native_data: NativeMemoryArea): CLMemorySegment;
    
    public function FillNativeMemoryArea(native_data: NativeMemoryArea; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillNativeMemory(native_data: NativeMemory): CLMemorySegment;
    
    public function FillNativeMemory(native_data: NativeMemory; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValueArea<TRecord>(native_data: NativeValueArea<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValue<TRecord>(native_data: NativeValue<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValue<TRecord>(native_data: NativeValue<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArrayArea<TRecord>(native_data: NativeArrayArea<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArray<TRecord>(native_data: NativeArray<TRecord>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArray<TRecord>(native_data: NativeArray<TRecord>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>): CLMemorySegment;
    
    public function FillNativeMemoryArea(native_data: CommandQueue<NativeMemoryArea>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillNativeMemory(native_data: CommandQueue<NativeMemory>): CLMemorySegment;
    
    public function FillNativeMemory(native_data: CommandQueue<NativeMemory>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment;
    
    public function FillNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValueArea<TRecord>(native_data: CommandQueue<NativeValueArea<TRecord>>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeValue<TRecord>(native_data: CommandQueue<NativeValue<TRecord>>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArrayArea<TRecord>(native_data: CommandQueue<NativeArrayArea<TRecord>>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>): CLMemorySegment; where TRecord: record;
    
    public function FillNativeArray<TRecord>(native_data: CommandQueue<NativeArray<TRecord>>; mem_offset, fill_byte_len: CommandQueue<integer>): CLMemorySegment; where TRecord: record;
    
    {$endregion 2#Fill}
    
    {$region 3#Copy}
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>): CLMemorySegment;
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>; from_offset, to_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>): CLMemorySegment;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>; from_offset, to_offset, len: CommandQueue<integer>): CLMemorySegment;
    
    {$endregion 3#Copy}
    
    
    