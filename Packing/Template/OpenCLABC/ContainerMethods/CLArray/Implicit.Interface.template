    
    
    
    {$region 1#Write&Read}
    
    public function WriteValue(val: &T; ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteValue(val: CommandQueue<&T>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteArray(a: CommandQueue<array of &T>): CLArray<T>;
    
    public function WriteArray2(a: CommandQueue<array[,] of &T>): CLArray<T>;
    
    public function WriteArray3(a: CommandQueue<array[,,] of &T>): CLArray<T>;
    
    public function ReadArray(a: CommandQueue<array of &T>): CLArray<T>;
    
    public function ReadArray2(a: CommandQueue<array[,] of &T>): CLArray<T>;
    
    public function ReadArray3(a: CommandQueue<array[,,] of &T>): CLArray<T>;
    
    public function WriteArray(a: CommandQueue<array of &T>; a_ind, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteArray2(a: CommandQueue<array[,] of &T>; a_ind1,a_ind2, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteArray3(a: CommandQueue<array[,,] of &T>; a_ind1,a_ind2,a_ind3, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadArray(a: CommandQueue<array of &T>; a_ind, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadArray2(a: CommandQueue<array[,] of &T>; a_ind1,a_ind2, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadArray3(a: CommandQueue<array[,,] of &T>; a_ind1,a_ind2,a_ind3, len, ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteArraySegment(a: CommandQueue<ArraySegment<&T>>): CLArray<T>;
    
    public function ReadArraySegment(a: CommandQueue<ArraySegment<&T>>): CLArray<T>;
    
    public function WriteArraySegment(a: CommandQueue<ArraySegment<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadArraySegment(a: CommandQueue<ArraySegment<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteData(ptr: CommandQueue<IntPtr>): CLArray<T>;
    
    public function WriteData(ptr: CommandQueue<IntPtr>; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function ReadData(ptr: CommandQueue<IntPtr>): CLArray<T>;
    
    public function ReadData(ptr: CommandQueue<IntPtr>; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function WriteData(ptr: pointer): CLArray<T>;
    
    public function WriteData(ptr: pointer; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function ReadData(ptr: pointer): CLArray<T>;
    
    public function ReadData(ptr: pointer; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function WriteData(data: CommandQueue<NativeMemoryArea>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadData(data: CommandQueue<NativeMemoryArea>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteNativeValue(val: CommandQueue<NativeValue<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function ReadNativeValue(val: CommandQueue<NativeValue<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function WriteNativeArray(a: CommandQueue<NativeArray<&T>>): CLArray<T>;
    
    public function WriteNativeArray(a: CommandQueue<NativeArray<&T>>;ind,len,a_ind:CommandQueue<integer>): CLArray<T>;
    
    public function ReadNativeArray(a: CommandQueue<NativeArray<&T>>): CLArray<T>;
    
    public function ReadNativeArray(a: CommandQueue<NativeArray<&T>>;ind,len,a_ind:CommandQueue<integer>): CLArray<T>;
    
    {$endregion 1#Write&Read}
    
    {$region 2#Fill}
    
    public function FillValue(val: &T): CLArray<T>;
    
    public function FillValue(val: CommandQueue<&T>): CLArray<T>;
    
    public function FillValue(val: &T; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function FillValue(val: CommandQueue<&T>; ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function FillArray(a: CommandQueue<array of &T>): CLArray<T>;
    
    public function FillArray2(a: CommandQueue<array[,] of &T>): CLArray<T>;
    
    public function FillArray3(a: CommandQueue<array[,,] of &T>): CLArray<T>;
    
    public function FillArray(a: CommandQueue<array of &T>; a_ind, pattern_len, ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillArray2(a: CommandQueue<array[,] of &T>; a_ind1,a_ind2, pattern_len, ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillArray3(a: CommandQueue<array[,,] of &T>; a_ind1,a_ind2,a_ind3, pattern_len, ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillArraySegment(a: CommandQueue<ArraySegment<&T>>): CLArray<T>;
    
    public function FillArraySegment(a: CommandQueue<ArraySegment<&T>>; ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillData(ptr: CommandQueue<IntPtr>; pattern_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillData(ptr: CommandQueue<IntPtr>; pattern_len, ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillData(ptr: pointer; pattern_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillData(ptr: pointer; pattern_len, ind, fill_len: CommandQueue<integer>): CLArray<T>;
    
    public function FillData(data: CommandQueue<NativeMemoryArea>): CLArray<T>;
    
    public function FillData(data: CommandQueue<NativeMemoryArea>;ind,fill_len:CommandQueue<integer>): CLArray<T>;
    
    public function FillNativeValue(val: CommandQueue<NativeValue<&T>>): CLArray<T>;
    
    public function FillNativeValue(val: CommandQueue<NativeValue<&T>>;ind,fill_len:CommandQueue<integer>): CLArray<T>;
    
    public function FillNativeArray(a: CommandQueue<NativeArray<&T>>): CLArray<T>;
    
    public function FillNativeArray(a: CommandQueue<NativeArray<&T>>; a_ind,pattern_len, ind,fill_len:CommandQueue<integer>): CLArray<T>;
    
    {$endregion 2#Fill}
    
    {$region 3#Copy}
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>): CLArray<T>;
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>; mem_offset, ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>): CLArray<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>; mem_offset, ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function CopyTo(val: CommandQueue<CLValue<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function CopyFrom(val: CommandQueue<CLValue<&T>>; ind: CommandQueue<integer>): CLArray<T>;
    
    public function CopyTo(a: CommandQueue<CLArray<&T>>): CLArray<T>;
    
    public function CopyTo(a: CommandQueue<CLArray<&T>>; from_ind, to_ind, len: CommandQueue<integer>): CLArray<T>;
    
    public function CopyFrom(a: CommandQueue<CLArray<&T>>): CLArray<T>;
    
    public function CopyFrom(a: CommandQueue<CLArray<&T>>; from_ind, to_ind, len: CommandQueue<integer>): CLArray<T>;
    
    {$endregion 3#Copy}
    
    
    