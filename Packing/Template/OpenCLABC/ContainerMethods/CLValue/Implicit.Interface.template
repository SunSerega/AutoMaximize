    
    
    
    {$region 1#Write&Read}
    
    public function WriteValue(val: &T): CLValue<T>;
    
    public function WriteValue(val: CommandQueue<&T>): CLValue<T>;
    
    public function WriteData(ptr: CommandQueue<IntPtr>): CLValue<T>;
    
    public function ReadData(ptr: CommandQueue<IntPtr>): CLValue<T>;
    
    public function WriteData(ptr: pointer): CLValue<T>;
    
    public function ReadData(ptr: pointer): CLValue<T>;
    
    public function WriteNativeValue(val: CommandQueue<NativeValue<&T>>): CLValue<T>;
    
    public function ReadNativeValue(val: CommandQueue<NativeValue<&T>>): CLValue<T>;
    
    {$endregion 1#Write&Read}
    
    {$region 3#Copy}
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>): CLValue<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>): CLValue<T>;
    
    public function CopyTo(mem: CommandQueue<CLMemorySegment>; mem_offset: CommandQueue<integer>): CLValue<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemorySegment>; mem_offset: CommandQueue<integer>): CLValue<T>;
    
    public function CopyTo(val: CommandQueue<CLValue<&T>>): CLValue<T>;
    
    public function CopyFrom(val: CommandQueue<CLValue<&T>>): CLValue<T>;
    
    {$endregion 3#Copy}
    
    
    