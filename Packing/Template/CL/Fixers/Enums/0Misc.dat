


# ErrorCode
!cust_memb
public function IS_ERROR := val<>0;
!cust_memb
public procedure RaiseIfError :=
if IS_ERROR then raise new OpenCLException(self.ToString);
!cust_memb
public constructor(st: CommandExecutionStatus) := self.val := st.val;



# CommandExecutionStatus
!add
Int32
false
COMPLETE	= 0x0
RUNNING		= 0x1
SUBMITTED	= 0x2
QUEUED		= 0x3
!cust_memb
public function IS_ERROR := val < 0;



# cl_bool
!rename
Bool

# cl_command_queue_properties
!rename
CommandQueuePropertyFlags

# cl_device_info
!rename
DeviceInfo

# cl_device_type
!rename
DeviceTypeFlags

# cl_map_flags
!rename
MapFlags

# cl_mem_flags
!rename
MemFlags

# cl_mem_migration_flags
!rename
MemMigrationFlags

# cl_platform_info
!rename
PlatformInfo




